{"/home/travis/build/npmtest/node-npmtest-angular-translate/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-angular-translate/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_angular_translate */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-angular-translate/lib.npmtest_angular_translate.js":{"path":"/home/travis/build/npmtest/node-npmtest-angular-translate/lib.npmtest_angular_translate.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":62}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":68}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_angular_translate */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_angular_translate = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_angular_translate = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-angular-translate/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-angular-translate/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":61}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":75},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-angular-translate && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_angular_translate */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_angular_translate","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_angular_translate.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_angular_translate.rollup.js'] =","            local.assetsDict['/assets.npmtest_angular_translate.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_angular_translate.__dirname + '/lib.npmtest_angular_translate.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-angular-translate/node_modules/angular-translate/dist/angular-translate.js":{"path":"/home/travis/build/npmtest/node-npmtest-angular-translate/node_modules/angular-translate/dist/angular-translate.js","s":{"1":2,"2":2,"3":0,"4":0,"5":2,"6":2,"7":0,"8":2,"9":2,"10":2,"11":2,"12":2,"13":2,"14":2,"15":2,"16":2,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":1,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":0,"479":0,"480":0,"481":0,"482":0,"483":0,"484":0,"485":0,"486":0,"487":0,"488":0,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"497":0,"498":0,"499":0,"500":0,"501":0,"502":0,"503":0,"504":0,"505":0,"506":0,"507":0,"508":0,"509":0,"510":0,"511":0,"512":0,"513":0,"514":0,"515":0,"516":0,"517":0,"518":0,"519":0,"520":0,"521":0,"522":0,"523":0,"524":0,"525":0,"526":0,"527":0,"528":0,"529":0,"530":0,"531":0,"532":0,"533":0,"534":0,"535":0,"536":0,"537":0,"538":0,"539":0,"540":0,"541":0,"542":0,"543":0,"544":0,"545":0,"546":0,"547":0,"548":0,"549":0,"550":0,"551":0,"552":0,"553":0,"554":0,"555":0,"556":0,"557":0,"558":0,"559":0,"560":0,"561":0,"562":0,"563":0,"564":0,"565":0,"566":0,"567":0,"568":0,"569":0,"570":0,"571":0,"572":0,"573":0,"574":0,"575":0,"576":0,"577":0,"578":0,"579":0,"580":0,"581":0,"582":0,"583":0,"584":0,"585":0,"586":0,"587":0,"588":0,"589":0,"590":0,"591":0,"592":0,"593":0,"594":0,"595":0,"596":0,"597":0,"598":0,"599":0,"600":0,"601":0,"602":0,"603":0,"604":0,"605":0,"606":0,"607":0,"608":0,"609":0,"610":0,"611":0,"612":0,"613":0,"614":0,"615":0,"616":0,"617":0,"618":0,"619":0,"620":0,"621":0,"622":0,"623":0,"624":0,"625":0,"626":0,"627":0,"628":0,"629":0,"630":0,"631":0,"632":0,"633":0,"634":0,"635":0,"636":0,"637":0,"638":0,"639":0,"640":0,"641":0,"642":0,"643":0,"644":0,"645":0,"646":0,"647":0,"648":0,"649":0,"650":0,"651":0,"652":0,"653":0,"654":0,"655":0,"656":0,"657":0,"658":0,"659":0,"660":0,"661":0,"662":0,"663":0,"664":0,"665":0,"666":0,"667":0,"668":0,"669":0,"670":0,"671":0,"672":0,"673":0,"674":0,"675":0,"676":0,"677":0,"678":0,"679":0,"680":0,"681":0,"682":0,"683":0,"684":0,"685":0,"686":0,"687":0,"688":0,"689":0,"690":0,"691":0,"692":0,"693":0,"694":0,"695":0,"696":0,"697":0,"698":0,"699":0,"700":0,"701":0,"702":0,"703":0,"704":0,"705":0,"706":0,"707":0,"708":0,"709":0,"710":0,"711":0,"712":0,"713":0,"714":1,"715":0,"716":0,"717":0,"718":0,"719":0,"720":0,"721":0,"722":0,"723":0,"724":0,"725":0,"726":0,"727":0,"728":0,"729":0,"730":0,"731":0,"732":0,"733":0,"734":0,"735":0,"736":0,"737":0,"738":0,"739":0,"740":0,"741":0,"742":0,"743":0,"744":0,"745":0,"746":0,"747":0,"748":0,"749":0,"750":0,"751":0,"752":0,"753":0,"754":0,"755":0,"756":0,"757":0,"758":0,"759":0,"760":0,"761":0,"762":0,"763":0,"764":0,"765":0,"766":0,"767":0,"768":0,"769":0,"770":0,"771":0,"772":0,"773":0,"774":0,"775":0,"776":0,"777":0,"778":0,"779":0,"780":0,"781":0,"782":0,"783":0,"784":0,"785":0,"786":0,"787":0,"788":0,"789":0,"790":0,"791":0,"792":0,"793":0,"794":0,"795":0,"796":0,"797":0,"798":0,"799":0,"800":0,"801":0,"802":0,"803":0,"804":0,"805":0,"806":0,"807":0,"808":0,"809":0,"810":0,"811":0,"812":0,"813":0,"814":0,"815":0,"816":0,"817":0,"818":0,"819":0,"820":0,"821":0,"822":0,"823":0,"824":0,"825":0,"826":0,"827":0,"828":0,"829":0,"830":0,"831":0,"832":0,"833":1,"834":0,"835":0,"836":0,"837":0,"838":0,"839":0,"840":0,"841":0,"842":0,"843":0,"844":0,"845":0,"846":0,"847":0,"848":0,"849":0,"850":0,"851":0,"852":0,"853":0,"854":0,"855":0,"856":0,"857":1,"858":0,"859":0,"860":0,"861":0,"862":0,"863":0,"864":0,"865":0,"866":0,"867":0,"868":0,"869":0,"870":0,"871":0,"872":0,"873":0,"874":0,"875":0,"876":0,"877":0,"878":0,"879":0,"880":0,"881":0,"882":0,"883":0,"884":0,"885":0,"886":0,"887":0,"888":0,"889":0,"890":0,"891":0,"892":0,"893":0,"894":0,"895":0,"896":0,"897":0,"898":0,"899":0,"900":0,"901":0,"902":0,"903":0,"904":0,"905":0,"906":0,"907":0,"908":0,"909":0,"910":0,"911":0,"912":0,"913":0,"914":0,"915":0,"916":0,"917":0,"918":0,"919":0,"920":0,"921":0,"922":0,"923":0,"924":0,"925":0,"926":0,"927":0,"928":0,"929":0,"930":0,"931":0,"932":0,"933":0,"934":0,"935":0,"936":0,"937":0,"938":0,"939":0,"940":0,"941":0,"942":0,"943":0,"944":0,"945":0,"946":0,"947":0,"948":0,"949":0,"950":0,"951":0,"952":0,"953":0,"954":0,"955":0,"956":0,"957":0,"958":0,"959":0,"960":0,"961":0,"962":0,"963":0,"964":0,"965":0,"966":0,"967":0,"968":0,"969":0,"970":0,"971":1,"972":0,"973":0,"974":0,"975":0,"976":0,"977":0,"978":1,"979":0,"980":0,"981":0,"982":0,"983":0,"984":0,"985":0,"986":0,"987":0,"988":0,"989":0,"990":0,"991":0,"992":0,"993":0,"994":0,"995":0,"996":0,"997":0,"998":0,"999":0,"1000":0,"1001":0,"1002":0,"1003":0,"1004":0,"1005":1,"1006":0,"1007":0,"1008":0,"1009":0,"1010":0,"1011":0,"1012":0,"1013":0,"1014":0,"1015":0,"1016":1,"1017":0,"1018":0,"1019":0,"1020":0,"1021":0,"1022":0,"1023":0,"1024":0,"1025":0,"1026":0,"1027":0,"1028":0,"1029":0,"1030":0,"1031":0,"1032":1,"1033":0,"1034":0,"1035":0,"1036":0,"1037":0,"1038":0,"1039":1,"1040":0,"1041":0,"1042":0,"1043":0,"1044":0,"1045":0,"1046":1,"1047":0,"1048":0,"1049":0,"1050":0,"1051":0,"1052":0,"1053":0,"1054":0,"1055":1,"1056":0,"1057":0,"1058":0,"1059":0,"1060":0,"1061":0,"1062":0,"1063":0,"1064":0,"1065":0,"1066":1,"1067":0,"1068":0,"1069":0},"b":{"1":[0,2],"2":[2,0],"3":[2,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0],"134":[0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0],"141":[0,0],"142":[0,0],"143":[0,0],"144":[0,0],"145":[0,0],"146":[0,0],"147":[0,0],"148":[0,0],"149":[0,0,0],"150":[0,0],"151":[0,0],"152":[0,0],"153":[0,0],"154":[0,0],"155":[0,0],"156":[0,0],"157":[0,0],"158":[0,0],"159":[0,0],"160":[0,0],"161":[0,0],"162":[0,0],"163":[0,0],"164":[0,0],"165":[0,0],"166":[0,0],"167":[0,0,0],"168":[0,0],"169":[0,0],"170":[0,0],"171":[0,0],"172":[0,0,0],"173":[0,0],"174":[0,0,0],"175":[0,0],"176":[0,0],"177":[0,0],"178":[0,0],"179":[0,0],"180":[0,0],"181":[0,0,0],"182":[0,0],"183":[0,0],"184":[0,0],"185":[0,0],"186":[0,0,0],"187":[0,0],"188":[0,0,0],"189":[0,0],"190":[0,0],"191":[0,0],"192":[0,0],"193":[0,0],"194":[0,0,0],"195":[0,0],"196":[0,0],"197":[0,0],"198":[0,0],"199":[0,0],"200":[0,0],"201":[0,0],"202":[0,0],"203":[0,0],"204":[0,0],"205":[0,0],"206":[0,0],"207":[0,0],"208":[0,0],"209":[0,0],"210":[0,0],"211":[0,0],"212":[0,0,0,0],"213":[0,0],"214":[0,0],"215":[0,0],"216":[0,0],"217":[0,0,0,0],"218":[0,0],"219":[0,0],"220":[0,0],"221":[0,0],"222":[0,0],"223":[0,0,0],"224":[0,0],"225":[0,0],"226":[0,0],"227":[0,0],"228":[0,0],"229":[0,0],"230":[0,0],"231":[0,0],"232":[0,0],"233":[0,0],"234":[0,0],"235":[0,0],"236":[0,0],"237":[0,0],"238":[0,0],"239":[0,0],"240":[0,0],"241":[0,0],"242":[0,0],"243":[0,0],"244":[0,0],"245":[0,0],"246":[0,0],"247":[0,0],"248":[0,0],"249":[0,0],"250":[0,0],"251":[0,0,0],"252":[0,0],"253":[0,0],"254":[0,0],"255":[0,0],"256":[0,0],"257":[0,0],"258":[0,0],"259":[0,0],"260":[0,0],"261":[0,0],"262":[0,0],"263":[0,0],"264":[0,0],"265":[0,0],"266":[0,0],"267":[0,0],"268":[0,0],"269":[0,0],"270":[0,0],"271":[0,0],"272":[0,0],"273":[0,0,0],"274":[0,0],"275":[0,0],"276":[0,0],"277":[0,0],"278":[0,0],"279":[0,0,0],"280":[0,0],"281":[0,0],"282":[0,0],"283":[0,0],"284":[0,0],"285":[0,0,0],"286":[0,0],"287":[0,0],"288":[0,0],"289":[0,0],"290":[0,0,0],"291":[0,0],"292":[0,0],"293":[0,0],"294":[0,0],"295":[0,0],"296":[0,0],"297":[0,0],"298":[0,0],"299":[0,0],"300":[0,0,0,0],"301":[0,0],"302":[0,0],"303":[0,0,0],"304":[0,0],"305":[0,0],"306":[0,0,0],"307":[0,0],"308":[0,0],"309":[0,0],"310":[0,0],"311":[0,0],"312":[0,0],"313":[0,0],"314":[0,0],"315":[0,0],"316":[0,0],"317":[0,0],"318":[0,0],"319":[0,0],"320":[0,0],"321":[0,0],"322":[0,0],"323":[0,0],"324":[0,0],"325":[0,0],"326":[0,0],"327":[0,0]},"f":{"1":2,"2":0,"3":2,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0},"fnMap":{"1":{"name":"(anonymous_1)","line":6,"loc":{"start":{"line":6,"column":1},"end":{"line":6,"column":26}}},"2":{"name":"(anonymous_2)","line":9,"loc":{"start":{"line":9,"column":15},"end":{"line":9,"column":27}}},"3":{"name":"(anonymous_3)","line":20,"loc":{"start":{"line":20,"column":8},"end":{"line":20,"column":20}}},"4":{"name":"runTranslate","line":40,"loc":{"start":{"line":40,"column":0},"end":{"line":40,"column":34}}},"5":{"name":"(anonymous_5)","line":47,"loc":{"start":{"line":47,"column":42},"end":{"line":47,"column":54}}},"6":{"name":"$translateSanitizationProvider","line":83,"loc":{"start":{"line":83,"column":0},"end":{"line":83,"column":43}}},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":14},"end":{"line":125,"column":50}}},"8":{"name":"(anonymous_8)","line":131,"loc":{"start":{"line":131,"column":12},"end":{"line":131,"column":48}}},"9":{"name":"(anonymous_9)","line":137,"loc":{"start":{"line":137,"column":24},"end":{"line":137,"column":60}}},"10":{"name":"(anonymous_10)","line":143,"loc":{"start":{"line":143,"column":22},"end":{"line":143,"column":58}}},"11":{"name":"(anonymous_11)","line":149,"loc":{"start":{"line":149,"column":9},"end":{"line":149,"column":41}}},"12":{"name":"(anonymous_12)","line":160,"loc":{"start":{"line":160,"column":19},"end":{"line":160,"column":55}}},"13":{"name":"(anonymous_13)","line":183,"loc":{"start":{"line":183,"column":21},"end":{"line":183,"column":63}}},"14":{"name":"(anonymous_14)","line":199,"loc":{"start":{"line":199,"column":24},"end":{"line":199,"column":48}}},"15":{"name":"(anonymous_15)","line":215,"loc":{"start":{"line":215,"column":21},"end":{"line":215,"column":41}}},"16":{"name":"(anonymous_16)","line":231,"loc":{"start":{"line":231,"column":36},"end":{"line":231,"column":63}}},"17":{"name":"(anonymous_17)","line":235,"loc":{"start":{"line":235,"column":26},"end":{"line":235,"column":78}}},"18":{"name":"(anonymous_18)","line":236,"loc":{"start":{"line":236,"column":42},"end":{"line":236,"column":70}}},"19":{"name":"(anonymous_19)","line":246,"loc":{"start":{"line":246,"column":64},"end":{"line":246,"column":75}}},"20":{"name":"(anonymous_20)","line":259,"loc":{"start":{"line":259,"column":42},"end":{"line":259,"column":54}}},"21":{"name":"(anonymous_21)","line":284,"loc":{"start":{"line":284,"column":20},"end":{"line":284,"column":36}}},"22":{"name":"(anonymous_22)","line":285,"loc":{"start":{"line":285,"column":15},"end":{"line":285,"column":35}}},"23":{"name":"(anonymous_23)","line":304,"loc":{"start":{"line":304,"column":16},"end":{"line":304,"column":58}}},"24":{"name":"(anonymous_24)","line":327,"loc":{"start":{"line":327,"column":24},"end":{"line":327,"column":41}}},"25":{"name":"(anonymous_25)","line":333,"loc":{"start":{"line":333,"column":26},"end":{"line":333,"column":43}}},"26":{"name":"(anonymous_26)","line":340,"loc":{"start":{"line":340,"column":23},"end":{"line":340,"column":40}}},"27":{"name":"(anonymous_27)","line":347,"loc":{"start":{"line":347,"column":35},"end":{"line":347,"column":69}}},"28":{"name":"(anonymous_28)","line":362,"loc":{"start":{"line":362,"column":29},"end":{"line":362,"column":67}}},"29":{"name":"$translate","line":397,"loc":{"start":{"line":397,"column":0},"end":{"line":397,"column":115}}},"30":{"name":"(anonymous_30)","line":431,"loc":{"start":{"line":431,"column":18},"end":{"line":431,"column":33}}},"31":{"name":"(anonymous_31)","line":434,"loc":{"start":{"line":434,"column":13},"end":{"line":434,"column":28}}},"32":{"name":"(anonymous_32)","line":439,"loc":{"start":{"line":439,"column":14},"end":{"line":439,"column":29}}},"33":{"name":"(anonymous_33)","line":444,"loc":{"start":{"line":444,"column":19},"end":{"line":444,"column":34}}},"34":{"name":"(anonymous_34)","line":454,"loc":{"start":{"line":454,"column":32},"end":{"line":454,"column":44}}},"35":{"name":"(anonymous_35)","line":489,"loc":{"start":{"line":489,"column":18},"end":{"line":489,"column":30}}},"36":{"name":"(anonymous_36)","line":510,"loc":{"start":{"line":510,"column":16},"end":{"line":510,"column":48}}},"37":{"name":"(anonymous_37)","line":528,"loc":{"start":{"line":528,"column":13},"end":{"line":528,"column":25}}},"38":{"name":"(anonymous_38)","line":532,"loc":{"start":{"line":532,"column":24},"end":{"line":532,"column":45}}},"39":{"name":"(anonymous_39)","line":619,"loc":{"start":{"line":619,"column":21},"end":{"line":619,"column":58}}},"40":{"name":"(anonymous_40)","line":652,"loc":{"start":{"line":652,"column":24},"end":{"line":652,"column":40}}},"41":{"name":"(anonymous_41)","line":672,"loc":{"start":{"line":672,"column":31},"end":{"line":672,"column":52}}},"42":{"name":"(anonymous_42)","line":688,"loc":{"start":{"line":688,"column":19},"end":{"line":688,"column":58}}},"43":{"name":"(anonymous_43)","line":729,"loc":{"start":{"line":729,"column":26},"end":{"line":729,"column":45}}},"44":{"name":"(anonymous_44)","line":743,"loc":{"start":{"line":743,"column":39},"end":{"line":743,"column":51}}},"45":{"name":"(anonymous_45)","line":759,"loc":{"start":{"line":759,"column":26},"end":{"line":759,"column":45}}},"46":{"name":"(anonymous_46)","line":774,"loc":{"start":{"line":774,"column":34},"end":{"line":774,"column":51}}},"47":{"name":"(anonymous_47)","line":791,"loc":{"start":{"line":791,"column":27},"end":{"line":791,"column":46}}},"48":{"name":"(anonymous_48)","line":798,"loc":{"start":{"line":798,"column":31},"end":{"line":798,"column":50}}},"49":{"name":"(anonymous_49)","line":823,"loc":{"start":{"line":823,"column":38},"end":{"line":823,"column":59}}},"50":{"name":"(anonymous_50)","line":840,"loc":{"start":{"line":840,"column":42},"end":{"line":840,"column":63}}},"51":{"name":"(anonymous_51)","line":859,"loc":{"start":{"line":859,"column":43},"end":{"line":859,"column":64}}},"52":{"name":"(anonymous_52)","line":880,"loc":{"start":{"line":880,"column":26},"end":{"line":880,"column":45}}},"53":{"name":"(anonymous_53)","line":885,"loc":{"start":{"line":885,"column":22},"end":{"line":885,"column":41}}},"54":{"name":"(anonymous_54)","line":922,"loc":{"start":{"line":922,"column":13},"end":{"line":922,"column":32}}},"55":{"name":"(anonymous_55)","line":944,"loc":{"start":{"line":944,"column":29},"end":{"line":944,"column":41}}},"56":{"name":"(anonymous_56)","line":958,"loc":{"start":{"line":958,"column":19},"end":{"line":958,"column":34}}},"57":{"name":"(anonymous_57)","line":982,"loc":{"start":{"line":982,"column":22},"end":{"line":982,"column":46}}},"58":{"name":"(anonymous_58)","line":996,"loc":{"start":{"line":996,"column":30},"end":{"line":996,"column":49}}},"59":{"name":"(anonymous_59)","line":1011,"loc":{"start":{"line":1011,"column":19},"end":{"line":1011,"column":53}}},"60":{"name":"(anonymous_60)","line":1026,"loc":{"start":{"line":1026,"column":25},"end":{"line":1026,"column":37}}},"61":{"name":"(anonymous_61)","line":1038,"loc":{"start":{"line":1038,"column":26},"end":{"line":1038,"column":38}}},"62":{"name":"(anonymous_62)","line":1050,"loc":{"start":{"line":1050,"column":20},"end":{"line":1050,"column":46}}},"63":{"name":"(anonymous_63)","line":1065,"loc":{"start":{"line":1065,"column":23},"end":{"line":1065,"column":41}}},"64":{"name":"(anonymous_64)","line":1085,"loc":{"start":{"line":1085,"column":41},"end":{"line":1085,"column":53}}},"65":{"name":"(anonymous_65)","line":1115,"loc":{"start":{"line":1115,"column":38},"end":{"line":1115,"column":57}}},"66":{"name":"(anonymous_66)","line":1138,"loc":{"start":{"line":1138,"column":26},"end":{"line":1138,"column":43}}},"67":{"name":"(anonymous_67)","line":1162,"loc":{"start":{"line":1162,"column":26},"end":{"line":1162,"column":43}}},"68":{"name":"(anonymous_68)","line":1208,"loc":{"start":{"line":1208,"column":28},"end":{"line":1208,"column":47}}},"69":{"name":"(anonymous_69)","line":1242,"loc":{"start":{"line":1242,"column":36},"end":{"line":1242,"column":50}}},"70":{"name":"(anonymous_70)","line":1271,"loc":{"start":{"line":1271,"column":39},"end":{"line":1271,"column":72}}},"71":{"name":"(anonymous_71)","line":1296,"loc":{"start":{"line":1296,"column":24},"end":{"line":1296,"column":41}}},"72":{"name":"(anonymous_72)","line":1324,"loc":{"start":{"line":1324,"column":27},"end":{"line":1324,"column":47}}},"73":{"name":"(anonymous_73)","line":1349,"loc":{"start":{"line":1349,"column":24},"end":{"line":1349,"column":41}}},"74":{"name":"(anonymous_74)","line":1370,"loc":{"start":{"line":1370,"column":21},"end":{"line":1370,"column":35}}},"75":{"name":"(anonymous_75)","line":1397,"loc":{"start":{"line":1397,"column":21},"end":{"line":1397,"column":38}}},"76":{"name":"(anonymous_76)","line":1431,"loc":{"start":{"line":1431,"column":56},"end":{"line":1431,"column":99}}},"77":{"name":"(anonymous_77)","line":1441,"loc":{"start":{"line":1441,"column":21},"end":{"line":1441,"column":121}}},"78":{"name":"(anonymous_78)","line":1459,"loc":{"start":{"line":1459,"column":27},"end":{"line":1459,"column":53}}},"79":{"name":"(anonymous_79)","line":1463,"loc":{"start":{"line":1463,"column":26},"end":{"line":1463,"column":51}}},"80":{"name":"(anonymous_80)","line":1465,"loc":{"start":{"line":1465,"column":29},"end":{"line":1465,"column":46}}},"81":{"name":"(anonymous_81)","line":1477,"loc":{"start":{"line":1477,"column":39},"end":{"line":1477,"column":51}}},"82":{"name":"(anonymous_82)","line":1492,"loc":{"start":{"line":1492,"column":30},"end":{"line":1492,"column":42}}},"83":{"name":"(anonymous_83)","line":1529,"loc":{"start":{"line":1529,"column":30},"end":{"line":1529,"column":42}}},"84":{"name":"(anonymous_84)","line":1557,"loc":{"start":{"line":1557,"column":34},"end":{"line":1557,"column":59}}},"85":{"name":"(anonymous_85)","line":1579,"loc":{"start":{"line":1579,"column":22},"end":{"line":1579,"column":37}}},"86":{"name":"(anonymous_86)","line":1592,"loc":{"start":{"line":1592,"column":29},"end":{"line":1592,"column":57}}},"87":{"name":"(anonymous_87)","line":1614,"loc":{"start":{"line":1614,"column":20},"end":{"line":1614,"column":35}}},"88":{"name":"(anonymous_88)","line":1637,"loc":{"start":{"line":1637,"column":28},"end":{"line":1637,"column":44}}},"89":{"name":"(anonymous_89)","line":1642,"loc":{"start":{"line":1642,"column":32},"end":{"line":1642,"column":49}}},"90":{"name":"(anonymous_90)","line":1657,"loc":{"start":{"line":1657,"column":26},"end":{"line":1657,"column":41}}},"91":{"name":"(anonymous_91)","line":1681,"loc":{"start":{"line":1681,"column":37},"end":{"line":1681,"column":68}}},"92":{"name":"(anonymous_92)","line":1704,"loc":{"start":{"line":1704,"column":30},"end":{"line":1704,"column":49}}},"93":{"name":"(anonymous_93)","line":1709,"loc":{"start":{"line":1709,"column":24},"end":{"line":1709,"column":40}}},"94":{"name":"(anonymous_94)","line":1737,"loc":{"start":{"line":1737,"column":33},"end":{"line":1737,"column":118}}},"95":{"name":"(anonymous_95)","line":1740,"loc":{"start":{"line":1740,"column":22},"end":{"line":1740,"column":50}}},"96":{"name":"(anonymous_96)","line":1782,"loc":{"start":{"line":1782,"column":40},"end":{"line":1782,"column":125}}},"97":{"name":"(anonymous_97)","line":1819,"loc":{"start":{"line":1819,"column":29},"end":{"line":1819,"column":115}}},"98":{"name":"(anonymous_98)","line":1844,"loc":{"start":{"line":1844,"column":37},"end":{"line":1844,"column":160}}},"99":{"name":"(anonymous_99)","line":1850,"loc":{"start":{"line":1850,"column":10},"end":{"line":1850,"column":26}}},"100":{"name":"(anonymous_100)","line":1853,"loc":{"start":{"line":1853,"column":10},"end":{"line":1853,"column":22}}},"101":{"name":"(anonymous_101)","line":1893,"loc":{"start":{"line":1893,"column":44},"end":{"line":1893,"column":143}}},"102":{"name":"(anonymous_102)","line":1916,"loc":{"start":{"line":1916,"column":30},"end":{"line":1916,"column":130}}},"103":{"name":"(anonymous_103)","line":1930,"loc":{"start":{"line":1930,"column":37},"end":{"line":1930,"column":113}}},"104":{"name":"(anonymous_104)","line":1935,"loc":{"start":{"line":1935,"column":31},"end":{"line":1935,"column":140}}},"105":{"name":"(anonymous_105)","line":1969,"loc":{"start":{"line":1969,"column":18},"end":{"line":1969,"column":41}}},"106":{"name":"(anonymous_106)","line":1971,"loc":{"start":{"line":1971,"column":15},"end":{"line":1971,"column":41}}},"107":{"name":"(anonymous_107)","line":1994,"loc":{"start":{"line":1994,"column":38},"end":{"line":1994,"column":123}}},"108":{"name":"(anonymous_108)","line":2041,"loc":{"start":{"line":2041,"column":34},"end":{"line":2041,"column":49}}},"109":{"name":"(anonymous_109)","line":2048,"loc":{"start":{"line":2048,"column":30},"end":{"line":2048,"column":132}}},"110":{"name":"(anonymous_110)","line":2065,"loc":{"start":{"line":2065,"column":36},"end":{"line":2065,"column":51}}},"111":{"name":"(anonymous_111)","line":2067,"loc":{"start":{"line":2067,"column":48},"end":{"line":2067,"column":71}}},"112":{"name":"(anonymous_112)","line":2086,"loc":{"start":{"line":2086,"column":35},"end":{"line":2086,"column":54}}},"113":{"name":"(anonymous_113)","line":2103,"loc":{"start":{"line":2103,"column":32},"end":{"line":2103,"column":44}}},"114":{"name":"(anonymous_114)","line":2117,"loc":{"start":{"line":2117,"column":39},"end":{"line":2117,"column":51}}},"115":{"name":"(anonymous_115)","line":2133,"loc":{"start":{"line":2133,"column":34},"end":{"line":2133,"column":53}}},"116":{"name":"(anonymous_116)","line":2170,"loc":{"start":{"line":2170,"column":37},"end":{"line":2170,"column":56}}},"117":{"name":"(anonymous_117)","line":2195,"loc":{"start":{"line":2195,"column":34},"end":{"line":2195,"column":46}}},"118":{"name":"(anonymous_118)","line":2209,"loc":{"start":{"line":2209,"column":25},"end":{"line":2209,"column":37}}},"119":{"name":"(anonymous_119)","line":2254,"loc":{"start":{"line":2254,"column":21},"end":{"line":2254,"column":36}}},"120":{"name":"(anonymous_120)","line":2279,"loc":{"start":{"line":2279,"column":48},"end":{"line":2279,"column":71}}},"121":{"name":"(anonymous_121)","line":2286,"loc":{"start":{"line":2286,"column":11},"end":{"line":2286,"column":26}}},"122":{"name":"(anonymous_122)","line":2292,"loc":{"start":{"line":2292,"column":37},"end":{"line":2292,"column":49}}},"123":{"name":"(anonymous_123)","line":2298,"loc":{"start":{"line":2298,"column":31},"end":{"line":2298,"column":54}}},"124":{"name":"(anonymous_124)","line":2304,"loc":{"start":{"line":2304,"column":11},"end":{"line":2304,"column":26}}},"125":{"name":"(anonymous_125)","line":2330,"loc":{"start":{"line":2330,"column":37},"end":{"line":2330,"column":49}}},"126":{"name":"(anonymous_126)","line":2344,"loc":{"start":{"line":2344,"column":28},"end":{"line":2344,"column":40}}},"127":{"name":"(anonymous_127)","line":2358,"loc":{"start":{"line":2358,"column":40},"end":{"line":2358,"column":52}}},"128":{"name":"(anonymous_128)","line":2372,"loc":{"start":{"line":2372,"column":43},"end":{"line":2372,"column":55}}},"129":{"name":"(anonymous_129)","line":2386,"loc":{"start":{"line":2386,"column":31},"end":{"line":2386,"column":43}}},"130":{"name":"(anonymous_130)","line":2419,"loc":{"start":{"line":2419,"column":25},"end":{"line":2419,"column":44}}},"131":{"name":"loadNewData","line":2429,"loc":{"start":{"line":2429,"column":6},"end":{"line":2429,"column":40}}},"132":{"name":"(anonymous_132)","line":2434,"loc":{"start":{"line":2434,"column":21},"end":{"line":2434,"column":37}}},"133":{"name":"(anonymous_133)","line":2449,"loc":{"start":{"line":2449,"column":8},"end":{"line":2449,"column":20}}},"134":{"name":"(anonymous_134)","line":2465,"loc":{"start":{"line":2465,"column":8},"end":{"line":2465,"column":20}}},"135":{"name":"(anonymous_135)","line":2511,"loc":{"start":{"line":2511,"column":25},"end":{"line":2511,"column":119}}},"136":{"name":"(anonymous_136)","line":2603,"loc":{"start":{"line":2603,"column":29},"end":{"line":2603,"column":41}}},"137":{"name":"(anonymous_137)","line":2617,"loc":{"start":{"line":2617,"column":29},"end":{"line":2617,"column":41}}},"138":{"name":"(anonymous_138)","line":2622,"loc":{"start":{"line":2622,"column":35},"end":{"line":2622,"column":47}}},"139":{"name":"(anonymous_139)","line":2627,"loc":{"start":{"line":2627,"column":32},"end":{"line":2627,"column":44}}},"140":{"name":"(anonymous_140)","line":2643,"loc":{"start":{"line":2643,"column":25},"end":{"line":2643,"column":37}}},"141":{"name":"(anonymous_141)","line":2648,"loc":{"start":{"line":2648,"column":34},"end":{"line":2648,"column":46}}},"142":{"name":"(anonymous_142)","line":2665,"loc":{"start":{"line":2665,"column":25},"end":{"line":2665,"column":39}}},"143":{"name":"(anonymous_143)","line":2690,"loc":{"start":{"line":2690,"column":42},"end":{"line":2690,"column":54}}},"144":{"name":"(anonymous_144)","line":2713,"loc":{"start":{"line":2713,"column":37},"end":{"line":2713,"column":56}}},"145":{"name":"(anonymous_145)","line":2722,"loc":{"start":{"line":2722,"column":66},"end":{"line":2722,"column":78}}},"146":{"name":"(anonymous_146)","line":2727,"loc":{"start":{"line":2727,"column":71},"end":{"line":2727,"column":83}}},"147":{"name":"(anonymous_147)","line":2746,"loc":{"start":{"line":2746,"column":33},"end":{"line":2746,"column":56}}},"148":{"name":"$translateDefaultInterpolation","line":2785,"loc":{"start":{"line":2785,"column":0},"end":{"line":2785,"column":79}}},"149":{"name":"(anonymous_149)","line":2803,"loc":{"start":{"line":2803,"column":37},"end":{"line":2803,"column":55}}},"150":{"name":"(anonymous_150)","line":2817,"loc":{"start":{"line":2817,"column":54},"end":{"line":2817,"column":66}}},"151":{"name":"(anonymous_151)","line":2825,"loc":{"start":{"line":2825,"column":52},"end":{"line":2825,"column":69}}},"152":{"name":"(anonymous_152)","line":2849,"loc":{"start":{"line":2849,"column":39},"end":{"line":2849,"column":119}}},"153":{"name":"translateDirective","line":2972,"loc":{"start":{"line":2972,"column":0},"end":{"line":2972,"column":84}}},"154":{"name":"(anonymous_154)","line":2985,"loc":{"start":{"line":2985,"column":13},"end":{"line":2985,"column":24}}},"155":{"name":"(anonymous_155)","line":2993,"loc":{"start":{"line":2993,"column":13},"end":{"line":2993,"column":40}}},"156":{"name":"linkFn","line":3006,"loc":{"start":{"line":3006,"column":13},"end":{"line":3006,"column":53}}},"157":{"name":"(anonymous_157)","line":3014,"loc":{"start":{"line":3014,"column":38},"end":{"line":3014,"column":81}}},"158":{"name":"(anonymous_158)","line":3033,"loc":{"start":{"line":3033,"column":40},"end":{"line":3033,"column":65}}},"159":{"name":"(anonymous_159)","line":3053,"loc":{"start":{"line":3053,"column":88},"end":{"line":3053,"column":108}}},"160":{"name":"(anonymous_160)","line":3068,"loc":{"start":{"line":3068,"column":42},"end":{"line":3068,"column":67}}},"161":{"name":"(anonymous_161)","line":3069,"loc":{"start":{"line":3069,"column":40},"end":{"line":3069,"column":65}}},"162":{"name":"(anonymous_162)","line":3079,"loc":{"start":{"line":3079,"column":36},"end":{"line":3079,"column":61}}},"163":{"name":"(anonymous_163)","line":3099,"loc":{"start":{"line":3099,"column":43},"end":{"line":3099,"column":60}}},"164":{"name":"(anonymous_164)","line":3105,"loc":{"start":{"line":3105,"column":44},"end":{"line":3105,"column":73}}},"165":{"name":"(anonymous_165)","line":3107,"loc":{"start":{"line":3107,"column":35},"end":{"line":3107,"column":47}}},"166":{"name":"(anonymous_166)","line":3115,"loc":{"start":{"line":3115,"column":38},"end":{"line":3115,"column":58}}},"167":{"name":"(anonymous_167)","line":3116,"loc":{"start":{"line":3116,"column":37},"end":{"line":3116,"column":54}}},"168":{"name":"(anonymous_168)","line":3129,"loc":{"start":{"line":3129,"column":33},"end":{"line":3129,"column":45}}},"169":{"name":"(anonymous_169)","line":3138,"loc":{"start":{"line":3138,"column":32},"end":{"line":3138,"column":141}}},"170":{"name":"(anonymous_170)","line":3146,"loc":{"start":{"line":3146,"column":20},"end":{"line":3146,"column":43}}},"171":{"name":"(anonymous_171)","line":3148,"loc":{"start":{"line":3148,"column":17},"end":{"line":3148,"column":42}}},"172":{"name":"(anonymous_172)","line":3157,"loc":{"start":{"line":3157,"column":31},"end":{"line":3157,"column":82}}},"173":{"name":"getTranslateNamespace","line":3221,"loc":{"start":{"line":3221,"column":0},"end":{"line":3221,"column":38}}},"174":{"name":"translateAttrDirective","line":3291,"loc":{"start":{"line":3291,"column":0},"end":{"line":3291,"column":56}}},"175":{"name":"linkFn","line":3298,"loc":{"start":{"line":3298,"column":10},"end":{"line":3298,"column":48}}},"176":{"name":"(anonymous_176)","line":3305,"loc":{"start":{"line":3305,"column":31},"end":{"line":3305,"column":43}}},"177":{"name":"(anonymous_177)","line":3306,"loc":{"start":{"line":3306,"column":39},"end":{"line":3306,"column":79}}},"178":{"name":"(anonymous_178)","line":3317,"loc":{"start":{"line":3317,"column":18},"end":{"line":3317,"column":41}}},"179":{"name":"(anonymous_179)","line":3319,"loc":{"start":{"line":3319,"column":15},"end":{"line":3319,"column":40}}},"180":{"name":"(anonymous_180)","line":3325,"loc":{"start":{"line":3325,"column":44},"end":{"line":3325,"column":75}}},"181":{"name":"(anonymous_181)","line":3337,"loc":{"start":{"line":3337,"column":8},"end":{"line":3337,"column":28}}},"182":{"name":"(anonymous_182)","line":3344,"loc":{"start":{"line":3344,"column":8},"end":{"line":3344,"column":28}}},"183":{"name":"watchAttribute","line":3365,"loc":{"start":{"line":3365,"column":0},"end":{"line":3365,"column":73}}},"184":{"name":"(anonymous_184)","line":3373,"loc":{"start":{"line":3373,"column":28},"end":{"line":3373,"column":47}}},"185":{"name":"translateCloakDirective","line":3406,"loc":{"start":{"line":3406,"column":0},"end":{"line":3406,"column":57}}},"186":{"name":"(anonymous_186)","line":3411,"loc":{"start":{"line":3411,"column":14},"end":{"line":3411,"column":34}}},"187":{"name":"(anonymous_187)","line":3412,"loc":{"start":{"line":3412,"column":23},"end":{"line":3412,"column":42}}},"188":{"name":"(anonymous_188)","line":3415,"loc":{"start":{"line":3415,"column":22},"end":{"line":3415,"column":41}}},"189":{"name":"linkFn","line":3420,"loc":{"start":{"line":3420,"column":13},"end":{"line":3420,"column":53}}},"190":{"name":"(anonymous_190)","line":3425,"loc":{"start":{"line":3425,"column":43},"end":{"line":3425,"column":68}}},"191":{"name":"(anonymous_191)","line":3428,"loc":{"start":{"line":3428,"column":52},"end":{"line":3428,"column":64}}},"192":{"name":"translateNamespaceDirective","line":3493,"loc":{"start":{"line":3493,"column":0},"end":{"line":3493,"column":39}}},"193":{"name":"(anonymous_193)","line":3500,"loc":{"start":{"line":3500,"column":13},"end":{"line":3500,"column":25}}},"194":{"name":"(anonymous_194)","line":3502,"loc":{"start":{"line":3502,"column":13},"end":{"line":3502,"column":48}}},"195":{"name":"getTranslateNamespace","line":3522,"loc":{"start":{"line":3522,"column":0},"end":{"line":3522,"column":38}}},"196":{"name":"translateLanguageDirective","line":3581,"loc":{"start":{"line":3581,"column":0},"end":{"line":3581,"column":38}}},"197":{"name":"(anonymous_197)","line":3588,"loc":{"start":{"line":3588,"column":13},"end":{"line":3588,"column":25}}},"198":{"name":"linkFn","line":3589,"loc":{"start":{"line":3589,"column":13},"end":{"line":3589,"column":54}}},"199":{"name":"(anonymous_199)","line":3591,"loc":{"start":{"line":3591,"column":45},"end":{"line":3591,"column":77}}},"200":{"name":"(anonymous_200)","line":3595,"loc":{"start":{"line":3595,"column":42},"end":{"line":3595,"column":52}}},"201":{"name":"translateFilterFactory","line":3659,"loc":{"start":{"line":3659,"column":0},"end":{"line":3659,"column":52}}},"202":{"name":"(anonymous_202)","line":3663,"loc":{"start":{"line":3663,"column":24},"end":{"line":3663,"column":98}}},"203":{"name":"$translationCache","line":3699,"loc":{"start":{"line":3699,"column":0},"end":{"line":3699,"column":42}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":3709,"column":4}},"2":{"start":{"line":7,"column":2},"end":{"line":19,"column":3}},"3":{"start":{"line":9,"column":4},"end":{"line":11,"column":7}},"4":{"start":{"line":10,"column":6},"end":{"line":10,"column":25}},"5":{"start":{"line":12,"column":9},"end":{"line":19,"column":3}},"6":{"start":{"line":16,"column":4},"end":{"line":16,"column":31}},"7":{"start":{"line":18,"column":4},"end":{"line":18,"column":14}},"8":{"start":{"line":29,"column":0},"end":{"line":29,"column":38}},"9":{"start":{"line":30,"column":0},"end":{"line":30,"column":125}},"10":{"start":{"line":31,"column":0},"end":{"line":31,"column":84}},"11":{"start":{"line":32,"column":0},"end":{"line":32,"column":96}},"12":{"start":{"line":33,"column":0},"end":{"line":33,"column":62}},"13":{"start":{"line":34,"column":0},"end":{"line":34,"column":63}},"14":{"start":{"line":35,"column":0},"end":{"line":35,"column":58}},"15":{"start":{"line":36,"column":0},"end":{"line":36,"column":46}},"16":{"start":{"line":37,"column":0},"end":{"line":38,"column":21}},"17":{"start":{"line":40,"column":0},"end":{"line":69,"column":1}},"18":{"start":{"line":44,"column":2},"end":{"line":45,"column":35}},"19":{"start":{"line":47,"column":2},"end":{"line":56,"column":4}},"20":{"start":{"line":48,"column":4},"end":{"line":48,"column":51}},"21":{"start":{"line":49,"column":4},"end":{"line":55,"column":5}},"22":{"start":{"line":50,"column":6},"end":{"line":50,"column":32}},"23":{"start":{"line":54,"column":6},"end":{"line":54,"column":41}},"24":{"start":{"line":58,"column":2},"end":{"line":58,"column":86}},"25":{"start":{"line":60,"column":2},"end":{"line":68,"column":3}},"26":{"start":{"line":61,"column":4},"end":{"line":65,"column":5}},"27":{"start":{"line":62,"column":6},"end":{"line":62,"column":42}},"28":{"start":{"line":64,"column":6},"end":{"line":64,"column":83}},"29":{"start":{"line":66,"column":9},"end":{"line":68,"column":3}},"30":{"start":{"line":67,"column":4},"end":{"line":67,"column":51}},"31":{"start":{"line":71,"column":0},"end":{"line":71,"column":42}},"32":{"start":{"line":81,"column":0},"end":{"line":81,"column":108}},"33":{"start":{"line":83,"column":0},"end":{"line":382,"column":1}},"34":{"start":{"line":87,"column":2},"end":{"line":92,"column":17}},"35":{"start":{"line":124,"column":2},"end":{"line":166,"column":4}},"36":{"start":{"line":126,"column":6},"end":{"line":128,"column":7}},"37":{"start":{"line":127,"column":8},"end":{"line":127,"column":41}},"38":{"start":{"line":129,"column":6},"end":{"line":129,"column":19}},"39":{"start":{"line":132,"column":6},"end":{"line":134,"column":7}},"40":{"start":{"line":133,"column":8},"end":{"line":133,"column":39}},"41":{"start":{"line":135,"column":6},"end":{"line":135,"column":19}},"42":{"start":{"line":138,"column":6},"end":{"line":140,"column":7}},"43":{"start":{"line":139,"column":8},"end":{"line":139,"column":69}},"44":{"start":{"line":141,"column":6},"end":{"line":141,"column":19}},"45":{"start":{"line":144,"column":6},"end":{"line":146,"column":7}},"46":{"start":{"line":145,"column":8},"end":{"line":145,"column":67}},"47":{"start":{"line":147,"column":6},"end":{"line":147,"column":19}},"48":{"start":{"line":150,"column":6},"end":{"line":157,"column":7}},"49":{"start":{"line":151,"column":8},"end":{"line":151,"column":38}},"50":{"start":{"line":152,"column":13},"end":{"line":157,"column":7}},"51":{"start":{"line":153,"column":8},"end":{"line":156,"column":9}},"52":{"start":{"line":155,"column":10},"end":{"line":155,"column":69}},"53":{"start":{"line":158,"column":6},"end":{"line":158,"column":19}},"54":{"start":{"line":161,"column":6},"end":{"line":163,"column":7}},"55":{"start":{"line":162,"column":8},"end":{"line":162,"column":66}},"56":{"start":{"line":164,"column":6},"end":{"line":164,"column":19}},"57":{"start":{"line":169,"column":2},"end":{"line":169,"column":51}},"58":{"start":{"line":183,"column":2},"end":{"line":186,"column":4}},"59":{"start":{"line":184,"column":4},"end":{"line":184,"column":48}},"60":{"start":{"line":185,"column":4},"end":{"line":185,"column":16}},"61":{"start":{"line":199,"column":2},"end":{"line":202,"column":4}},"62":{"start":{"line":200,"column":4},"end":{"line":200,"column":36}},"63":{"start":{"line":201,"column":4},"end":{"line":201,"column":16}},"64":{"start":{"line":215,"column":2},"end":{"line":219,"column":4}},"65":{"start":{"line":216,"column":4},"end":{"line":216,"column":33}},"66":{"start":{"line":217,"column":4},"end":{"line":217,"column":31}},"67":{"start":{"line":218,"column":4},"end":{"line":218,"column":16}},"68":{"start":{"line":231,"column":2},"end":{"line":325,"column":5}},"69":{"start":{"line":233,"column":4},"end":{"line":233,"column":31}},"70":{"start":{"line":235,"column":4},"end":{"line":256,"column":6}},"71":{"start":{"line":236,"column":6},"end":{"line":254,"column":9}},"72":{"start":{"line":237,"column":8},"end":{"line":253,"column":9}},"73":{"start":{"line":238,"column":10},"end":{"line":238,"column":57}},"74":{"start":{"line":239,"column":15},"end":{"line":253,"column":9}},"75":{"start":{"line":240,"column":10},"end":{"line":240,"column":69}},"76":{"start":{"line":241,"column":15},"end":{"line":253,"column":9}},"77":{"start":{"line":242,"column":10},"end":{"line":249,"column":11}},"78":{"start":{"line":243,"column":12},"end":{"line":248,"column":13}},"79":{"start":{"line":244,"column":14},"end":{"line":244,"column":108}},"80":{"start":{"line":246,"column":14},"end":{"line":246,"column":78}},"81":{"start":{"line":247,"column":14},"end":{"line":247,"column":140}},"82":{"start":{"line":250,"column":10},"end":{"line":250,"column":88}},"83":{"start":{"line":252,"column":10},"end":{"line":252,"column":136}},"84":{"start":{"line":255,"column":6},"end":{"line":255,"column":19}},"85":{"start":{"line":259,"column":4},"end":{"line":264,"column":6}},"86":{"start":{"line":260,"column":6},"end":{"line":263,"column":7}},"87":{"start":{"line":261,"column":8},"end":{"line":261,"column":236}},"88":{"start":{"line":262,"column":8},"end":{"line":262,"column":51}},"89":{"start":{"line":266,"column":4},"end":{"line":268,"column":5}},"90":{"start":{"line":267,"column":6},"end":{"line":267,"column":45}},"91":{"start":{"line":269,"column":4},"end":{"line":271,"column":5}},"92":{"start":{"line":270,"column":6},"end":{"line":270,"column":35}},"93":{"start":{"line":273,"column":4},"end":{"line":324,"column":6}},"94":{"start":{"line":285,"column":8},"end":{"line":287,"column":10}},"95":{"start":{"line":286,"column":10},"end":{"line":286,"column":37}},"96":{"start":{"line":305,"column":8},"end":{"line":307,"column":9}},"97":{"start":{"line":306,"column":10},"end":{"line":306,"column":44}},"98":{"start":{"line":309,"column":8},"end":{"line":311,"column":9}},"99":{"start":{"line":310,"column":10},"end":{"line":310,"column":37}},"100":{"start":{"line":313,"column":8},"end":{"line":315,"column":9}},"101":{"start":{"line":314,"column":10},"end":{"line":314,"column":23}},"102":{"start":{"line":317,"column":8},"end":{"line":319,"column":9}},"103":{"start":{"line":318,"column":10},"end":{"line":318,"column":30}},"104":{"start":{"line":321,"column":8},"end":{"line":321,"column":83}},"105":{"start":{"line":322,"column":8},"end":{"line":322,"column":73}},"106":{"start":{"line":327,"column":2},"end":{"line":331,"column":4}},"107":{"start":{"line":328,"column":4},"end":{"line":328,"column":49}},"108":{"start":{"line":329,"column":4},"end":{"line":329,"column":24}},"109":{"start":{"line":330,"column":4},"end":{"line":330,"column":26}},"110":{"start":{"line":333,"column":2},"end":{"line":338,"column":4}},"111":{"start":{"line":334,"column":4},"end":{"line":336,"column":5}},"112":{"start":{"line":335,"column":6},"end":{"line":335,"column":277}},"113":{"start":{"line":337,"column":4},"end":{"line":337,"column":28}},"114":{"start":{"line":340,"column":2},"end":{"line":345,"column":4}},"115":{"start":{"line":341,"column":4},"end":{"line":343,"column":5}},"116":{"start":{"line":342,"column":6},"end":{"line":342,"column":104}},"117":{"start":{"line":344,"column":4},"end":{"line":344,"column":35}},"118":{"start":{"line":347,"column":2},"end":{"line":381,"column":4}},"119":{"start":{"line":348,"column":4},"end":{"line":380,"column":5}},"120":{"start":{"line":349,"column":6},"end":{"line":349,"column":19}},"121":{"start":{"line":350,"column":11},"end":{"line":380,"column":5}},"122":{"start":{"line":351,"column":6},"end":{"line":351,"column":52}},"123":{"start":{"line":353,"column":6},"end":{"line":359,"column":7}},"124":{"start":{"line":354,"column":8},"end":{"line":354,"column":19}},"125":{"start":{"line":356,"column":8},"end":{"line":358,"column":9}},"126":{"start":{"line":357,"column":10},"end":{"line":357,"column":132}},"127":{"start":{"line":361,"column":6},"end":{"line":361,"column":24}},"128":{"start":{"line":362,"column":6},"end":{"line":370,"column":9}},"129":{"start":{"line":365,"column":8},"end":{"line":367,"column":9}},"130":{"start":{"line":366,"column":10},"end":{"line":366,"column":17}},"131":{"start":{"line":369,"column":8},"end":{"line":369,"column":89}},"132":{"start":{"line":371,"column":6},"end":{"line":371,"column":26}},"133":{"start":{"line":373,"column":6},"end":{"line":373,"column":20}},"134":{"start":{"line":374,"column":11},"end":{"line":380,"column":5}},"135":{"start":{"line":375,"column":6},"end":{"line":375,"column":19}},"136":{"start":{"line":376,"column":11},"end":{"line":380,"column":5}},"137":{"start":{"line":377,"column":6},"end":{"line":377,"column":29}},"138":{"start":{"line":379,"column":6},"end":{"line":379,"column":19}},"139":{"start":{"line":393,"column":0},"end":{"line":395,"column":38}},"140":{"start":{"line":397,"column":0},"end":{"line":2764,"column":1}},"141":{"start":{"line":401,"column":2},"end":{"line":449,"column":6}},"142":{"start":{"line":432,"column":8},"end":{"line":432,"column":48}},"143":{"start":{"line":435,"column":8},"end":{"line":435,"column":52}},"144":{"start":{"line":436,"column":8},"end":{"line":436,"column":36}},"145":{"start":{"line":437,"column":8},"end":{"line":437,"column":97}},"146":{"start":{"line":440,"column":8},"end":{"line":440,"column":52}},"147":{"start":{"line":441,"column":8},"end":{"line":441,"column":36}},"148":{"start":{"line":442,"column":8},"end":{"line":442,"column":97}},"149":{"start":{"line":445,"column":8},"end":{"line":445,"column":52}},"150":{"start":{"line":446,"column":8},"end":{"line":446,"column":36}},"151":{"start":{"line":447,"column":8},"end":{"line":447,"column":38}},"152":{"start":{"line":451,"column":2},"end":{"line":451,"column":25}},"153":{"start":{"line":454,"column":2},"end":{"line":485,"column":4}},"154":{"start":{"line":457,"column":4},"end":{"line":459,"column":5}},"155":{"start":{"line":458,"column":6},"end":{"line":458,"column":56}},"156":{"start":{"line":461,"column":4},"end":{"line":464,"column":15}},"157":{"start":{"line":467,"column":4},"end":{"line":474,"column":5}},"158":{"start":{"line":468,"column":6},"end":{"line":473,"column":7}},"159":{"start":{"line":469,"column":8},"end":{"line":469,"column":36}},"160":{"start":{"line":470,"column":8},"end":{"line":472,"column":9}},"161":{"start":{"line":471,"column":10},"end":{"line":471,"column":26}},"162":{"start":{"line":477,"column":4},"end":{"line":482,"column":5}},"163":{"start":{"line":478,"column":6},"end":{"line":478,"column":53}},"164":{"start":{"line":479,"column":6},"end":{"line":481,"column":7}},"165":{"start":{"line":480,"column":8},"end":{"line":480,"column":24}},"166":{"start":{"line":484,"column":4},"end":{"line":484,"column":16}},"167":{"start":{"line":486,"column":2},"end":{"line":486,"column":93}},"168":{"start":{"line":489,"column":2},"end":{"line":495,"column":4}},"169":{"start":{"line":490,"column":4},"end":{"line":490,"column":49}},"170":{"start":{"line":491,"column":4},"end":{"line":493,"column":5}},"171":{"start":{"line":492,"column":6},"end":{"line":492,"column":71}},"172":{"start":{"line":494,"column":4},"end":{"line":494,"column":18}},"173":{"start":{"line":496,"column":2},"end":{"line":496,"column":65}},"174":{"start":{"line":510,"column":2},"end":{"line":517,"column":4}},"175":{"start":{"line":511,"column":4},"end":{"line":515,"column":5}},"176":{"start":{"line":512,"column":6},"end":{"line":514,"column":7}},"177":{"start":{"line":513,"column":8},"end":{"line":513,"column":17}},"178":{"start":{"line":516,"column":4},"end":{"line":516,"column":14}},"179":{"start":{"line":528,"column":2},"end":{"line":530,"column":4}},"180":{"start":{"line":529,"column":4},"end":{"line":529,"column":53}},"181":{"start":{"line":532,"column":2},"end":{"line":581,"column":4}},"182":{"start":{"line":533,"column":4},"end":{"line":535,"column":5}},"183":{"start":{"line":534,"column":6},"end":{"line":534,"column":13}},"184":{"start":{"line":537,"column":4},"end":{"line":540,"column":40}},"185":{"start":{"line":542,"column":4},"end":{"line":544,"column":5}},"186":{"start":{"line":543,"column":6},"end":{"line":543,"column":63}},"187":{"start":{"line":547,"column":4},"end":{"line":549,"column":5}},"188":{"start":{"line":548,"column":6},"end":{"line":548,"column":23}},"189":{"start":{"line":551,"column":4},"end":{"line":570,"column":5}},"190":{"start":{"line":552,"column":6},"end":{"line":552,"column":16}},"191":{"start":{"line":553,"column":6},"end":{"line":569,"column":7}},"192":{"start":{"line":554,"column":8},"end":{"line":568,"column":9}},"193":{"start":{"line":555,"column":10},"end":{"line":555,"column":37}},"194":{"start":{"line":556,"column":10},"end":{"line":557,"column":77}},"195":{"start":{"line":559,"column":10},"end":{"line":561,"column":11}},"196":{"start":{"line":560,"column":12},"end":{"line":560,"column":103}},"197":{"start":{"line":562,"column":10},"end":{"line":567,"column":11}},"198":{"start":{"line":563,"column":12},"end":{"line":563,"column":54}},"199":{"start":{"line":564,"column":12},"end":{"line":566,"column":13}},"200":{"start":{"line":565,"column":14},"end":{"line":565,"column":27}},"201":{"start":{"line":573,"column":4},"end":{"line":573,"column":37}},"202":{"start":{"line":575,"column":4},"end":{"line":577,"column":5}},"203":{"start":{"line":576,"column":6},"end":{"line":576,"column":22}},"204":{"start":{"line":580,"column":4},"end":{"line":580,"column":11}},"205":{"start":{"line":619,"column":2},"end":{"line":636,"column":4}},"206":{"start":{"line":621,"column":4},"end":{"line":623,"column":5}},"207":{"start":{"line":622,"column":6},"end":{"line":622,"column":31}},"208":{"start":{"line":625,"column":4},"end":{"line":634,"column":5}},"209":{"start":{"line":626,"column":6},"end":{"line":628,"column":7}},"210":{"start":{"line":627,"column":8},"end":{"line":627,"column":42}},"211":{"start":{"line":630,"column":6},"end":{"line":632,"column":7}},"212":{"start":{"line":631,"column":8},"end":{"line":631,"column":40}},"213":{"start":{"line":633,"column":6},"end":{"line":633,"column":79}},"214":{"start":{"line":635,"column":4},"end":{"line":635,"column":16}},"215":{"start":{"line":638,"column":2},"end":{"line":638,"column":35}},"216":{"start":{"line":652,"column":2},"end":{"line":658,"column":4}},"217":{"start":{"line":653,"column":4},"end":{"line":655,"column":5}},"218":{"start":{"line":654,"column":6},"end":{"line":654,"column":29}},"219":{"start":{"line":656,"column":4},"end":{"line":656,"column":27}},"220":{"start":{"line":657,"column":4},"end":{"line":657,"column":16}},"221":{"start":{"line":672,"column":2},"end":{"line":678,"column":4}},"222":{"start":{"line":673,"column":4},"end":{"line":675,"column":5}},"223":{"start":{"line":674,"column":6},"end":{"line":674,"column":36}},"224":{"start":{"line":676,"column":4},"end":{"line":676,"column":39}},"225":{"start":{"line":677,"column":4},"end":{"line":677,"column":16}},"226":{"start":{"line":688,"column":2},"end":{"line":716,"column":4}},"227":{"start":{"line":689,"column":4},"end":{"line":689,"column":48}},"228":{"start":{"line":691,"column":4},"end":{"line":693,"column":5}},"229":{"start":{"line":692,"column":6},"end":{"line":692,"column":16}},"230":{"start":{"line":694,"column":4},"end":{"line":696,"column":5}},"231":{"start":{"line":695,"column":6},"end":{"line":695,"column":18}},"232":{"start":{"line":697,"column":4},"end":{"line":714,"column":5}},"233":{"start":{"line":698,"column":6},"end":{"line":700,"column":7}},"234":{"start":{"line":699,"column":8},"end":{"line":699,"column":17}},"235":{"start":{"line":701,"column":6},"end":{"line":701,"column":22}},"236":{"start":{"line":702,"column":6},"end":{"line":713,"column":7}},"237":{"start":{"line":703,"column":8},"end":{"line":703,"column":55}},"238":{"start":{"line":705,"column":8},"end":{"line":705,"column":114}},"239":{"start":{"line":706,"column":8},"end":{"line":711,"column":9}},"240":{"start":{"line":708,"column":10},"end":{"line":708,"column":68}},"241":{"start":{"line":710,"column":10},"end":{"line":710,"column":56}},"242":{"start":{"line":712,"column":8},"end":{"line":712,"column":34}},"243":{"start":{"line":715,"column":4},"end":{"line":715,"column":18}},"244":{"start":{"line":717,"column":2},"end":{"line":717,"column":40}},"245":{"start":{"line":729,"column":2},"end":{"line":732,"column":4}},"246":{"start":{"line":730,"column":4},"end":{"line":730,"column":41}},"247":{"start":{"line":731,"column":4},"end":{"line":731,"column":16}},"248":{"start":{"line":743,"column":2},"end":{"line":745,"column":4}},"249":{"start":{"line":744,"column":4},"end":{"line":744,"column":73}},"250":{"start":{"line":759,"column":2},"end":{"line":762,"column":4}},"251":{"start":{"line":760,"column":4},"end":{"line":760,"column":36}},"252":{"start":{"line":761,"column":4},"end":{"line":761,"column":16}},"253":{"start":{"line":774,"column":2},"end":{"line":777,"column":4}},"254":{"start":{"line":775,"column":4},"end":{"line":775,"column":54}},"255":{"start":{"line":776,"column":4},"end":{"line":776,"column":16}},"256":{"start":{"line":791,"column":2},"end":{"line":797,"column":4}},"257":{"start":{"line":792,"column":4},"end":{"line":795,"column":5}},"258":{"start":{"line":793,"column":6},"end":{"line":793,"column":38}},"259":{"start":{"line":794,"column":6},"end":{"line":794,"column":18}},"260":{"start":{"line":796,"column":4},"end":{"line":796,"column":30}},"261":{"start":{"line":798,"column":2},"end":{"line":803,"column":4}},"262":{"start":{"line":799,"column":4},"end":{"line":801,"column":5}},"263":{"start":{"line":800,"column":6},"end":{"line":800,"column":35}},"264":{"start":{"line":802,"column":4},"end":{"line":802,"column":30}},"265":{"start":{"line":823,"column":2},"end":{"line":827,"column":4}},"266":{"start":{"line":824,"column":4},"end":{"line":824,"column":53}},"267":{"start":{"line":825,"column":4},"end":{"line":825,"column":54}},"268":{"start":{"line":826,"column":4},"end":{"line":826,"column":16}},"269":{"start":{"line":840,"column":2},"end":{"line":846,"column":4}},"270":{"start":{"line":841,"column":4},"end":{"line":843,"column":5}},"271":{"start":{"line":842,"column":6},"end":{"line":842,"column":36}},"272":{"start":{"line":844,"column":4},"end":{"line":844,"column":39}},"273":{"start":{"line":845,"column":4},"end":{"line":845,"column":16}},"274":{"start":{"line":859,"column":2},"end":{"line":865,"column":4}},"275":{"start":{"line":860,"column":4},"end":{"line":862,"column":5}},"276":{"start":{"line":861,"column":6},"end":{"line":861,"column":37}},"277":{"start":{"line":863,"column":4},"end":{"line":863,"column":40}},"278":{"start":{"line":864,"column":4},"end":{"line":864,"column":16}},"279":{"start":{"line":880,"column":2},"end":{"line":883,"column":4}},"280":{"start":{"line":881,"column":4},"end":{"line":881,"column":27}},"281":{"start":{"line":882,"column":4},"end":{"line":882,"column":16}},"282":{"start":{"line":885,"column":2},"end":{"line":906,"column":4}},"283":{"start":{"line":886,"column":4},"end":{"line":905,"column":5}},"284":{"start":{"line":887,"column":6},"end":{"line":893,"column":7}},"285":{"start":{"line":888,"column":8},"end":{"line":888,"column":34}},"286":{"start":{"line":889,"column":8},"end":{"line":889,"column":38}},"287":{"start":{"line":890,"column":13},"end":{"line":893,"column":7}},"288":{"start":{"line":891,"column":8},"end":{"line":891,"column":35}},"289":{"start":{"line":892,"column":8},"end":{"line":892,"column":36}},"290":{"start":{"line":894,"column":6},"end":{"line":896,"column":7}},"291":{"start":{"line":895,"column":8},"end":{"line":895,"column":51}},"292":{"start":{"line":898,"column":6},"end":{"line":898,"column":18}},"293":{"start":{"line":900,"column":6},"end":{"line":904,"column":7}},"294":{"start":{"line":901,"column":8},"end":{"line":901,"column":36}},"295":{"start":{"line":903,"column":8},"end":{"line":903,"column":33}},"296":{"start":{"line":922,"column":2},"end":{"line":932,"column":4}},"297":{"start":{"line":923,"column":4},"end":{"line":930,"column":5}},"298":{"start":{"line":924,"column":6},"end":{"line":927,"column":7}},"299":{"start":{"line":926,"column":8},"end":{"line":926,"column":111}},"300":{"start":{"line":928,"column":6},"end":{"line":928,"column":22}},"301":{"start":{"line":929,"column":6},"end":{"line":929,"column":18}},"302":{"start":{"line":931,"column":4},"end":{"line":931,"column":17}},"303":{"start":{"line":944,"column":2},"end":{"line":946,"column":4}},"304":{"start":{"line":945,"column":4},"end":{"line":945,"column":23}},"305":{"start":{"line":958,"column":2},"end":{"line":967,"column":4}},"306":{"start":{"line":959,"column":4},"end":{"line":964,"column":5}},"307":{"start":{"line":960,"column":6},"end":{"line":962,"column":7}},"308":{"start":{"line":961,"column":8},"end":{"line":961,"column":44}},"309":{"start":{"line":963,"column":6},"end":{"line":963,"column":25}},"310":{"start":{"line":965,"column":4},"end":{"line":965,"column":22}},"311":{"start":{"line":966,"column":4},"end":{"line":966,"column":16}},"312":{"start":{"line":969,"column":2},"end":{"line":969,"column":31}},"313":{"start":{"line":982,"column":2},"end":{"line":984,"column":4}},"314":{"start":{"line":983,"column":4},"end":{"line":983,"column":87}},"315":{"start":{"line":996,"column":2},"end":{"line":998,"column":4}},"316":{"start":{"line":997,"column":4},"end":{"line":997,"column":66}},"317":{"start":{"line":1011,"column":2},"end":{"line":1015,"column":4}},"318":{"start":{"line":1012,"column":4},"end":{"line":1012,"column":35}},"319":{"start":{"line":1013,"column":4},"end":{"line":1013,"column":35}},"320":{"start":{"line":1014,"column":4},"end":{"line":1014,"column":16}},"321":{"start":{"line":1026,"column":2},"end":{"line":1028,"column":4}},"322":{"start":{"line":1027,"column":4},"end":{"line":1027,"column":53}},"323":{"start":{"line":1038,"column":2},"end":{"line":1040,"column":4}},"324":{"start":{"line":1039,"column":4},"end":{"line":1039,"column":54}},"325":{"start":{"line":1050,"column":2},"end":{"line":1053,"column":4}},"326":{"start":{"line":1051,"column":4},"end":{"line":1051,"column":37}},"327":{"start":{"line":1052,"column":4},"end":{"line":1052,"column":16}},"328":{"start":{"line":1065,"column":2},"end":{"line":1071,"column":4}},"329":{"start":{"line":1066,"column":4},"end":{"line":1068,"column":5}},"330":{"start":{"line":1067,"column":6},"end":{"line":1067,"column":20}},"331":{"start":{"line":1069,"column":4},"end":{"line":1069,"column":28}},"332":{"start":{"line":1070,"column":4},"end":{"line":1070,"column":16}},"333":{"start":{"line":1085,"column":2},"end":{"line":1087,"column":4}},"334":{"start":{"line":1086,"column":4},"end":{"line":1086,"column":87}},"335":{"start":{"line":1115,"column":2},"end":{"line":1118,"column":4}},"336":{"start":{"line":1116,"column":4},"end":{"line":1116,"column":48}},"337":{"start":{"line":1117,"column":4},"end":{"line":1117,"column":16}},"338":{"start":{"line":1138,"column":2},"end":{"line":1141,"column":4}},"339":{"start":{"line":1139,"column":4},"end":{"line":1139,"column":38}},"340":{"start":{"line":1140,"column":4},"end":{"line":1140,"column":16}},"341":{"start":{"line":1162,"column":2},"end":{"line":1165,"column":4}},"342":{"start":{"line":1163,"column":4},"end":{"line":1163,"column":41}},"343":{"start":{"line":1164,"column":4},"end":{"line":1164,"column":16}},"344":{"start":{"line":1208,"column":2},"end":{"line":1221,"column":4}},"345":{"start":{"line":1210,"column":4},"end":{"line":1216,"column":5}},"346":{"start":{"line":1211,"column":6},"end":{"line":1211,"column":19}},"347":{"start":{"line":1212,"column":11},"end":{"line":1216,"column":5}},"348":{"start":{"line":1213,"column":6},"end":{"line":1215,"column":8}},"349":{"start":{"line":1218,"column":4},"end":{"line":1218,"column":50}},"350":{"start":{"line":1220,"column":4},"end":{"line":1220,"column":16}},"351":{"start":{"line":1242,"column":2},"end":{"line":1253,"column":4}},"352":{"start":{"line":1244,"column":4},"end":{"line":1244,"column":69}},"353":{"start":{"line":1246,"column":4},"end":{"line":1250,"column":5}},"354":{"start":{"line":1247,"column":6},"end":{"line":1247,"column":34}},"355":{"start":{"line":1249,"column":6},"end":{"line":1249,"column":61}},"356":{"start":{"line":1252,"column":4},"end":{"line":1252,"column":16}},"357":{"start":{"line":1271,"column":2},"end":{"line":1280,"column":4}},"358":{"start":{"line":1272,"column":4},"end":{"line":1278,"column":5}},"359":{"start":{"line":1273,"column":6},"end":{"line":1273,"column":44}},"360":{"start":{"line":1274,"column":6},"end":{"line":1276,"column":7}},"361":{"start":{"line":1275,"column":8},"end":{"line":1275,"column":38}},"362":{"start":{"line":1277,"column":6},"end":{"line":1277,"column":18}},"363":{"start":{"line":1279,"column":4},"end":{"line":1279,"column":34}},"364":{"start":{"line":1296,"column":2},"end":{"line":1311,"column":4}},"365":{"start":{"line":1297,"column":4},"end":{"line":1309,"column":5}},"366":{"start":{"line":1299,"column":6},"end":{"line":1299,"column":30}},"367":{"start":{"line":1300,"column":11},"end":{"line":1309,"column":5}},"368":{"start":{"line":1302,"column":6},"end":{"line":1302,"column":25}},"369":{"start":{"line":1303,"column":11},"end":{"line":1309,"column":5}},"370":{"start":{"line":1305,"column":6},"end":{"line":1305,"column":40}},"371":{"start":{"line":1306,"column":11},"end":{"line":1309,"column":5}},"372":{"start":{"line":1308,"column":6},"end":{"line":1308,"column":26}},"373":{"start":{"line":1310,"column":4},"end":{"line":1310,"column":16}},"374":{"start":{"line":1324,"column":2},"end":{"line":1333,"column":4}},"375":{"start":{"line":1325,"column":4},"end":{"line":1332,"column":5}},"376":{"start":{"line":1327,"column":6},"end":{"line":1327,"column":31}},"377":{"start":{"line":1330,"column":6},"end":{"line":1330,"column":35}},"378":{"start":{"line":1331,"column":6},"end":{"line":1331,"column":18}},"379":{"start":{"line":1349,"column":2},"end":{"line":1358,"column":4}},"380":{"start":{"line":1350,"column":4},"end":{"line":1357,"column":5}},"381":{"start":{"line":1352,"column":6},"end":{"line":1352,"column":28}},"382":{"start":{"line":1355,"column":6},"end":{"line":1355,"column":29}},"383":{"start":{"line":1356,"column":6},"end":{"line":1356,"column":18}},"384":{"start":{"line":1370,"column":2},"end":{"line":1377,"column":4}},"385":{"start":{"line":1371,"column":4},"end":{"line":1375,"column":5}},"386":{"start":{"line":1372,"column":6},"end":{"line":1372,"column":25}},"387":{"start":{"line":1374,"column":6},"end":{"line":1374,"column":32}},"388":{"start":{"line":1376,"column":4},"end":{"line":1376,"column":16}},"389":{"start":{"line":1397,"column":2},"end":{"line":1400,"column":4}},"390":{"start":{"line":1398,"column":4},"end":{"line":1398,"column":29}},"391":{"start":{"line":1399,"column":4},"end":{"line":1399,"column":16}},"392":{"start":{"line":1431,"column":2},"end":{"line":2763,"column":5}},"393":{"start":{"line":1433,"column":4},"end":{"line":1439,"column":29}},"394":{"start":{"line":1441,"column":4},"end":{"line":1542,"column":6}},"395":{"start":{"line":1442,"column":6},"end":{"line":1444,"column":7}},"396":{"start":{"line":1443,"column":8},"end":{"line":1443,"column":35}},"397":{"start":{"line":1445,"column":6},"end":{"line":1446,"column":66}},"398":{"start":{"line":1449,"column":6},"end":{"line":1451,"column":7}},"399":{"start":{"line":1450,"column":8},"end":{"line":1450,"column":49}},"400":{"start":{"line":1455,"column":6},"end":{"line":1483,"column":7}},"401":{"start":{"line":1459,"column":8},"end":{"line":1481,"column":10}},"402":{"start":{"line":1460,"column":10},"end":{"line":1460,"column":27}},"403":{"start":{"line":1461,"column":10},"end":{"line":1461,"column":28}},"404":{"start":{"line":1463,"column":10},"end":{"line":1472,"column":12}},"405":{"start":{"line":1464,"column":12},"end":{"line":1464,"column":38}},"406":{"start":{"line":1465,"column":12},"end":{"line":1468,"column":14}},"407":{"start":{"line":1466,"column":14},"end":{"line":1466,"column":45}},"408":{"start":{"line":1467,"column":14},"end":{"line":1467,"column":55}},"409":{"start":{"line":1470,"column":12},"end":{"line":1470,"column":142}},"410":{"start":{"line":1471,"column":12},"end":{"line":1471,"column":36}},"411":{"start":{"line":1473,"column":10},"end":{"line":1475,"column":11}},"412":{"start":{"line":1474,"column":12},"end":{"line":1474,"column":56}},"413":{"start":{"line":1477,"column":10},"end":{"line":1480,"column":13}},"414":{"start":{"line":1479,"column":12},"end":{"line":1479,"column":27}},"415":{"start":{"line":1482,"column":8},"end":{"line":1482,"column":43}},"416":{"start":{"line":1485,"column":6},"end":{"line":1485,"column":32}},"417":{"start":{"line":1488,"column":6},"end":{"line":1490,"column":7}},"418":{"start":{"line":1489,"column":8},"end":{"line":1489,"column":50}},"419":{"start":{"line":1492,"column":6},"end":{"line":1521,"column":11}},"420":{"start":{"line":1493,"column":8},"end":{"line":1495,"column":29}},"421":{"start":{"line":1497,"column":8},"end":{"line":1497,"column":26}},"422":{"start":{"line":1499,"column":8},"end":{"line":1519,"column":9}},"423":{"start":{"line":1503,"column":10},"end":{"line":1503,"column":49}},"424":{"start":{"line":1504,"column":10},"end":{"line":1504,"column":42}},"425":{"start":{"line":1506,"column":10},"end":{"line":1518,"column":11}},"426":{"start":{"line":1507,"column":12},"end":{"line":1507,"column":60}},"427":{"start":{"line":1512,"column":12},"end":{"line":1512,"column":50}},"428":{"start":{"line":1515,"column":12},"end":{"line":1517,"column":13}},"429":{"start":{"line":1516,"column":14},"end":{"line":1516,"column":57}},"430":{"start":{"line":1520,"column":8},"end":{"line":1520,"column":23}},"431":{"start":{"line":1523,"column":6},"end":{"line":1540,"column":7}},"432":{"start":{"line":1527,"column":8},"end":{"line":1527,"column":150}},"433":{"start":{"line":1529,"column":8},"end":{"line":1535,"column":10}},"434":{"start":{"line":1531,"column":10},"end":{"line":1533,"column":11}},"435":{"start":{"line":1532,"column":12},"end":{"line":1532,"column":25}},"436":{"start":{"line":1534,"column":10},"end":{"line":1534,"column":152}},"437":{"start":{"line":1536,"column":8},"end":{"line":1536,"column":56}},"438":{"start":{"line":1538,"column":8},"end":{"line":1539,"column":31}},"439":{"start":{"line":1541,"column":6},"end":{"line":1541,"column":30}},"440":{"start":{"line":1557,"column":4},"end":{"line":1566,"column":6}},"441":{"start":{"line":1559,"column":6},"end":{"line":1561,"column":7}},"442":{"start":{"line":1560,"column":8},"end":{"line":1560,"column":74}},"443":{"start":{"line":1562,"column":6},"end":{"line":1564,"column":7}},"444":{"start":{"line":1563,"column":8},"end":{"line":1563,"column":75}},"445":{"start":{"line":1565,"column":6},"end":{"line":1565,"column":27}},"446":{"start":{"line":1579,"column":4},"end":{"line":1600,"column":6}},"447":{"start":{"line":1580,"column":6},"end":{"line":1580,"column":18}},"448":{"start":{"line":1583,"column":6},"end":{"line":1585,"column":7}},"449":{"start":{"line":1584,"column":8},"end":{"line":1584,"column":52}},"450":{"start":{"line":1587,"column":6},"end":{"line":1587,"column":68}},"451":{"start":{"line":1590,"column":6},"end":{"line":1590,"column":43}},"452":{"start":{"line":1592,"column":6},"end":{"line":1594,"column":8}},"453":{"start":{"line":1593,"column":8},"end":{"line":1593,"column":49}},"454":{"start":{"line":1595,"column":6},"end":{"line":1595,"column":68}},"455":{"start":{"line":1598,"column":6},"end":{"line":1598,"column":61}},"456":{"start":{"line":1599,"column":6},"end":{"line":1599,"column":64}},"457":{"start":{"line":1614,"column":4},"end":{"line":1668,"column":6}},"458":{"start":{"line":1615,"column":6},"end":{"line":1617,"column":7}},"459":{"start":{"line":1616,"column":8},"end":{"line":1616,"column":55}},"460":{"start":{"line":1619,"column":6},"end":{"line":1619,"column":32}},"461":{"start":{"line":1621,"column":6},"end":{"line":1621,"column":67}},"462":{"start":{"line":1622,"column":6},"end":{"line":1622,"column":27}},"463":{"start":{"line":1624,"column":6},"end":{"line":1624,"column":30}},"464":{"start":{"line":1625,"column":6},"end":{"line":1628,"column":7}},"465":{"start":{"line":1627,"column":8},"end":{"line":1627,"column":37}},"466":{"start":{"line":1630,"column":6},"end":{"line":1635,"column":9}},"467":{"start":{"line":1637,"column":6},"end":{"line":1654,"column":8}},"468":{"start":{"line":1638,"column":8},"end":{"line":1638,"column":34}},"469":{"start":{"line":1639,"column":8},"end":{"line":1639,"column":71}},"470":{"start":{"line":1641,"column":8},"end":{"line":1647,"column":9}},"471":{"start":{"line":1642,"column":10},"end":{"line":1644,"column":13}},"472":{"start":{"line":1643,"column":12},"end":{"line":1643,"column":64}},"473":{"start":{"line":1646,"column":10},"end":{"line":1646,"column":61}},"474":{"start":{"line":1648,"column":8},"end":{"line":1648,"column":30}},"475":{"start":{"line":1649,"column":8},"end":{"line":1652,"column":11}},"476":{"start":{"line":1653,"column":8},"end":{"line":1653,"column":67}},"477":{"start":{"line":1655,"column":6},"end":{"line":1655,"column":54}},"478":{"start":{"line":1657,"column":6},"end":{"line":1661,"column":8}},"479":{"start":{"line":1658,"column":8},"end":{"line":1658,"column":69}},"480":{"start":{"line":1659,"column":8},"end":{"line":1659,"column":29}},"481":{"start":{"line":1660,"column":8},"end":{"line":1660,"column":67}},"482":{"start":{"line":1662,"column":6},"end":{"line":1662,"column":50}},"483":{"start":{"line":1664,"column":6},"end":{"line":1665,"column":46}},"484":{"start":{"line":1667,"column":6},"end":{"line":1667,"column":30}},"485":{"start":{"line":1670,"column":4},"end":{"line":1676,"column":5}},"486":{"start":{"line":1671,"column":6},"end":{"line":1671,"column":47}},"487":{"start":{"line":1673,"column":6},"end":{"line":1675,"column":7}},"488":{"start":{"line":1674,"column":8},"end":{"line":1674,"column":109}},"489":{"start":{"line":1680,"column":4},"end":{"line":1691,"column":5}},"490":{"start":{"line":1681,"column":6},"end":{"line":1687,"column":8}},"491":{"start":{"line":1682,"column":8},"end":{"line":1682,"column":62}},"492":{"start":{"line":1684,"column":8},"end":{"line":1684,"column":60}},"493":{"start":{"line":1686,"column":8},"end":{"line":1686,"column":86}},"494":{"start":{"line":1688,"column":6},"end":{"line":1688,"column":73}},"495":{"start":{"line":1690,"column":6},"end":{"line":1690,"column":72}},"496":{"start":{"line":1704,"column":4},"end":{"line":1719,"column":6}},"497":{"start":{"line":1705,"column":6},"end":{"line":1705,"column":32}},"498":{"start":{"line":1706,"column":6},"end":{"line":1717,"column":7}},"499":{"start":{"line":1707,"column":8},"end":{"line":1707,"column":53}},"500":{"start":{"line":1708,"column":13},"end":{"line":1717,"column":7}},"501":{"start":{"line":1709,"column":8},"end":{"line":1712,"column":10}},"502":{"start":{"line":1710,"column":10},"end":{"line":1710,"column":45}},"503":{"start":{"line":1711,"column":10},"end":{"line":1711,"column":39}},"504":{"start":{"line":1713,"column":8},"end":{"line":1713,"column":59}},"505":{"start":{"line":1714,"column":8},"end":{"line":1714,"column":63}},"506":{"start":{"line":1716,"column":8},"end":{"line":1716,"column":26}},"507":{"start":{"line":1718,"column":6},"end":{"line":1718,"column":30}},"508":{"start":{"line":1737,"column":4},"end":{"line":1764,"column":6}},"509":{"start":{"line":1738,"column":6},"end":{"line":1738,"column":32}},"510":{"start":{"line":1740,"column":6},"end":{"line":1758,"column":8}},"511":{"start":{"line":1741,"column":8},"end":{"line":1757,"column":9}},"512":{"start":{"line":1742,"column":10},"end":{"line":1742,"column":42}},"513":{"start":{"line":1743,"column":10},"end":{"line":1743,"column":60}},"514":{"start":{"line":1744,"column":10},"end":{"line":1753,"column":11}},"515":{"start":{"line":1745,"column":12},"end":{"line":1746,"column":55}},"516":{"start":{"line":1748,"column":12},"end":{"line":1748,"column":157}},"517":{"start":{"line":1749,"column":12},"end":{"line":1749,"column":147}},"518":{"start":{"line":1751,"column":12},"end":{"line":1751,"column":48}},"519":{"start":{"line":1754,"column":10},"end":{"line":1754,"column":40}},"520":{"start":{"line":1756,"column":10},"end":{"line":1756,"column":28}},"521":{"start":{"line":1759,"column":6},"end":{"line":1759,"column":60}},"522":{"start":{"line":1761,"column":6},"end":{"line":1761,"column":68}},"523":{"start":{"line":1763,"column":6},"end":{"line":1763,"column":30}},"524":{"start":{"line":1782,"column":4},"end":{"line":1802,"column":6}},"525":{"start":{"line":1783,"column":6},"end":{"line":1783,"column":64}},"526":{"start":{"line":1785,"column":6},"end":{"line":1799,"column":7}},"527":{"start":{"line":1786,"column":8},"end":{"line":1786,"column":40}},"528":{"start":{"line":1787,"column":8},"end":{"line":1787,"column":137}},"529":{"start":{"line":1788,"column":8},"end":{"line":1788,"column":139}},"530":{"start":{"line":1790,"column":8},"end":{"line":1797,"column":9}},"531":{"start":{"line":1791,"column":10},"end":{"line":1791,"column":54}},"532":{"start":{"line":1792,"column":10},"end":{"line":1794,"column":11}},"533":{"start":{"line":1793,"column":12},"end":{"line":1793,"column":128}},"534":{"start":{"line":1795,"column":15},"end":{"line":1797,"column":9}},"535":{"start":{"line":1796,"column":10},"end":{"line":1796,"column":125}},"536":{"start":{"line":1798,"column":8},"end":{"line":1798,"column":38}},"537":{"start":{"line":1801,"column":6},"end":{"line":1801,"column":20}},"538":{"start":{"line":1819,"column":4},"end":{"line":1827,"column":6}},"539":{"start":{"line":1822,"column":6},"end":{"line":1826,"column":7}},"540":{"start":{"line":1823,"column":8},"end":{"line":1823,"column":147}},"541":{"start":{"line":1825,"column":8},"end":{"line":1825,"column":29}},"542":{"start":{"line":1844,"column":4},"end":{"line":1877,"column":6}},"543":{"start":{"line":1845,"column":6},"end":{"line":1845,"column":32}},"544":{"start":{"line":1847,"column":6},"end":{"line":1875,"column":7}},"545":{"start":{"line":1848,"column":8},"end":{"line":1848,"column":63}},"546":{"start":{"line":1849,"column":8},"end":{"line":1858,"column":10}},"547":{"start":{"line":1851,"column":12},"end":{"line":1851,"column":35}},"548":{"start":{"line":1856,"column":12},"end":{"line":1856,"column":203}},"549":{"start":{"line":1862,"column":8},"end":{"line":1874,"column":9}},"550":{"start":{"line":1863,"column":10},"end":{"line":1863,"column":51}},"551":{"start":{"line":1865,"column":10},"end":{"line":1865,"column":130}},"552":{"start":{"line":1869,"column":10},"end":{"line":1873,"column":11}},"553":{"start":{"line":1870,"column":12},"end":{"line":1870,"column":67}},"554":{"start":{"line":1872,"column":12},"end":{"line":1872,"column":68}},"555":{"start":{"line":1876,"column":6},"end":{"line":1876,"column":30}},"556":{"start":{"line":1893,"column":4},"end":{"line":1904,"column":6}},"557":{"start":{"line":1894,"column":6},"end":{"line":1894,"column":17}},"558":{"start":{"line":1896,"column":6},"end":{"line":1902,"column":7}},"559":{"start":{"line":1897,"column":8},"end":{"line":1897,"column":63}},"560":{"start":{"line":1898,"column":8},"end":{"line":1898,"column":122}},"561":{"start":{"line":1899,"column":8},"end":{"line":1901,"column":9}},"562":{"start":{"line":1900,"column":10},"end":{"line":1900,"column":128}},"563":{"start":{"line":1903,"column":6},"end":{"line":1903,"column":20}},"564":{"start":{"line":1916,"column":4},"end":{"line":1919,"column":6}},"565":{"start":{"line":1918,"column":6},"end":{"line":1918,"column":201}},"566":{"start":{"line":1930,"column":4},"end":{"line":1933,"column":6}},"567":{"start":{"line":1932,"column":6},"end":{"line":1932,"column":184}},"568":{"start":{"line":1935,"column":4},"end":{"line":1992,"column":6}},"569":{"start":{"line":1937,"column":6},"end":{"line":1937,"column":32}},"570":{"start":{"line":1939,"column":6},"end":{"line":1940,"column":102}},"571":{"start":{"line":1943,"column":6},"end":{"line":1990,"column":7}},"572":{"start":{"line":1944,"column":8},"end":{"line":1944,"column":47}},"573":{"start":{"line":1947,"column":8},"end":{"line":1956,"column":9}},"574":{"start":{"line":1949,"column":10},"end":{"line":1950,"column":53}},"575":{"start":{"line":1953,"column":10},"end":{"line":1953,"column":137}},"576":{"start":{"line":1954,"column":10},"end":{"line":1954,"column":126}},"577":{"start":{"line":1955,"column":10},"end":{"line":1955,"column":48}},"578":{"start":{"line":1958,"column":8},"end":{"line":1958,"column":49}},"579":{"start":{"line":1960,"column":8},"end":{"line":1962,"column":9}},"580":{"start":{"line":1961,"column":10},"end":{"line":1961,"column":126}},"581":{"start":{"line":1967,"column":8},"end":{"line":1989,"column":9}},"582":{"start":{"line":1968,"column":10},"end":{"line":1973,"column":15}},"583":{"start":{"line":1970,"column":14},"end":{"line":1970,"column":44}},"584":{"start":{"line":1972,"column":14},"end":{"line":1972,"column":71}},"585":{"start":{"line":1974,"column":15},"end":{"line":1989,"column":9}},"586":{"start":{"line":1978,"column":10},"end":{"line":1982,"column":11}},"587":{"start":{"line":1979,"column":12},"end":{"line":1979,"column":53}},"588":{"start":{"line":1981,"column":12},"end":{"line":1981,"column":67}},"589":{"start":{"line":1984,"column":10},"end":{"line":1988,"column":11}},"590":{"start":{"line":1985,"column":12},"end":{"line":1985,"column":53}},"591":{"start":{"line":1987,"column":12},"end":{"line":1987,"column":68}},"592":{"start":{"line":1991,"column":6},"end":{"line":1991,"column":30}},"593":{"start":{"line":1994,"column":4},"end":{"line":2039,"column":6}},"594":{"start":{"line":1996,"column":6},"end":{"line":1997,"column":43}},"595":{"start":{"line":2000,"column":6},"end":{"line":2002,"column":7}},"596":{"start":{"line":2001,"column":8},"end":{"line":2001,"column":60}},"597":{"start":{"line":2005,"column":6},"end":{"line":2036,"column":7}},"598":{"start":{"line":2006,"column":8},"end":{"line":2006,"column":47}},"599":{"start":{"line":2009,"column":8},"end":{"line":2014,"column":9}},"600":{"start":{"line":2010,"column":10},"end":{"line":2010,"column":130}},"601":{"start":{"line":2012,"column":10},"end":{"line":2012,"column":119}},"602":{"start":{"line":2013,"column":10},"end":{"line":2013,"column":118}},"603":{"start":{"line":2016,"column":8},"end":{"line":2016,"column":49}},"604":{"start":{"line":2018,"column":8},"end":{"line":2020,"column":9}},"605":{"start":{"line":2019,"column":10},"end":{"line":2019,"column":120}},"606":{"start":{"line":2025,"column":8},"end":{"line":2035,"column":9}},"607":{"start":{"line":2026,"column":10},"end":{"line":2026,"column":28}},"608":{"start":{"line":2027,"column":10},"end":{"line":2027,"column":112}},"609":{"start":{"line":2028,"column":15},"end":{"line":2035,"column":9}},"610":{"start":{"line":2032,"column":10},"end":{"line":2032,"column":56}},"611":{"start":{"line":2034,"column":10},"end":{"line":2034,"column":58}},"612":{"start":{"line":2038,"column":6},"end":{"line":2038,"column":20}},"613":{"start":{"line":2041,"column":4},"end":{"line":2046,"column":6}},"614":{"start":{"line":2042,"column":6},"end":{"line":2044,"column":7}},"615":{"start":{"line":2043,"column":8},"end":{"line":2043,"column":30}},"616":{"start":{"line":2045,"column":6},"end":{"line":2045,"column":36}},"617":{"start":{"line":2048,"column":4},"end":{"line":2063,"column":6}},"618":{"start":{"line":2049,"column":6},"end":{"line":2049,"column":29}},"619":{"start":{"line":2051,"column":6},"end":{"line":2060,"column":7}},"620":{"start":{"line":2053,"column":8},"end":{"line":2056,"column":9}},"621":{"start":{"line":2055,"column":10},"end":{"line":2055,"column":33}},"622":{"start":{"line":2057,"column":8},"end":{"line":2059,"column":9}},"623":{"start":{"line":2058,"column":10},"end":{"line":2058,"column":112}},"624":{"start":{"line":2062,"column":6},"end":{"line":2062,"column":33}},"625":{"start":{"line":2065,"column":4},"end":{"line":2072,"column":6}},"626":{"start":{"line":2066,"column":6},"end":{"line":2071,"column":7}},"627":{"start":{"line":2067,"column":8},"end":{"line":2070,"column":11}},"628":{"start":{"line":2068,"column":10},"end":{"line":2068,"column":59}},"629":{"start":{"line":2069,"column":10},"end":{"line":2069,"column":29}},"630":{"start":{"line":2086,"column":4},"end":{"line":2091,"column":6}},"631":{"start":{"line":2087,"column":6},"end":{"line":2089,"column":7}},"632":{"start":{"line":2088,"column":8},"end":{"line":2088,"column":40}},"633":{"start":{"line":2090,"column":6},"end":{"line":2090,"column":32}},"634":{"start":{"line":2103,"column":4},"end":{"line":2105,"column":6}},"635":{"start":{"line":2104,"column":6},"end":{"line":2104,"column":29}},"636":{"start":{"line":2117,"column":4},"end":{"line":2119,"column":6}},"637":{"start":{"line":2118,"column":6},"end":{"line":2118,"column":36}},"638":{"start":{"line":2133,"column":4},"end":{"line":2156,"column":6}},"639":{"start":{"line":2134,"column":6},"end":{"line":2149,"column":7}},"640":{"start":{"line":2135,"column":8},"end":{"line":2135,"column":31}},"641":{"start":{"line":2139,"column":8},"end":{"line":2147,"column":9}},"642":{"start":{"line":2140,"column":10},"end":{"line":2146,"column":11}},"643":{"start":{"line":2141,"column":12},"end":{"line":2145,"column":13}},"644":{"start":{"line":2142,"column":14},"end":{"line":2144,"column":15}},"645":{"start":{"line":2143,"column":16},"end":{"line":2143,"column":85}},"646":{"start":{"line":2148,"column":8},"end":{"line":2148,"column":41}},"647":{"start":{"line":2150,"column":6},"end":{"line":2154,"column":7}},"648":{"start":{"line":2151,"column":8},"end":{"line":2151,"column":36}},"649":{"start":{"line":2153,"column":8},"end":{"line":2153,"column":33}},"650":{"start":{"line":2170,"column":4},"end":{"line":2183,"column":6}},"651":{"start":{"line":2171,"column":6},"end":{"line":2181,"column":7}},"652":{"start":{"line":2172,"column":8},"end":{"line":2179,"column":9}},"653":{"start":{"line":2173,"column":10},"end":{"line":2173,"column":37}},"654":{"start":{"line":2175,"column":10},"end":{"line":2175,"column":68}},"655":{"start":{"line":2176,"column":10},"end":{"line":2178,"column":11}},"656":{"start":{"line":2177,"column":12},"end":{"line":2177,"column":53}},"657":{"start":{"line":2195,"column":4},"end":{"line":2197,"column":6}},"658":{"start":{"line":2196,"column":6},"end":{"line":2196,"column":23}},"659":{"start":{"line":2209,"column":4},"end":{"line":2211,"column":6}},"660":{"start":{"line":2210,"column":6},"end":{"line":2210,"column":21}},"661":{"start":{"line":2227,"column":4},"end":{"line":2227,"column":49}},"662":{"start":{"line":2254,"column":4},"end":{"line":2318,"column":6}},"663":{"start":{"line":2255,"column":6},"end":{"line":2257,"column":7}},"664":{"start":{"line":2256,"column":8},"end":{"line":2256,"column":21}},"665":{"start":{"line":2259,"column":6},"end":{"line":2259,"column":32}},"666":{"start":{"line":2260,"column":6},"end":{"line":2260,"column":48}},"667":{"start":{"line":2262,"column":6},"end":{"line":2262,"column":66}},"668":{"start":{"line":2265,"column":6},"end":{"line":2265,"column":44}},"669":{"start":{"line":2267,"column":6},"end":{"line":2269,"column":7}},"670":{"start":{"line":2268,"column":8},"end":{"line":2268,"column":30}},"671":{"start":{"line":2271,"column":6},"end":{"line":2273,"column":7}},"672":{"start":{"line":2272,"column":8},"end":{"line":2272,"column":25}},"673":{"start":{"line":2277,"column":6},"end":{"line":2277,"column":22}},"674":{"start":{"line":2278,"column":6},"end":{"line":2315,"column":7}},"675":{"start":{"line":2279,"column":8},"end":{"line":2291,"column":11}},"676":{"start":{"line":2280,"column":10},"end":{"line":2280,"column":59}},"677":{"start":{"line":2281,"column":10},"end":{"line":2281,"column":44}},"678":{"start":{"line":2282,"column":10},"end":{"line":2284,"column":11}},"679":{"start":{"line":2283,"column":12},"end":{"line":2283,"column":41}},"680":{"start":{"line":2285,"column":10},"end":{"line":2285,"column":29}},"681":{"start":{"line":2287,"column":10},"end":{"line":2287,"column":70}},"682":{"start":{"line":2288,"column":10},"end":{"line":2288,"column":31}},"683":{"start":{"line":2289,"column":10},"end":{"line":2289,"column":68}},"684":{"start":{"line":2290,"column":10},"end":{"line":2290,"column":32}},"685":{"start":{"line":2292,"column":8},"end":{"line":2294,"column":31}},"686":{"start":{"line":2293,"column":10},"end":{"line":2293,"column":39}},"687":{"start":{"line":2295,"column":13},"end":{"line":2315,"column":7}},"688":{"start":{"line":2298,"column":8},"end":{"line":2311,"column":11}},"689":{"start":{"line":2299,"column":10},"end":{"line":2301,"column":11}},"690":{"start":{"line":2300,"column":12},"end":{"line":2300,"column":41}},"691":{"start":{"line":2302,"column":10},"end":{"line":2302,"column":44}},"692":{"start":{"line":2303,"column":10},"end":{"line":2303,"column":29}},"693":{"start":{"line":2306,"column":10},"end":{"line":2310,"column":11}},"694":{"start":{"line":2307,"column":12},"end":{"line":2307,"column":96}},"695":{"start":{"line":2309,"column":12},"end":{"line":2309,"column":40}},"696":{"start":{"line":2313,"column":8},"end":{"line":2313,"column":30}},"697":{"start":{"line":2314,"column":8},"end":{"line":2314,"column":25}},"698":{"start":{"line":2317,"column":6},"end":{"line":2317,"column":30}},"699":{"start":{"line":2330,"column":4},"end":{"line":2332,"column":6}},"700":{"start":{"line":2331,"column":6},"end":{"line":2331,"column":25}},"701":{"start":{"line":2344,"column":4},"end":{"line":2346,"column":6}},"702":{"start":{"line":2345,"column":6},"end":{"line":2345,"column":26}},"703":{"start":{"line":2358,"column":4},"end":{"line":2360,"column":6}},"704":{"start":{"line":2359,"column":6},"end":{"line":2359,"column":35}},"705":{"start":{"line":2372,"column":4},"end":{"line":2374,"column":6}},"706":{"start":{"line":2373,"column":6},"end":{"line":2373,"column":38}},"707":{"start":{"line":2386,"column":4},"end":{"line":2388,"column":6}},"708":{"start":{"line":2387,"column":6},"end":{"line":2387,"column":26}},"709":{"start":{"line":2419,"column":4},"end":{"line":2487,"column":6}},"710":{"start":{"line":2420,"column":6},"end":{"line":2422,"column":7}},"711":{"start":{"line":2421,"column":8},"end":{"line":2421,"column":86}},"712":{"start":{"line":2424,"column":6},"end":{"line":2424,"column":71}},"713":{"start":{"line":2426,"column":6},"end":{"line":2426,"column":55}},"714":{"start":{"line":2429,"column":6},"end":{"line":2445,"column":7}},"715":{"start":{"line":2430,"column":8},"end":{"line":2430,"column":45}},"716":{"start":{"line":2432,"column":8},"end":{"line":2432,"column":44}},"717":{"start":{"line":2434,"column":8},"end":{"line":2443,"column":24}},"718":{"start":{"line":2436,"column":12},"end":{"line":2436,"column":48}},"719":{"start":{"line":2438,"column":12},"end":{"line":2438,"column":50}},"720":{"start":{"line":2440,"column":12},"end":{"line":2440,"column":49}},"721":{"start":{"line":2444,"column":8},"end":{"line":2444,"column":23}},"722":{"start":{"line":2448,"column":6},"end":{"line":2468,"column":8}},"723":{"start":{"line":2450,"column":10},"end":{"line":2457,"column":11}},"724":{"start":{"line":2451,"column":12},"end":{"line":2456,"column":13}},"725":{"start":{"line":2453,"column":14},"end":{"line":2455,"column":15}},"726":{"start":{"line":2454,"column":16},"end":{"line":2454,"column":46}},"727":{"start":{"line":2458,"column":10},"end":{"line":2460,"column":11}},"728":{"start":{"line":2459,"column":12},"end":{"line":2459,"column":31}},"729":{"start":{"line":2466,"column":10},"end":{"line":2466,"column":73}},"730":{"start":{"line":2470,"column":6},"end":{"line":2484,"column":7}},"731":{"start":{"line":2472,"column":8},"end":{"line":2472,"column":85}},"732":{"start":{"line":2473,"column":8},"end":{"line":2475,"column":9}},"733":{"start":{"line":2474,"column":10},"end":{"line":2474,"column":40}},"734":{"start":{"line":2476,"column":8},"end":{"line":2476,"column":91}},"735":{"start":{"line":2478,"column":13},"end":{"line":2484,"column":7}},"736":{"start":{"line":2480,"column":8},"end":{"line":2480,"column":69}},"737":{"start":{"line":2483,"column":8},"end":{"line":2483,"column":26}},"738":{"start":{"line":2486,"column":6},"end":{"line":2486,"column":30}},"739":{"start":{"line":2511,"column":4},"end":{"line":2591,"column":6}},"740":{"start":{"line":2514,"column":6},"end":{"line":2515,"column":66}},"741":{"start":{"line":2518,"column":6},"end":{"line":2520,"column":7}},"742":{"start":{"line":2519,"column":8},"end":{"line":2519,"column":29}},"743":{"start":{"line":2523,"column":6},"end":{"line":2525,"column":7}},"744":{"start":{"line":2524,"column":8},"end":{"line":2524,"column":49}},"745":{"start":{"line":2529,"column":6},"end":{"line":2535,"column":7}},"746":{"start":{"line":2530,"column":8},"end":{"line":2530,"column":25}},"747":{"start":{"line":2531,"column":8},"end":{"line":2533,"column":9}},"748":{"start":{"line":2532,"column":10},"end":{"line":2532,"column":144}},"749":{"start":{"line":2534,"column":8},"end":{"line":2534,"column":23}},"750":{"start":{"line":2538,"column":6},"end":{"line":2540,"column":7}},"751":{"start":{"line":2539,"column":8},"end":{"line":2539,"column":29}},"752":{"start":{"line":2543,"column":6},"end":{"line":2545,"column":7}},"753":{"start":{"line":2544,"column":8},"end":{"line":2544,"column":50}},"754":{"start":{"line":2547,"column":6},"end":{"line":2547,"column":40}},"755":{"start":{"line":2548,"column":6},"end":{"line":2550,"column":7}},"756":{"start":{"line":2549,"column":8},"end":{"line":2549,"column":50}},"757":{"start":{"line":2551,"column":6},"end":{"line":2553,"column":7}},"758":{"start":{"line":2552,"column":8},"end":{"line":2552,"column":36}},"759":{"start":{"line":2554,"column":6},"end":{"line":2556,"column":7}},"760":{"start":{"line":2555,"column":8},"end":{"line":2555,"column":70}},"761":{"start":{"line":2557,"column":6},"end":{"line":2567,"column":7}},"762":{"start":{"line":2558,"column":8},"end":{"line":2558,"column":50}},"763":{"start":{"line":2559,"column":8},"end":{"line":2563,"column":9}},"764":{"start":{"line":2560,"column":10},"end":{"line":2562,"column":11}},"765":{"start":{"line":2561,"column":12},"end":{"line":2561,"column":124}},"766":{"start":{"line":2564,"column":8},"end":{"line":2566,"column":9}},"767":{"start":{"line":2565,"column":10},"end":{"line":2565,"column":16}},"768":{"start":{"line":2569,"column":6},"end":{"line":2588,"column":7}},"769":{"start":{"line":2570,"column":8},"end":{"line":2587,"column":9}},"770":{"start":{"line":2571,"column":10},"end":{"line":2571,"column":58}},"771":{"start":{"line":2574,"column":10},"end":{"line":2574,"column":113}},"772":{"start":{"line":2579,"column":10},"end":{"line":2579,"column":51}},"773":{"start":{"line":2580,"column":10},"end":{"line":2582,"column":11}},"774":{"start":{"line":2581,"column":12},"end":{"line":2581,"column":122}},"775":{"start":{"line":2584,"column":10},"end":{"line":2586,"column":11}},"776":{"start":{"line":2585,"column":12},"end":{"line":2585,"column":58}},"777":{"start":{"line":2590,"column":6},"end":{"line":2590,"column":20}},"778":{"start":{"line":2603,"column":4},"end":{"line":2605,"column":6}},"779":{"start":{"line":2604,"column":6},"end":{"line":2604,"column":21}},"780":{"start":{"line":2617,"column":4},"end":{"line":2619,"column":6}},"781":{"start":{"line":2618,"column":6},"end":{"line":2618,"column":25}},"782":{"start":{"line":2622,"column":4},"end":{"line":2624,"column":6}},"783":{"start":{"line":2623,"column":6},"end":{"line":2623,"column":31}},"784":{"start":{"line":2627,"column":4},"end":{"line":2629,"column":6}},"785":{"start":{"line":2628,"column":6},"end":{"line":2628,"column":28}},"786":{"start":{"line":2643,"column":4},"end":{"line":2645,"column":6}},"787":{"start":{"line":2644,"column":6},"end":{"line":2644,"column":22}},"788":{"start":{"line":2647,"column":4},"end":{"line":2647,"column":38}},"789":{"start":{"line":2648,"column":4},"end":{"line":2650,"column":7}},"790":{"start":{"line":2649,"column":6},"end":{"line":2649,"column":22}},"791":{"start":{"line":2665,"column":4},"end":{"line":2676,"column":6}},"792":{"start":{"line":2666,"column":6},"end":{"line":2666,"column":32}},"793":{"start":{"line":2667,"column":6},"end":{"line":2669,"column":7}},"794":{"start":{"line":2668,"column":8},"end":{"line":2668,"column":34}},"795":{"start":{"line":2670,"column":6},"end":{"line":2674,"column":7}},"796":{"start":{"line":2671,"column":8},"end":{"line":2671,"column":27}},"797":{"start":{"line":2673,"column":8},"end":{"line":2673,"column":56}},"798":{"start":{"line":2675,"column":6},"end":{"line":2675,"column":30}},"799":{"start":{"line":2690,"column":4},"end":{"line":2695,"column":6}},"800":{"start":{"line":2691,"column":6},"end":{"line":2693,"column":7}},"801":{"start":{"line":2692,"column":8},"end":{"line":2692,"column":38}},"802":{"start":{"line":2694,"column":6},"end":{"line":2694,"column":18}},"803":{"start":{"line":2713,"column":4},"end":{"line":2719,"column":6}},"804":{"start":{"line":2714,"column":6},"end":{"line":2714,"column":44}},"805":{"start":{"line":2715,"column":6},"end":{"line":2717,"column":7}},"806":{"start":{"line":2716,"column":8},"end":{"line":2716,"column":56}},"807":{"start":{"line":2718,"column":6},"end":{"line":2718,"column":18}},"808":{"start":{"line":2722,"column":4},"end":{"line":2726,"column":7}},"809":{"start":{"line":2723,"column":6},"end":{"line":2723,"column":33}},"810":{"start":{"line":2724,"column":6},"end":{"line":2724,"column":30}},"811":{"start":{"line":2725,"column":6},"end":{"line":2725,"column":35}},"812":{"start":{"line":2727,"column":4},"end":{"line":2731,"column":7}},"813":{"start":{"line":2728,"column":6},"end":{"line":2728,"column":33}},"814":{"start":{"line":2729,"column":6},"end":{"line":2729,"column":31}},"815":{"start":{"line":2730,"column":6},"end":{"line":2730,"column":36}},"816":{"start":{"line":2733,"column":4},"end":{"line":2760,"column":5}},"817":{"start":{"line":2737,"column":6},"end":{"line":2741,"column":7}},"818":{"start":{"line":2738,"column":8},"end":{"line":2740,"column":9}},"819":{"start":{"line":2739,"column":10},"end":{"line":2739,"column":43}},"820":{"start":{"line":2745,"column":6},"end":{"line":2757,"column":7}},"821":{"start":{"line":2746,"column":8},"end":{"line":2750,"column":10}},"822":{"start":{"line":2747,"column":10},"end":{"line":2747,"column":59}},"823":{"start":{"line":2748,"column":10},"end":{"line":2748,"column":80}},"824":{"start":{"line":2749,"column":10},"end":{"line":2749,"column":29}},"825":{"start":{"line":2751,"column":8},"end":{"line":2756,"column":9}},"826":{"start":{"line":2752,"column":10},"end":{"line":2752,"column":56}},"827":{"start":{"line":2753,"column":10},"end":{"line":2755,"column":11}},"828":{"start":{"line":2754,"column":12},"end":{"line":2754,"column":102}},"829":{"start":{"line":2759,"column":6},"end":{"line":2759,"column":73}},"830":{"start":{"line":2762,"column":4},"end":{"line":2762,"column":22}},"831":{"start":{"line":2766,"column":0},"end":{"line":2766,"column":39}},"832":{"start":{"line":2783,"column":0},"end":{"line":2783,"column":115}},"833":{"start":{"line":2785,"column":0},"end":{"line":2870,"column":1}},"834":{"start":{"line":2789,"column":2},"end":{"line":2791,"column":30}},"835":{"start":{"line":2803,"column":2},"end":{"line":2805,"column":4}},"836":{"start":{"line":2804,"column":4},"end":{"line":2804,"column":21}},"837":{"start":{"line":2817,"column":2},"end":{"line":2819,"column":4}},"838":{"start":{"line":2818,"column":4},"end":{"line":2818,"column":23}},"839":{"start":{"line":2825,"column":2},"end":{"line":2828,"column":4}},"840":{"start":{"line":2826,"column":4},"end":{"line":2826,"column":46}},"841":{"start":{"line":2827,"column":4},"end":{"line":2827,"column":16}},"842":{"start":{"line":2849,"column":2},"end":{"line":2867,"column":4}},"843":{"start":{"line":2850,"column":4},"end":{"line":2850,"column":52}},"844":{"start":{"line":2851,"column":4},"end":{"line":2851,"column":116}},"845":{"start":{"line":2853,"column":4},"end":{"line":2853,"column":25}},"846":{"start":{"line":2854,"column":4},"end":{"line":2864,"column":5}},"847":{"start":{"line":2856,"column":6},"end":{"line":2856,"column":36}},"848":{"start":{"line":2857,"column":11},"end":{"line":2864,"column":5}},"849":{"start":{"line":2859,"column":6},"end":{"line":2859,"column":66}},"850":{"start":{"line":2860,"column":6},"end":{"line":2860,"column":110}},"851":{"start":{"line":2863,"column":6},"end":{"line":2863,"column":28}},"852":{"start":{"line":2866,"column":4},"end":{"line":2866,"column":28}},"853":{"start":{"line":2869,"column":2},"end":{"line":2869,"column":32}},"854":{"start":{"line":2872,"column":0},"end":{"line":2872,"column":78}},"855":{"start":{"line":2874,"column":0},"end":{"line":2874,"column":91}},"856":{"start":{"line":2876,"column":0},"end":{"line":2971,"column":44}},"857":{"start":{"line":2972,"column":0},"end":{"line":3213,"column":1}},"858":{"start":{"line":2985,"column":2},"end":{"line":2987,"column":4}},"859":{"start":{"line":2986,"column":4},"end":{"line":2986,"column":53}},"860":{"start":{"line":2989,"column":2},"end":{"line":3212,"column":4}},"861":{"start":{"line":2995,"column":6},"end":{"line":2996,"column":42}},"862":{"start":{"line":2998,"column":6},"end":{"line":2999,"column":49}},"863":{"start":{"line":3001,"column":6},"end":{"line":3001,"column":82}},"864":{"start":{"line":3003,"column":6},"end":{"line":3004,"column":108}},"865":{"start":{"line":3006,"column":6},"end":{"line":3210,"column":8}},"866":{"start":{"line":3008,"column":8},"end":{"line":3008,"column":37}},"867":{"start":{"line":3009,"column":8},"end":{"line":3009,"column":27}},"868":{"start":{"line":3010,"column":8},"end":{"line":3010,"column":28}},"869":{"start":{"line":3011,"column":8},"end":{"line":3011,"column":64}},"870":{"start":{"line":3012,"column":8},"end":{"line":3012,"column":32}},"871":{"start":{"line":3014,"column":8},"end":{"line":3028,"column":10}},"872":{"start":{"line":3016,"column":10},"end":{"line":3018,"column":11}},"873":{"start":{"line":3017,"column":12},"end":{"line":3017,"column":92}},"874":{"start":{"line":3020,"column":10},"end":{"line":3027,"column":11}},"875":{"start":{"line":3021,"column":12},"end":{"line":3026,"column":13}},"876":{"start":{"line":3022,"column":14},"end":{"line":3025,"column":15}},"877":{"start":{"line":3023,"column":16},"end":{"line":3023,"column":92}},"878":{"start":{"line":3024,"column":16},"end":{"line":3024,"column":63}},"879":{"start":{"line":3033,"column":8},"end":{"line":3066,"column":10}},"880":{"start":{"line":3036,"column":10},"end":{"line":3039,"column":11}},"881":{"start":{"line":3037,"column":12},"end":{"line":3037,"column":52}},"882":{"start":{"line":3038,"column":12},"end":{"line":3038,"column":62}},"883":{"start":{"line":3041,"column":10},"end":{"line":3064,"column":11}},"884":{"start":{"line":3042,"column":12},"end":{"line":3042,"column":59}},"885":{"start":{"line":3045,"column":12},"end":{"line":3045,"column":75}},"886":{"start":{"line":3047,"column":12},"end":{"line":3061,"column":13}},"887":{"start":{"line":3048,"column":14},"end":{"line":3048,"column":52}},"888":{"start":{"line":3049,"column":14},"end":{"line":3049,"column":53}},"889":{"start":{"line":3050,"column":14},"end":{"line":3050,"column":92}},"890":{"start":{"line":3051,"column":14},"end":{"line":3051,"column":69}},"891":{"start":{"line":3052,"column":14},"end":{"line":3057,"column":15}},"892":{"start":{"line":3053,"column":16},"end":{"line":3056,"column":19}},"893":{"start":{"line":3054,"column":18},"end":{"line":3054,"column":54}},"894":{"start":{"line":3055,"column":18},"end":{"line":3055,"column":39}},"895":{"start":{"line":3060,"column":14},"end":{"line":3060,"column":82}},"896":{"start":{"line":3063,"column":12},"end":{"line":3063,"column":53}},"897":{"start":{"line":3065,"column":10},"end":{"line":3065,"column":31}},"898":{"start":{"line":3068,"column":8},"end":{"line":3073,"column":10}},"899":{"start":{"line":3069,"column":10},"end":{"line":3072,"column":13}},"900":{"start":{"line":3070,"column":12},"end":{"line":3070,"column":58}},"901":{"start":{"line":3071,"column":12},"end":{"line":3071,"column":33}},"902":{"start":{"line":3076,"column":8},"end":{"line":3076,"column":71}},"903":{"start":{"line":3078,"column":8},"end":{"line":3078,"column":46}},"904":{"start":{"line":3079,"column":8},"end":{"line":3091,"column":11}},"905":{"start":{"line":3080,"column":10},"end":{"line":3089,"column":11}},"906":{"start":{"line":3082,"column":12},"end":{"line":3082,"column":42}},"907":{"start":{"line":3085,"column":12},"end":{"line":3088,"column":13}},"908":{"start":{"line":3086,"column":14},"end":{"line":3086,"column":55}},"909":{"start":{"line":3087,"column":14},"end":{"line":3087,"column":35}},"910":{"start":{"line":3090,"column":10},"end":{"line":3090,"column":45}},"911":{"start":{"line":3093,"column":8},"end":{"line":3097,"column":9}},"912":{"start":{"line":3094,"column":10},"end":{"line":3096,"column":11}},"913":{"start":{"line":3095,"column":12},"end":{"line":3095,"column":55}},"914":{"start":{"line":3099,"column":8},"end":{"line":3102,"column":11}},"915":{"start":{"line":3100,"column":10},"end":{"line":3100,"column":36}},"916":{"start":{"line":3101,"column":10},"end":{"line":3101,"column":31}},"917":{"start":{"line":3104,"column":8},"end":{"line":3112,"column":9}},"918":{"start":{"line":3105,"column":10},"end":{"line":3111,"column":13}},"919":{"start":{"line":3106,"column":12},"end":{"line":3110,"column":13}},"920":{"start":{"line":3107,"column":14},"end":{"line":3109,"column":17}},"921":{"start":{"line":3108,"column":16},"end":{"line":3108,"column":98}},"922":{"start":{"line":3114,"column":8},"end":{"line":3126,"column":9}},"923":{"start":{"line":3115,"column":10},"end":{"line":3120,"column":12}},"924":{"start":{"line":3116,"column":12},"end":{"line":3119,"column":15}},"925":{"start":{"line":3117,"column":14},"end":{"line":3117,"column":98}},"926":{"start":{"line":3118,"column":14},"end":{"line":3118,"column":61}},"927":{"start":{"line":3121,"column":10},"end":{"line":3125,"column":11}},"928":{"start":{"line":3122,"column":12},"end":{"line":3124,"column":13}},"929":{"start":{"line":3123,"column":14},"end":{"line":3123,"column":42}},"930":{"start":{"line":3129,"column":8},"end":{"line":3135,"column":10}},"931":{"start":{"line":3130,"column":10},"end":{"line":3134,"column":11}},"932":{"start":{"line":3131,"column":12},"end":{"line":3133,"column":13}},"933":{"start":{"line":3132,"column":14},"end":{"line":3132,"column":135}},"934":{"start":{"line":3138,"column":8},"end":{"line":3155,"column":10}},"935":{"start":{"line":3139,"column":10},"end":{"line":3154,"column":11}},"936":{"start":{"line":3141,"column":12},"end":{"line":3143,"column":13}},"937":{"start":{"line":3142,"column":14},"end":{"line":3142,"column":65}},"938":{"start":{"line":3145,"column":12},"end":{"line":3150,"column":17}},"939":{"start":{"line":3147,"column":16},"end":{"line":3147,"column":74}},"940":{"start":{"line":3149,"column":16},"end":{"line":3149,"column":77}},"941":{"start":{"line":3153,"column":12},"end":{"line":3153,"column":73}},"942":{"start":{"line":3157,"column":8},"end":{"line":3184,"column":10}},"943":{"start":{"line":3158,"column":10},"end":{"line":3162,"column":11}},"944":{"start":{"line":3159,"column":12},"end":{"line":3161,"column":13}},"945":{"start":{"line":3160,"column":14},"end":{"line":3160,"column":40}},"946":{"start":{"line":3163,"column":10},"end":{"line":3183,"column":11}},"947":{"start":{"line":3165,"column":12},"end":{"line":3167,"column":13}},"948":{"start":{"line":3166,"column":14},"end":{"line":3166,"column":78}},"949":{"start":{"line":3168,"column":12},"end":{"line":3168,"column":70}},"950":{"start":{"line":3169,"column":12},"end":{"line":3169,"column":79}},"951":{"start":{"line":3170,"column":12},"end":{"line":3170,"column":86}},"952":{"start":{"line":3171,"column":12},"end":{"line":3173,"column":13}},"953":{"start":{"line":3172,"column":14},"end":{"line":3172,"column":51}},"954":{"start":{"line":3176,"column":12},"end":{"line":3176,"column":59}},"955":{"start":{"line":3177,"column":12},"end":{"line":3180,"column":13}},"956":{"start":{"line":3179,"column":14},"end":{"line":3179,"column":54}},"957":{"start":{"line":3181,"column":12},"end":{"line":3181,"column":53}},"958":{"start":{"line":3182,"column":12},"end":{"line":3182,"column":48}},"959":{"start":{"line":3186,"column":8},"end":{"line":3188,"column":9}},"960":{"start":{"line":3187,"column":10},"end":{"line":3187,"column":70}},"961":{"start":{"line":3191,"column":8},"end":{"line":3191,"column":66}},"962":{"start":{"line":3195,"column":8},"end":{"line":3195,"column":83}},"963":{"start":{"line":3198,"column":8},"end":{"line":3207,"column":9}},"964":{"start":{"line":3199,"column":10},"end":{"line":3203,"column":11}},"965":{"start":{"line":3200,"column":12},"end":{"line":3200,"column":55}},"966":{"start":{"line":3202,"column":12},"end":{"line":3202,"column":42}},"967":{"start":{"line":3204,"column":15},"end":{"line":3207,"column":9}},"968":{"start":{"line":3206,"column":10},"end":{"line":3206,"column":53}},"969":{"start":{"line":3208,"column":8},"end":{"line":3208,"column":29}},"970":{"start":{"line":3209,"column":8},"end":{"line":3209,"column":38}},"971":{"start":{"line":3221,"column":0},"end":{"line":3229,"column":1}},"972":{"start":{"line":3223,"column":2},"end":{"line":3225,"column":3}},"973":{"start":{"line":3224,"column":4},"end":{"line":3224,"column":36}},"974":{"start":{"line":3226,"column":2},"end":{"line":3228,"column":3}},"975":{"start":{"line":3227,"column":4},"end":{"line":3227,"column":48}},"976":{"start":{"line":3231,"column":0},"end":{"line":3231,"column":54}},"977":{"start":{"line":3233,"column":0},"end":{"line":3290,"column":52}},"978":{"start":{"line":3291,"column":0},"end":{"line":3363,"column":1}},"979":{"start":{"line":3295,"column":2},"end":{"line":3362,"column":4}},"980":{"start":{"line":3300,"column":6},"end":{"line":3302,"column":34}},"981":{"start":{"line":3305,"column":6},"end":{"line":3331,"column":8}},"982":{"start":{"line":3306,"column":8},"end":{"line":3322,"column":11}},"983":{"start":{"line":3307,"column":10},"end":{"line":3309,"column":11}},"984":{"start":{"line":3308,"column":12},"end":{"line":3308,"column":19}},"985":{"start":{"line":3310,"column":10},"end":{"line":3310,"column":51}},"986":{"start":{"line":3313,"column":10},"end":{"line":3315,"column":11}},"987":{"start":{"line":3314,"column":12},"end":{"line":3314,"column":69}},"988":{"start":{"line":3316,"column":10},"end":{"line":3321,"column":15}},"989":{"start":{"line":3318,"column":14},"end":{"line":3318,"column":55}},"990":{"start":{"line":3320,"column":14},"end":{"line":3320,"column":57}},"991":{"start":{"line":3325,"column":8},"end":{"line":3330,"column":11}},"992":{"start":{"line":3326,"column":10},"end":{"line":3329,"column":11}},"993":{"start":{"line":3327,"column":12},"end":{"line":3327,"column":46}},"994":{"start":{"line":3328,"column":12},"end":{"line":3328,"column":53}},"995":{"start":{"line":3334,"column":6},"end":{"line":3339,"column":8}},"996":{"start":{"line":3337,"column":30},"end":{"line":3337,"column":55}},"997":{"start":{"line":3341,"column":6},"end":{"line":3346,"column":8}},"998":{"start":{"line":3344,"column":30},"end":{"line":3344,"column":57}},"999":{"start":{"line":3348,"column":6},"end":{"line":3350,"column":7}},"1000":{"start":{"line":3349,"column":8},"end":{"line":3349,"column":69}},"1001":{"start":{"line":3353,"column":6},"end":{"line":3353,"column":64}},"1002":{"start":{"line":3357,"column":6},"end":{"line":3357,"column":81}},"1003":{"start":{"line":3359,"column":6},"end":{"line":3359,"column":27}},"1004":{"start":{"line":3360,"column":6},"end":{"line":3360,"column":36}},"1005":{"start":{"line":3365,"column":0},"end":{"line":3379,"column":1}},"1006":{"start":{"line":3367,"column":2},"end":{"line":3369,"column":3}},"1007":{"start":{"line":3368,"column":4},"end":{"line":3368,"column":11}},"1008":{"start":{"line":3370,"column":2},"end":{"line":3377,"column":3}},"1009":{"start":{"line":3371,"column":4},"end":{"line":3371,"column":36}},"1010":{"start":{"line":3373,"column":4},"end":{"line":3376,"column":13}},"1011":{"start":{"line":3374,"column":6},"end":{"line":3374,"column":30}},"1012":{"start":{"line":3375,"column":6},"end":{"line":3375,"column":23}},"1013":{"start":{"line":3378,"column":2},"end":{"line":3378,"column":40}},"1014":{"start":{"line":3381,"column":0},"end":{"line":3381,"column":62}},"1015":{"start":{"line":3383,"column":0},"end":{"line":3404,"column":54}},"1016":{"start":{"line":3406,"column":0},"end":{"line":3437,"column":1}},"1017":{"start":{"line":3410,"column":2},"end":{"line":3436,"column":4}},"1018":{"start":{"line":3412,"column":6},"end":{"line":3417,"column":10}},"1019":{"start":{"line":3413,"column":10},"end":{"line":3413,"column":56}},"1020":{"start":{"line":3416,"column":10},"end":{"line":3416,"column":59}},"1021":{"start":{"line":3418,"column":6},"end":{"line":3418,"column":27}},"1022":{"start":{"line":3420,"column":6},"end":{"line":3434,"column":8}},"1023":{"start":{"line":3422,"column":8},"end":{"line":3422,"column":107}},"1024":{"start":{"line":3423,"column":8},"end":{"line":3433,"column":9}},"1025":{"start":{"line":3425,"column":10},"end":{"line":3427,"column":13}},"1026":{"start":{"line":3426,"column":12},"end":{"line":3426,"column":70}},"1027":{"start":{"line":3428,"column":10},"end":{"line":3430,"column":13}},"1028":{"start":{"line":3429,"column":12},"end":{"line":3429,"column":77}},"1029":{"start":{"line":3432,"column":10},"end":{"line":3432,"column":43}},"1030":{"start":{"line":3439,"column":0},"end":{"line":3439,"column":64}},"1031":{"start":{"line":3441,"column":0},"end":{"line":3491,"column":62}},"1032":{"start":{"line":3493,"column":0},"end":{"line":3514,"column":1}},"1033":{"start":{"line":3497,"column":2},"end":{"line":3513,"column":4}},"1034":{"start":{"line":3501,"column":6},"end":{"line":3511,"column":8}},"1035":{"start":{"line":3503,"column":10},"end":{"line":3503,"column":66}},"1036":{"start":{"line":3505,"column":10},"end":{"line":3509,"column":11}},"1037":{"start":{"line":3506,"column":12},"end":{"line":3506,"column":66}},"1038":{"start":{"line":3508,"column":12},"end":{"line":3508,"column":65}},"1039":{"start":{"line":3522,"column":0},"end":{"line":3530,"column":1}},"1040":{"start":{"line":3524,"column":2},"end":{"line":3526,"column":3}},"1041":{"start":{"line":3525,"column":4},"end":{"line":3525,"column":36}},"1042":{"start":{"line":3527,"column":2},"end":{"line":3529,"column":3}},"1043":{"start":{"line":3528,"column":4},"end":{"line":3528,"column":48}},"1044":{"start":{"line":3532,"column":0},"end":{"line":3532,"column":72}},"1045":{"start":{"line":3534,"column":0},"end":{"line":3579,"column":60}},"1046":{"start":{"line":3581,"column":0},"end":{"line":3601,"column":1}},"1047":{"start":{"line":3585,"column":2},"end":{"line":3600,"column":4}},"1048":{"start":{"line":3589,"column":6},"end":{"line":3598,"column":8}},"1049":{"start":{"line":3591,"column":8},"end":{"line":3593,"column":11}},"1050":{"start":{"line":3592,"column":10},"end":{"line":3592,"column":57}},"1051":{"start":{"line":3595,"column":8},"end":{"line":3597,"column":11}},"1052":{"start":{"line":3596,"column":10},"end":{"line":3596,"column":55}},"1053":{"start":{"line":3603,"column":0},"end":{"line":3603,"column":70}},"1054":{"start":{"line":3605,"column":0},"end":{"line":3657,"column":45}},"1055":{"start":{"line":3659,"column":0},"end":{"line":3679,"column":1}},"1056":{"start":{"line":3663,"column":2},"end":{"line":3672,"column":4}},"1057":{"start":{"line":3664,"column":4},"end":{"line":3669,"column":5}},"1058":{"start":{"line":3665,"column":6},"end":{"line":3667,"column":10}},"1059":{"start":{"line":3668,"column":6},"end":{"line":3668,"column":57}},"1060":{"start":{"line":3671,"column":4},"end":{"line":3671,"column":94}},"1061":{"start":{"line":3674,"column":2},"end":{"line":3676,"column":3}},"1062":{"start":{"line":3675,"column":4},"end":{"line":3675,"column":37}},"1063":{"start":{"line":3678,"column":2},"end":{"line":3678,"column":25}},"1064":{"start":{"line":3681,"column":0},"end":{"line":3681,"column":62}},"1065":{"start":{"line":3683,"column":0},"end":{"line":3697,"column":51}},"1066":{"start":{"line":3699,"column":0},"end":{"line":3704,"column":1}},"1067":{"start":{"line":3703,"column":2},"end":{"line":3703,"column":39}},"1068":{"start":{"line":3706,"column":0},"end":{"line":3706,"column":52}},"1069":{"start":{"line":3707,"column":0},"end":{"line":3707,"column":32}}},"branchMap":{"1":{"line":7,"type":"if","locations":[{"start":{"line":7,"column":2},"end":{"line":7,"column":2}},{"start":{"line":7,"column":2},"end":{"line":7,"column":2}}]},"2":{"line":7,"type":"binary-expr","locations":[{"start":{"line":7,"column":6},"end":{"line":7,"column":34}},{"start":{"line":7,"column":38},"end":{"line":7,"column":48}}]},"3":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":9},"end":{"line":12,"column":9}},{"start":{"line":12,"column":9},"end":{"line":12,"column":9}}]},"4":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":4},"end":{"line":49,"column":4}},{"start":{"line":49,"column":4},"end":{"line":49,"column":4}}]},"5":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":2},"end":{"line":60,"column":2}},{"start":{"line":60,"column":2},"end":{"line":60,"column":2}}]},"6":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":4},"end":{"line":61,"column":4}},{"start":{"line":61,"column":4},"end":{"line":61,"column":4}}]},"7":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":9},"end":{"line":66,"column":9}},{"start":{"line":66,"column":9},"end":{"line":66,"column":9}}]},"8":{"line":126,"type":"if","locations":[{"start":{"line":126,"column":6},"end":{"line":126,"column":6}},{"start":{"line":126,"column":6},"end":{"line":126,"column":6}}]},"9":{"line":132,"type":"if","locations":[{"start":{"line":132,"column":6},"end":{"line":132,"column":6}},{"start":{"line":132,"column":6},"end":{"line":132,"column":6}}]},"10":{"line":138,"type":"if","locations":[{"start":{"line":138,"column":6},"end":{"line":138,"column":6}},{"start":{"line":138,"column":6},"end":{"line":138,"column":6}}]},"11":{"line":144,"type":"if","locations":[{"start":{"line":144,"column":6},"end":{"line":144,"column":6}},{"start":{"line":144,"column":6},"end":{"line":144,"column":6}}]},"12":{"line":150,"type":"if","locations":[{"start":{"line":150,"column":6},"end":{"line":150,"column":6}},{"start":{"line":150,"column":6},"end":{"line":150,"column":6}}]},"13":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":13},"end":{"line":152,"column":13}},{"start":{"line":152,"column":13},"end":{"line":152,"column":13}}]},"14":{"line":153,"type":"if","locations":[{"start":{"line":153,"column":8},"end":{"line":153,"column":8}},{"start":{"line":153,"column":8},"end":{"line":153,"column":8}}]},"15":{"line":161,"type":"if","locations":[{"start":{"line":161,"column":6},"end":{"line":161,"column":6}},{"start":{"line":161,"column":6},"end":{"line":161,"column":6}}]},"16":{"line":237,"type":"if","locations":[{"start":{"line":237,"column":8},"end":{"line":237,"column":8}},{"start":{"line":237,"column":8},"end":{"line":237,"column":8}}]},"17":{"line":239,"type":"if","locations":[{"start":{"line":239,"column":15},"end":{"line":239,"column":15}},{"start":{"line":239,"column":15},"end":{"line":239,"column":15}}]},"18":{"line":241,"type":"if","locations":[{"start":{"line":241,"column":15},"end":{"line":241,"column":15}},{"start":{"line":241,"column":15},"end":{"line":241,"column":15}}]},"19":{"line":242,"type":"if","locations":[{"start":{"line":242,"column":10},"end":{"line":242,"column":10}},{"start":{"line":242,"column":10},"end":{"line":242,"column":10}}]},"20":{"line":260,"type":"if","locations":[{"start":{"line":260,"column":6},"end":{"line":260,"column":6}},{"start":{"line":260,"column":6},"end":{"line":260,"column":6}}]},"21":{"line":260,"type":"binary-expr","locations":[{"start":{"line":260,"column":10},"end":{"line":260,"column":32}},{"start":{"line":260,"column":36},"end":{"line":260,"column":72}}]},"22":{"line":266,"type":"if","locations":[{"start":{"line":266,"column":4},"end":{"line":266,"column":4}},{"start":{"line":266,"column":4},"end":{"line":266,"column":4}}]},"23":{"line":269,"type":"if","locations":[{"start":{"line":269,"column":4},"end":{"line":269,"column":4}},{"start":{"line":269,"column":4},"end":{"line":269,"column":4}}]},"24":{"line":305,"type":"if","locations":[{"start":{"line":305,"column":8},"end":{"line":305,"column":8}},{"start":{"line":305,"column":8},"end":{"line":305,"column":8}}]},"25":{"line":309,"type":"if","locations":[{"start":{"line":309,"column":8},"end":{"line":309,"column":8}},{"start":{"line":309,"column":8},"end":{"line":309,"column":8}}]},"26":{"line":309,"type":"binary-expr","locations":[{"start":{"line":309,"column":12},"end":{"line":309,"column":21}},{"start":{"line":309,"column":25},"end":{"line":309,"column":42}}]},"27":{"line":313,"type":"if","locations":[{"start":{"line":313,"column":8},"end":{"line":313,"column":8}},{"start":{"line":313,"column":8},"end":{"line":313,"column":8}}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":8},"end":{"line":317,"column":8}},{"start":{"line":317,"column":8},"end":{"line":317,"column":8}}]},"29":{"line":321,"type":"cond-expr","locations":[{"start":{"line":321,"column":61},"end":{"line":321,"column":69}},{"start":{"line":321,"column":72},"end":{"line":321,"column":82}}]},"30":{"line":334,"type":"if","locations":[{"start":{"line":334,"column":4},"end":{"line":334,"column":4}},{"start":{"line":334,"column":4},"end":{"line":334,"column":4}}]},"31":{"line":341,"type":"if","locations":[{"start":{"line":341,"column":4},"end":{"line":341,"column":4}},{"start":{"line":341,"column":4},"end":{"line":341,"column":4}}]},"32":{"line":348,"type":"if","locations":[{"start":{"line":348,"column":4},"end":{"line":348,"column":4}},{"start":{"line":348,"column":4},"end":{"line":348,"column":4}}]},"33":{"line":350,"type":"if","locations":[{"start":{"line":350,"column":11},"end":{"line":350,"column":11}},{"start":{"line":350,"column":11},"end":{"line":350,"column":11}}]},"34":{"line":351,"type":"cond-expr","locations":[{"start":{"line":351,"column":44},"end":{"line":351,"column":46}},{"start":{"line":351,"column":49},"end":{"line":351,"column":51}}]},"35":{"line":353,"type":"if","locations":[{"start":{"line":353,"column":6},"end":{"line":353,"column":6}},{"start":{"line":353,"column":6},"end":{"line":353,"column":6}}]},"36":{"line":356,"type":"if","locations":[{"start":{"line":356,"column":8},"end":{"line":356,"column":8}},{"start":{"line":356,"column":8},"end":{"line":356,"column":8}}]},"37":{"line":365,"type":"if","locations":[{"start":{"line":365,"column":8},"end":{"line":365,"column":8}},{"start":{"line":365,"column":8},"end":{"line":365,"column":8}}]},"38":{"line":374,"type":"if","locations":[{"start":{"line":374,"column":11},"end":{"line":374,"column":11}},{"start":{"line":374,"column":11},"end":{"line":374,"column":11}}]},"39":{"line":376,"type":"if","locations":[{"start":{"line":376,"column":11},"end":{"line":376,"column":11}},{"start":{"line":376,"column":11},"end":{"line":376,"column":11}}]},"40":{"line":376,"type":"binary-expr","locations":[{"start":{"line":376,"column":15},"end":{"line":376,"column":42}},{"start":{"line":376,"column":46},"end":{"line":376,"column":60}}]},"41":{"line":432,"type":"binary-expr","locations":[{"start":{"line":432,"column":16},"end":{"line":432,"column":19}},{"start":{"line":432,"column":23},"end":{"line":432,"column":25}}]},"42":{"line":435,"type":"binary-expr","locations":[{"start":{"line":435,"column":20},"end":{"line":435,"column":23}},{"start":{"line":435,"column":27},"end":{"line":435,"column":29}}]},"43":{"line":437,"type":"cond-expr","locations":[{"start":{"line":437,"column":35},"end":{"line":437,"column":88}},{"start":{"line":437,"column":92},"end":{"line":437,"column":96}}]},"44":{"line":440,"type":"binary-expr","locations":[{"start":{"line":440,"column":20},"end":{"line":440,"column":23}},{"start":{"line":440,"column":27},"end":{"line":440,"column":29}}]},"45":{"line":442,"type":"cond-expr","locations":[{"start":{"line":442,"column":35},"end":{"line":442,"column":88}},{"start":{"line":442,"column":92},"end":{"line":442,"column":96}}]},"46":{"line":445,"type":"binary-expr","locations":[{"start":{"line":445,"column":20},"end":{"line":445,"column":23}},{"start":{"line":445,"column":27},"end":{"line":445,"column":29}}]},"47":{"line":457,"type":"if","locations":[{"start":{"line":457,"column":4},"end":{"line":457,"column":4}},{"start":{"line":457,"column":4},"end":{"line":457,"column":4}}]},"48":{"line":467,"type":"if","locations":[{"start":{"line":467,"column":4},"end":{"line":467,"column":4}},{"start":{"line":467,"column":4},"end":{"line":467,"column":4}}]},"49":{"line":470,"type":"if","locations":[{"start":{"line":470,"column":8},"end":{"line":470,"column":8}},{"start":{"line":470,"column":8},"end":{"line":470,"column":8}}]},"50":{"line":470,"type":"binary-expr","locations":[{"start":{"line":470,"column":12},"end":{"line":470,"column":20}},{"start":{"line":470,"column":24},"end":{"line":470,"column":39}}]},"51":{"line":479,"type":"if","locations":[{"start":{"line":479,"column":6},"end":{"line":479,"column":6}},{"start":{"line":479,"column":6},"end":{"line":479,"column":6}}]},"52":{"line":479,"type":"binary-expr","locations":[{"start":{"line":479,"column":10},"end":{"line":479,"column":18}},{"start":{"line":479,"column":22},"end":{"line":479,"column":37}}]},"53":{"line":490,"type":"binary-expr","locations":[{"start":{"line":490,"column":17},"end":{"line":490,"column":42}},{"start":{"line":490,"column":46},"end":{"line":490,"column":48}}]},"54":{"line":491,"type":"if","locations":[{"start":{"line":491,"column":4},"end":{"line":491,"column":4}},{"start":{"line":491,"column":4},"end":{"line":491,"column":4}}]},"55":{"line":512,"type":"if","locations":[{"start":{"line":512,"column":6},"end":{"line":512,"column":6}},{"start":{"line":512,"column":6},"end":{"line":512,"column":6}}]},"56":{"line":533,"type":"if","locations":[{"start":{"line":533,"column":4},"end":{"line":533,"column":4}},{"start":{"line":533,"column":4},"end":{"line":533,"column":4}}]},"57":{"line":547,"type":"if","locations":[{"start":{"line":547,"column":4},"end":{"line":547,"column":4}},{"start":{"line":547,"column":4},"end":{"line":547,"column":4}}]},"58":{"line":551,"type":"if","locations":[{"start":{"line":551,"column":4},"end":{"line":551,"column":4}},{"start":{"line":551,"column":4},"end":{"line":551,"column":4}}]},"59":{"line":554,"type":"if","locations":[{"start":{"line":554,"column":8},"end":{"line":554,"column":8}},{"start":{"line":554,"column":8},"end":{"line":554,"column":8}}]},"60":{"line":556,"type":"binary-expr","locations":[{"start":{"line":556,"column":28},"end":{"line":556,"column":99}},{"start":{"line":557,"column":12},"end":{"line":557,"column":76}}]},"61":{"line":559,"type":"if","locations":[{"start":{"line":559,"column":10},"end":{"line":559,"column":10}},{"start":{"line":559,"column":10},"end":{"line":559,"column":10}}]},"62":{"line":562,"type":"if","locations":[{"start":{"line":562,"column":10},"end":{"line":562,"column":10}},{"start":{"line":562,"column":10},"end":{"line":562,"column":10}}]},"63":{"line":562,"type":"binary-expr","locations":[{"start":{"line":562,"column":14},"end":{"line":562,"column":25}},{"start":{"line":562,"column":29},"end":{"line":562,"column":43}}]},"64":{"line":564,"type":"if","locations":[{"start":{"line":564,"column":12},"end":{"line":564,"column":12}},{"start":{"line":564,"column":12},"end":{"line":564,"column":12}}]},"65":{"line":575,"type":"if","locations":[{"start":{"line":575,"column":4},"end":{"line":575,"column":4}},{"start":{"line":575,"column":4},"end":{"line":575,"column":4}}]},"66":{"line":575,"type":"binary-expr","locations":[{"start":{"line":575,"column":8},"end":{"line":575,"column":24}},{"start":{"line":575,"column":28},"end":{"line":575,"column":76}}]},"67":{"line":621,"type":"if","locations":[{"start":{"line":621,"column":4},"end":{"line":621,"column":4}},{"start":{"line":621,"column":4},"end":{"line":621,"column":4}}]},"68":{"line":621,"type":"binary-expr","locations":[{"start":{"line":621,"column":8},"end":{"line":621,"column":16}},{"start":{"line":621,"column":20},"end":{"line":621,"column":37}}]},"69":{"line":625,"type":"if","locations":[{"start":{"line":625,"column":4},"end":{"line":625,"column":4}},{"start":{"line":625,"column":4},"end":{"line":625,"column":4}}]},"70":{"line":625,"type":"binary-expr","locations":[{"start":{"line":625,"column":8},"end":{"line":625,"column":15}},{"start":{"line":625,"column":19},"end":{"line":625,"column":36}}]},"71":{"line":626,"type":"if","locations":[{"start":{"line":626,"column":6},"end":{"line":626,"column":6}},{"start":{"line":626,"column":6},"end":{"line":626,"column":6}}]},"72":{"line":630,"type":"if","locations":[{"start":{"line":630,"column":6},"end":{"line":630,"column":6}},{"start":{"line":630,"column":6},"end":{"line":630,"column":6}}]},"73":{"line":653,"type":"if","locations":[{"start":{"line":653,"column":4},"end":{"line":653,"column":4}},{"start":{"line":653,"column":4},"end":{"line":653,"column":4}}]},"74":{"line":673,"type":"if","locations":[{"start":{"line":673,"column":4},"end":{"line":673,"column":4}},{"start":{"line":673,"column":4},"end":{"line":673,"column":4}}]},"75":{"line":691,"type":"if","locations":[{"start":{"line":691,"column":4},"end":{"line":691,"column":4}},{"start":{"line":691,"column":4},"end":{"line":691,"column":4}}]},"76":{"line":694,"type":"if","locations":[{"start":{"line":694,"column":4},"end":{"line":694,"column":4}},{"start":{"line":694,"column":4},"end":{"line":694,"column":4}}]},"77":{"line":698,"type":"if","locations":[{"start":{"line":698,"column":6},"end":{"line":698,"column":6}},{"start":{"line":698,"column":6},"end":{"line":698,"column":6}}]},"78":{"line":702,"type":"if","locations":[{"start":{"line":702,"column":6},"end":{"line":702,"column":6}},{"start":{"line":702,"column":6},"end":{"line":702,"column":6}}]},"79":{"line":705,"type":"cond-expr","locations":[{"start":{"line":705,"column":37},"end":{"line":705,"column":106}},{"start":{"line":705,"column":110},"end":{"line":705,"column":113}}]},"80":{"line":706,"type":"if","locations":[{"start":{"line":706,"column":8},"end":{"line":706,"column":8}},{"start":{"line":706,"column":8},"end":{"line":706,"column":8}}]},"81":{"line":706,"type":"binary-expr","locations":[{"start":{"line":706,"column":12},"end":{"line":706,"column":23}},{"start":{"line":706,"column":27},"end":{"line":706,"column":42}}]},"82":{"line":792,"type":"if","locations":[{"start":{"line":792,"column":4},"end":{"line":792,"column":4}},{"start":{"line":792,"column":4},"end":{"line":792,"column":4}}]},"83":{"line":799,"type":"if","locations":[{"start":{"line":799,"column":4},"end":{"line":799,"column":4}},{"start":{"line":799,"column":4},"end":{"line":799,"column":4}}]},"84":{"line":841,"type":"if","locations":[{"start":{"line":841,"column":4},"end":{"line":841,"column":4}},{"start":{"line":841,"column":4},"end":{"line":841,"column":4}}]},"85":{"line":860,"type":"if","locations":[{"start":{"line":860,"column":4},"end":{"line":860,"column":4}},{"start":{"line":860,"column":4},"end":{"line":860,"column":4}}]},"86":{"line":886,"type":"if","locations":[{"start":{"line":886,"column":4},"end":{"line":886,"column":4}},{"start":{"line":886,"column":4},"end":{"line":886,"column":4}}]},"87":{"line":887,"type":"if","locations":[{"start":{"line":887,"column":6},"end":{"line":887,"column":6}},{"start":{"line":887,"column":6},"end":{"line":887,"column":6}}]},"88":{"line":890,"type":"if","locations":[{"start":{"line":890,"column":13},"end":{"line":890,"column":13}},{"start":{"line":890,"column":13},"end":{"line":890,"column":13}}]},"89":{"line":894,"type":"if","locations":[{"start":{"line":894,"column":6},"end":{"line":894,"column":6}},{"start":{"line":894,"column":6},"end":{"line":894,"column":6}}]},"90":{"line":894,"type":"binary-expr","locations":[{"start":{"line":894,"column":10},"end":{"line":894,"column":46}},{"start":{"line":894,"column":50},"end":{"line":894,"column":100}}]},"91":{"line":900,"type":"if","locations":[{"start":{"line":900,"column":6},"end":{"line":900,"column":6}},{"start":{"line":900,"column":6},"end":{"line":900,"column":6}}]},"92":{"line":923,"type":"if","locations":[{"start":{"line":923,"column":4},"end":{"line":923,"column":4}},{"start":{"line":923,"column":4},"end":{"line":923,"column":4}}]},"93":{"line":924,"type":"if","locations":[{"start":{"line":924,"column":6},"end":{"line":924,"column":6}},{"start":{"line":924,"column":6},"end":{"line":924,"column":6}}]},"94":{"line":924,"type":"binary-expr","locations":[{"start":{"line":924,"column":10},"end":{"line":924,"column":37}},{"start":{"line":924,"column":42},"end":{"line":924,"column":57}}]},"95":{"line":959,"type":"if","locations":[{"start":{"line":959,"column":4},"end":{"line":959,"column":4}},{"start":{"line":959,"column":4},"end":{"line":959,"column":4}}]},"96":{"line":960,"type":"if","locations":[{"start":{"line":960,"column":6},"end":{"line":960,"column":6}},{"start":{"line":960,"column":6},"end":{"line":960,"column":6}}]},"97":{"line":1013,"type":"binary-expr","locations":[{"start":{"line":1013,"column":21},"end":{"line":1013,"column":28}},{"start":{"line":1013,"column":32},"end":{"line":1013,"column":34}}]},"98":{"line":1066,"type":"if","locations":[{"start":{"line":1066,"column":4},"end":{"line":1066,"column":4}},{"start":{"line":1066,"column":4},"end":{"line":1066,"column":4}}]},"99":{"line":1210,"type":"if","locations":[{"start":{"line":1210,"column":4},"end":{"line":1210,"column":4}},{"start":{"line":1210,"column":4},"end":{"line":1210,"column":4}}]},"100":{"line":1212,"type":"if","locations":[{"start":{"line":1212,"column":11},"end":{"line":1212,"column":11}},{"start":{"line":1212,"column":11},"end":{"line":1212,"column":11}}]},"101":{"line":1244,"type":"cond-expr","locations":[{"start":{"line":1244,"column":50},"end":{"line":1244,"column":54}},{"start":{"line":1244,"column":57},"end":{"line":1244,"column":68}}]},"102":{"line":1244,"type":"binary-expr","locations":[{"start":{"line":1244,"column":18},"end":{"line":1244,"column":20}},{"start":{"line":1244,"column":24},"end":{"line":1244,"column":46}}]},"103":{"line":1246,"type":"if","locations":[{"start":{"line":1246,"column":4},"end":{"line":1246,"column":4}},{"start":{"line":1246,"column":4},"end":{"line":1246,"column":4}}]},"104":{"line":1249,"type":"binary-expr","locations":[{"start":{"line":1249,"column":27},"end":{"line":1249,"column":50}},{"start":{"line":1249,"column":54},"end":{"line":1249,"column":60}}]},"105":{"line":1272,"type":"if","locations":[{"start":{"line":1272,"column":4},"end":{"line":1272,"column":4}},{"start":{"line":1272,"column":4},"end":{"line":1272,"column":4}}]},"106":{"line":1274,"type":"if","locations":[{"start":{"line":1274,"column":6},"end":{"line":1274,"column":6}},{"start":{"line":1274,"column":6},"end":{"line":1274,"column":6}}]},"107":{"line":1297,"type":"if","locations":[{"start":{"line":1297,"column":4},"end":{"line":1297,"column":4}},{"start":{"line":1297,"column":4},"end":{"line":1297,"column":4}}]},"108":{"line":1300,"type":"if","locations":[{"start":{"line":1300,"column":11},"end":{"line":1300,"column":11}},{"start":{"line":1300,"column":11},"end":{"line":1300,"column":11}}]},"109":{"line":1303,"type":"if","locations":[{"start":{"line":1303,"column":11},"end":{"line":1303,"column":11}},{"start":{"line":1303,"column":11},"end":{"line":1303,"column":11}}]},"110":{"line":1306,"type":"if","locations":[{"start":{"line":1306,"column":11},"end":{"line":1306,"column":11}},{"start":{"line":1306,"column":11},"end":{"line":1306,"column":11}}]},"111":{"line":1325,"type":"if","locations":[{"start":{"line":1325,"column":4},"end":{"line":1325,"column":4}},{"start":{"line":1325,"column":4},"end":{"line":1325,"column":4}}]},"112":{"line":1350,"type":"if","locations":[{"start":{"line":1350,"column":4},"end":{"line":1350,"column":4}},{"start":{"line":1350,"column":4},"end":{"line":1350,"column":4}}]},"113":{"line":1371,"type":"if","locations":[{"start":{"line":1371,"column":4},"end":{"line":1371,"column":4}},{"start":{"line":1371,"column":4},"end":{"line":1371,"column":4}}]},"114":{"line":1434,"type":"binary-expr","locations":[{"start":{"line":1434,"column":42},"end":{"line":1434,"column":63}},{"start":{"line":1434,"column":67},"end":{"line":1434,"column":99}}]},"115":{"line":1442,"type":"if","locations":[{"start":{"line":1442,"column":6},"end":{"line":1442,"column":6}},{"start":{"line":1442,"column":6},"end":{"line":1442,"column":6}}]},"116":{"line":1442,"type":"binary-expr","locations":[{"start":{"line":1442,"column":10},"end":{"line":1442,"column":16}},{"start":{"line":1442,"column":20},"end":{"line":1442,"column":38}}]},"117":{"line":1445,"type":"cond-expr","locations":[{"start":{"line":1446,"column":9},"end":{"line":1446,"column":56}},{"start":{"line":1446,"column":60},"end":{"line":1446,"column":65}}]},"118":{"line":1445,"type":"binary-expr","locations":[{"start":{"line":1445,"column":18},"end":{"line":1445,"column":31}},{"start":{"line":1445,"column":35},"end":{"line":1445,"column":58}}]},"119":{"line":1446,"type":"binary-expr","locations":[{"start":{"line":1446,"column":9},"end":{"line":1446,"column":39}},{"start":{"line":1446,"column":43},"end":{"line":1446,"column":56}}]},"120":{"line":1449,"type":"if","locations":[{"start":{"line":1449,"column":6},"end":{"line":1449,"column":6}},{"start":{"line":1449,"column":6},"end":{"line":1449,"column":6}}]},"121":{"line":1455,"type":"if","locations":[{"start":{"line":1455,"column":6},"end":{"line":1455,"column":6}},{"start":{"line":1455,"column":6},"end":{"line":1455,"column":6}}]},"122":{"line":1488,"type":"if","locations":[{"start":{"line":1488,"column":6},"end":{"line":1488,"column":6}},{"start":{"line":1488,"column":6},"end":{"line":1488,"column":6}}]},"123":{"line":1493,"type":"cond-expr","locations":[{"start":{"line":1494,"column":10},"end":{"line":1494,"column":42}},{"start":{"line":1495,"column":10},"end":{"line":1495,"column":28}}]},"124":{"line":1499,"type":"if","locations":[{"start":{"line":1499,"column":8},"end":{"line":1499,"column":8}},{"start":{"line":1499,"column":8},"end":{"line":1499,"column":8}}]},"125":{"line":1499,"type":"binary-expr","locations":[{"start":{"line":1499,"column":12},"end":{"line":1499,"column":27}},{"start":{"line":1499,"column":31},"end":{"line":1499,"column":39}}]},"126":{"line":1506,"type":"if","locations":[{"start":{"line":1506,"column":10},"end":{"line":1506,"column":10}},{"start":{"line":1506,"column":10},"end":{"line":1506,"column":10}}]},"127":{"line":1506,"type":"binary-expr","locations":[{"start":{"line":1506,"column":14},"end":{"line":1506,"column":31}},{"start":{"line":1506,"column":35},"end":{"line":1506,"column":59}}]},"128":{"line":1512,"type":"cond-expr","locations":[{"start":{"line":1512,"column":44},"end":{"line":1512,"column":45}},{"start":{"line":1512,"column":48},"end":{"line":1512,"column":49}}]},"129":{"line":1515,"type":"if","locations":[{"start":{"line":1515,"column":12},"end":{"line":1515,"column":12}},{"start":{"line":1515,"column":12},"end":{"line":1515,"column":12}}]},"130":{"line":1523,"type":"if","locations":[{"start":{"line":1523,"column":6},"end":{"line":1523,"column":6}},{"start":{"line":1523,"column":6},"end":{"line":1523,"column":6}}]},"131":{"line":1531,"type":"if","locations":[{"start":{"line":1531,"column":10},"end":{"line":1531,"column":10}},{"start":{"line":1531,"column":10},"end":{"line":1531,"column":10}}]},"132":{"line":1559,"type":"if","locations":[{"start":{"line":1559,"column":6},"end":{"line":1559,"column":6}},{"start":{"line":1559,"column":6},"end":{"line":1559,"column":6}}]},"133":{"line":1562,"type":"if","locations":[{"start":{"line":1562,"column":6},"end":{"line":1562,"column":6}},{"start":{"line":1562,"column":6},"end":{"line":1562,"column":6}}]},"134":{"line":1583,"type":"if","locations":[{"start":{"line":1583,"column":6},"end":{"line":1583,"column":6}},{"start":{"line":1583,"column":6},"end":{"line":1583,"column":6}}]},"135":{"line":1615,"type":"if","locations":[{"start":{"line":1615,"column":6},"end":{"line":1615,"column":6}},{"start":{"line":1615,"column":6},"end":{"line":1615,"column":6}}]},"136":{"line":1625,"type":"if","locations":[{"start":{"line":1625,"column":6},"end":{"line":1625,"column":6}},{"start":{"line":1625,"column":6},"end":{"line":1625,"column":6}}]},"137":{"line":1641,"type":"if","locations":[{"start":{"line":1641,"column":8},"end":{"line":1641,"column":8}},{"start":{"line":1641,"column":8},"end":{"line":1641,"column":8}}]},"138":{"line":1670,"type":"if","locations":[{"start":{"line":1670,"column":4},"end":{"line":1670,"column":4}},{"start":{"line":1670,"column":4},"end":{"line":1670,"column":4}}]},"139":{"line":1673,"type":"if","locations":[{"start":{"line":1673,"column":6},"end":{"line":1673,"column":6}},{"start":{"line":1673,"column":6},"end":{"line":1673,"column":6}}]},"140":{"line":1673,"type":"binary-expr","locations":[{"start":{"line":1673,"column":10},"end":{"line":1673,"column":22}},{"start":{"line":1673,"column":26},"end":{"line":1673,"column":38}}]},"141":{"line":1680,"type":"if","locations":[{"start":{"line":1680,"column":4},"end":{"line":1680,"column":4}},{"start":{"line":1680,"column":4},"end":{"line":1680,"column":4}}]},"142":{"line":1684,"type":"binary-expr","locations":[{"start":{"line":1684,"column":31},"end":{"line":1684,"column":49}},{"start":{"line":1684,"column":53},"end":{"line":1684,"column":58}}]},"143":{"line":1706,"type":"if","locations":[{"start":{"line":1706,"column":6},"end":{"line":1706,"column":6}},{"start":{"line":1706,"column":6},"end":{"line":1706,"column":6}}]},"144":{"line":1708,"type":"if","locations":[{"start":{"line":1708,"column":13},"end":{"line":1708,"column":13}},{"start":{"line":1708,"column":13},"end":{"line":1708,"column":13}}]},"145":{"line":1741,"type":"if","locations":[{"start":{"line":1741,"column":8},"end":{"line":1741,"column":8}},{"start":{"line":1741,"column":8},"end":{"line":1741,"column":8}}]},"146":{"line":1741,"type":"binary-expr","locations":[{"start":{"line":1741,"column":12},"end":{"line":1741,"column":81}},{"start":{"line":1741,"column":85},"end":{"line":1741,"column":125}}]},"147":{"line":1744,"type":"if","locations":[{"start":{"line":1744,"column":10},"end":{"line":1744,"column":10}},{"start":{"line":1744,"column":10},"end":{"line":1744,"column":10}}]},"148":{"line":1785,"type":"if","locations":[{"start":{"line":1785,"column":6},"end":{"line":1785,"column":6}},{"start":{"line":1785,"column":6},"end":{"line":1785,"column":6}}]},"149":{"line":1785,"type":"binary-expr","locations":[{"start":{"line":1785,"column":10},"end":{"line":1785,"column":26}},{"start":{"line":1785,"column":30},"end":{"line":1785,"column":99}},{"start":{"line":1785,"column":103},"end":{"line":1785,"column":143}}]},"150":{"line":1790,"type":"if","locations":[{"start":{"line":1790,"column":8},"end":{"line":1790,"column":8}},{"start":{"line":1790,"column":8},"end":{"line":1790,"column":8}}]},"151":{"line":1790,"type":"binary-expr","locations":[{"start":{"line":1790,"column":12},"end":{"line":1790,"column":37}},{"start":{"line":1790,"column":41},"end":{"line":1790,"column":88}}]},"152":{"line":1792,"type":"if","locations":[{"start":{"line":1792,"column":10},"end":{"line":1792,"column":10}},{"start":{"line":1792,"column":10},"end":{"line":1792,"column":10}}]},"153":{"line":1795,"type":"if","locations":[{"start":{"line":1795,"column":15},"end":{"line":1795,"column":15}},{"start":{"line":1795,"column":15},"end":{"line":1795,"column":15}}]},"154":{"line":1822,"type":"if","locations":[{"start":{"line":1822,"column":6},"end":{"line":1822,"column":6}},{"start":{"line":1822,"column":6},"end":{"line":1822,"column":6}}]},"155":{"line":1847,"type":"if","locations":[{"start":{"line":1847,"column":6},"end":{"line":1847,"column":6}},{"start":{"line":1847,"column":6},"end":{"line":1847,"column":6}}]},"156":{"line":1862,"type":"if","locations":[{"start":{"line":1862,"column":8},"end":{"line":1862,"column":8}},{"start":{"line":1862,"column":8},"end":{"line":1862,"column":8}}]},"157":{"line":1869,"type":"if","locations":[{"start":{"line":1869,"column":10},"end":{"line":1869,"column":10}},{"start":{"line":1869,"column":10},"end":{"line":1869,"column":10}}]},"158":{"line":1869,"type":"binary-expr","locations":[{"start":{"line":1869,"column":14},"end":{"line":1869,"column":47}},{"start":{"line":1869,"column":51},"end":{"line":1869,"column":87}}]},"159":{"line":1896,"type":"if","locations":[{"start":{"line":1896,"column":6},"end":{"line":1896,"column":6}},{"start":{"line":1896,"column":6},"end":{"line":1896,"column":6}}]},"160":{"line":1899,"type":"if","locations":[{"start":{"line":1899,"column":8},"end":{"line":1899,"column":8}},{"start":{"line":1899,"column":8},"end":{"line":1899,"column":8}}]},"161":{"line":1899,"type":"binary-expr","locations":[{"start":{"line":1899,"column":12},"end":{"line":1899,"column":19}},{"start":{"line":1899,"column":23},"end":{"line":1899,"column":36}}]},"162":{"line":1918,"type":"cond-expr","locations":[{"start":{"line":1918,"column":70},"end":{"line":1918,"column":92}},{"start":{"line":1918,"column":95},"end":{"line":1918,"column":108}}]},"163":{"line":1932,"type":"cond-expr","locations":[{"start":{"line":1932,"column":77},"end":{"line":1932,"column":99}},{"start":{"line":1932,"column":102},"end":{"line":1932,"column":115}}]},"164":{"line":1939,"type":"cond-expr","locations":[{"start":{"line":1939,"column":25},"end":{"line":1939,"column":48}},{"start":{"line":1939,"column":51},"end":{"line":1939,"column":68}}]},"165":{"line":1940,"type":"cond-expr","locations":[{"start":{"line":1940,"column":43},"end":{"line":1940,"column":79}},{"start":{"line":1940,"column":82},"end":{"line":1940,"column":101}}]},"166":{"line":1943,"type":"if","locations":[{"start":{"line":1943,"column":6},"end":{"line":1943,"column":6}},{"start":{"line":1943,"column":6},"end":{"line":1943,"column":6}}]},"167":{"line":1943,"type":"binary-expr","locations":[{"start":{"line":1943,"column":10},"end":{"line":1943,"column":15}},{"start":{"line":1943,"column":19},"end":{"line":1943,"column":77}},{"start":{"line":1943,"column":81},"end":{"line":1943,"column":110}}]},"168":{"line":1947,"type":"if","locations":[{"start":{"line":1947,"column":8},"end":{"line":1947,"column":8}},{"start":{"line":1947,"column":8},"end":{"line":1947,"column":8}}]},"169":{"line":1960,"type":"if","locations":[{"start":{"line":1960,"column":8},"end":{"line":1960,"column":8}},{"start":{"line":1960,"column":8},"end":{"line":1960,"column":8}}]},"170":{"line":1960,"type":"binary-expr","locations":[{"start":{"line":1960,"column":12},"end":{"line":1960,"column":45}},{"start":{"line":1960,"column":49},"end":{"line":1960,"column":63}}]},"171":{"line":1967,"type":"if","locations":[{"start":{"line":1967,"column":8},"end":{"line":1967,"column":8}},{"start":{"line":1967,"column":8},"end":{"line":1967,"column":8}}]},"172":{"line":1967,"type":"binary-expr","locations":[{"start":{"line":1967,"column":12},"end":{"line":1967,"column":16}},{"start":{"line":1967,"column":20},"end":{"line":1967,"column":37}},{"start":{"line":1967,"column":41},"end":{"line":1967,"column":65}}]},"173":{"line":1974,"type":"if","locations":[{"start":{"line":1974,"column":15},"end":{"line":1974,"column":15}},{"start":{"line":1974,"column":15},"end":{"line":1974,"column":15}}]},"174":{"line":1974,"type":"binary-expr","locations":[{"start":{"line":1974,"column":19},"end":{"line":1974,"column":52}},{"start":{"line":1974,"column":56},"end":{"line":1974,"column":70}},{"start":{"line":1974,"column":74},"end":{"line":1974,"column":110}}]},"175":{"line":1978,"type":"if","locations":[{"start":{"line":1978,"column":10},"end":{"line":1978,"column":10}},{"start":{"line":1978,"column":10},"end":{"line":1978,"column":10}}]},"176":{"line":1984,"type":"if","locations":[{"start":{"line":1984,"column":10},"end":{"line":1984,"column":10}},{"start":{"line":1984,"column":10},"end":{"line":1984,"column":10}}]},"177":{"line":1996,"type":"cond-expr","locations":[{"start":{"line":1996,"column":33},"end":{"line":1996,"column":56}},{"start":{"line":1996,"column":59},"end":{"line":1996,"column":76}}]},"178":{"line":2000,"type":"if","locations":[{"start":{"line":2000,"column":6},"end":{"line":2000,"column":6}},{"start":{"line":2000,"column":6},"end":{"line":2000,"column":6}}]},"179":{"line":2000,"type":"binary-expr","locations":[{"start":{"line":2000,"column":10},"end":{"line":2000,"column":29}},{"start":{"line":2000,"column":33},"end":{"line":2000,"column":107}}]},"180":{"line":2005,"type":"if","locations":[{"start":{"line":2005,"column":6},"end":{"line":2005,"column":6}},{"start":{"line":2005,"column":6},"end":{"line":2005,"column":6}}]},"181":{"line":2005,"type":"binary-expr","locations":[{"start":{"line":2005,"column":10},"end":{"line":2005,"column":15}},{"start":{"line":2005,"column":19},"end":{"line":2005,"column":77}},{"start":{"line":2005,"column":81},"end":{"line":2005,"column":110}}]},"182":{"line":2009,"type":"if","locations":[{"start":{"line":2009,"column":8},"end":{"line":2009,"column":8}},{"start":{"line":2009,"column":8},"end":{"line":2009,"column":8}}]},"183":{"line":2018,"type":"if","locations":[{"start":{"line":2018,"column":8},"end":{"line":2018,"column":8}},{"start":{"line":2018,"column":8},"end":{"line":2018,"column":8}}]},"184":{"line":2018,"type":"binary-expr","locations":[{"start":{"line":2018,"column":12},"end":{"line":2018,"column":45}},{"start":{"line":2018,"column":49},"end":{"line":2018,"column":63}}]},"185":{"line":2025,"type":"if","locations":[{"start":{"line":2025,"column":8},"end":{"line":2025,"column":8}},{"start":{"line":2025,"column":8},"end":{"line":2025,"column":8}}]},"186":{"line":2025,"type":"binary-expr","locations":[{"start":{"line":2025,"column":12},"end":{"line":2025,"column":16}},{"start":{"line":2025,"column":20},"end":{"line":2025,"column":37}},{"start":{"line":2025,"column":41},"end":{"line":2025,"column":65}}]},"187":{"line":2028,"type":"if","locations":[{"start":{"line":2028,"column":15},"end":{"line":2028,"column":15}},{"start":{"line":2028,"column":15},"end":{"line":2028,"column":15}}]},"188":{"line":2028,"type":"binary-expr","locations":[{"start":{"line":2028,"column":19},"end":{"line":2028,"column":52}},{"start":{"line":2028,"column":56},"end":{"line":2028,"column":70}},{"start":{"line":2028,"column":74},"end":{"line":2028,"column":110}}]},"189":{"line":2042,"type":"if","locations":[{"start":{"line":2042,"column":6},"end":{"line":2042,"column":6}},{"start":{"line":2042,"column":6},"end":{"line":2042,"column":6}}]},"190":{"line":2051,"type":"if","locations":[{"start":{"line":2051,"column":6},"end":{"line":2051,"column":6}},{"start":{"line":2051,"column":6},"end":{"line":2051,"column":6}}]},"191":{"line":2053,"type":"if","locations":[{"start":{"line":2053,"column":8},"end":{"line":2053,"column":8}},{"start":{"line":2053,"column":8},"end":{"line":2053,"column":8}}]},"192":{"line":2057,"type":"if","locations":[{"start":{"line":2057,"column":8},"end":{"line":2057,"column":8}},{"start":{"line":2057,"column":8},"end":{"line":2057,"column":8}}]},"193":{"line":2066,"type":"if","locations":[{"start":{"line":2066,"column":6},"end":{"line":2066,"column":6}},{"start":{"line":2066,"column":6},"end":{"line":2066,"column":6}}]},"194":{"line":2066,"type":"binary-expr","locations":[{"start":{"line":2066,"column":10},"end":{"line":2066,"column":33}},{"start":{"line":2066,"column":37},"end":{"line":2066,"column":51}},{"start":{"line":2066,"column":55},"end":{"line":2066,"column":73}}]},"195":{"line":2087,"type":"if","locations":[{"start":{"line":2087,"column":6},"end":{"line":2087,"column":6}},{"start":{"line":2087,"column":6},"end":{"line":2087,"column":6}}]},"196":{"line":2134,"type":"if","locations":[{"start":{"line":2134,"column":6},"end":{"line":2134,"column":6}},{"start":{"line":2134,"column":6},"end":{"line":2134,"column":6}}]},"197":{"line":2134,"type":"binary-expr","locations":[{"start":{"line":2134,"column":10},"end":{"line":2134,"column":31}},{"start":{"line":2134,"column":35},"end":{"line":2134,"column":51}}]},"198":{"line":2139,"type":"if","locations":[{"start":{"line":2139,"column":8},"end":{"line":2139,"column":8}},{"start":{"line":2139,"column":8},"end":{"line":2139,"column":8}}]},"199":{"line":2140,"type":"if","locations":[{"start":{"line":2140,"column":10},"end":{"line":2140,"column":10}},{"start":{"line":2140,"column":10},"end":{"line":2140,"column":10}}]},"200":{"line":2140,"type":"binary-expr","locations":[{"start":{"line":2140,"column":14},"end":{"line":2140,"column":31}},{"start":{"line":2140,"column":35},"end":{"line":2140,"column":59}}]},"201":{"line":2142,"type":"if","locations":[{"start":{"line":2142,"column":14},"end":{"line":2142,"column":14}},{"start":{"line":2142,"column":14},"end":{"line":2142,"column":14}}]},"202":{"line":2150,"type":"if","locations":[{"start":{"line":2150,"column":6},"end":{"line":2150,"column":6}},{"start":{"line":2150,"column":6},"end":{"line":2150,"column":6}}]},"203":{"line":2171,"type":"if","locations":[{"start":{"line":2171,"column":6},"end":{"line":2171,"column":6}},{"start":{"line":2171,"column":6},"end":{"line":2171,"column":6}}]},"204":{"line":2171,"type":"binary-expr","locations":[{"start":{"line":2171,"column":10},"end":{"line":2171,"column":31}},{"start":{"line":2171,"column":35},"end":{"line":2171,"column":51}}]},"205":{"line":2172,"type":"if","locations":[{"start":{"line":2172,"column":8},"end":{"line":2172,"column":8}},{"start":{"line":2172,"column":8},"end":{"line":2172,"column":8}}]},"206":{"line":2176,"type":"if","locations":[{"start":{"line":2176,"column":10},"end":{"line":2176,"column":10}},{"start":{"line":2176,"column":10},"end":{"line":2176,"column":10}}]},"207":{"line":2255,"type":"if","locations":[{"start":{"line":2255,"column":6},"end":{"line":2255,"column":6}},{"start":{"line":2255,"column":6},"end":{"line":2255,"column":6}}]},"208":{"line":2267,"type":"if","locations":[{"start":{"line":2267,"column":6},"end":{"line":2267,"column":6}},{"start":{"line":2267,"column":6},"end":{"line":2267,"column":6}}]},"209":{"line":2267,"type":"binary-expr","locations":[{"start":{"line":2267,"column":10},"end":{"line":2267,"column":43}},{"start":{"line":2267,"column":47},"end":{"line":2267,"column":58}}]},"210":{"line":2271,"type":"if","locations":[{"start":{"line":2271,"column":6},"end":{"line":2271,"column":6}},{"start":{"line":2271,"column":6},"end":{"line":2271,"column":6}}]},"211":{"line":2278,"type":"if","locations":[{"start":{"line":2278,"column":6},"end":{"line":2278,"column":6}},{"start":{"line":2278,"column":6},"end":{"line":2278,"column":6}}]},"212":{"line":2278,"type":"binary-expr","locations":[{"start":{"line":2278,"column":11},"end":{"line":2278,"column":35}},{"start":{"line":2278,"column":39},"end":{"line":2278,"column":62}},{"start":{"line":2278,"column":67},"end":{"line":2278,"column":81}},{"start":{"line":2278,"column":85},"end":{"line":2278,"column":103}}]},"213":{"line":2282,"type":"if","locations":[{"start":{"line":2282,"column":10},"end":{"line":2282,"column":10}},{"start":{"line":2282,"column":10},"end":{"line":2282,"column":10}}]},"214":{"line":2295,"type":"if","locations":[{"start":{"line":2295,"column":13},"end":{"line":2295,"column":13}},{"start":{"line":2295,"column":13},"end":{"line":2295,"column":13}}]},"215":{"line":2299,"type":"if","locations":[{"start":{"line":2299,"column":10},"end":{"line":2299,"column":10}},{"start":{"line":2299,"column":10},"end":{"line":2299,"column":10}}]},"216":{"line":2306,"type":"if","locations":[{"start":{"line":2306,"column":10},"end":{"line":2306,"column":10}},{"start":{"line":2306,"column":10},"end":{"line":2306,"column":10}}]},"217":{"line":2306,"type":"binary-expr","locations":[{"start":{"line":2306,"column":14},"end":{"line":2306,"column":20}},{"start":{"line":2306,"column":24},"end":{"line":2306,"column":41}},{"start":{"line":2306,"column":45},"end":{"line":2306,"column":73}},{"start":{"line":2306,"column":77},"end":{"line":2306,"column":105}}]},"218":{"line":2420,"type":"if","locations":[{"start":{"line":2420,"column":6},"end":{"line":2420,"column":6}},{"start":{"line":2420,"column":6},"end":{"line":2420,"column":6}}]},"219":{"line":2451,"type":"if","locations":[{"start":{"line":2451,"column":12},"end":{"line":2451,"column":12}},{"start":{"line":2451,"column":12},"end":{"line":2451,"column":12}}]},"220":{"line":2453,"type":"if","locations":[{"start":{"line":2453,"column":14},"end":{"line":2453,"column":14}},{"start":{"line":2453,"column":14},"end":{"line":2453,"column":14}}]},"221":{"line":2458,"type":"if","locations":[{"start":{"line":2458,"column":10},"end":{"line":2458,"column":10}},{"start":{"line":2458,"column":10},"end":{"line":2458,"column":10}}]},"222":{"line":2470,"type":"if","locations":[{"start":{"line":2470,"column":6},"end":{"line":2470,"column":6}},{"start":{"line":2470,"column":6},"end":{"line":2470,"column":6}}]},"223":{"line":2472,"type":"binary-expr","locations":[{"start":{"line":2472,"column":32},"end":{"line":2472,"column":49}},{"start":{"line":2472,"column":53},"end":{"line":2472,"column":78}},{"start":{"line":2472,"column":82},"end":{"line":2472,"column":84}}]},"224":{"line":2473,"type":"if","locations":[{"start":{"line":2473,"column":8},"end":{"line":2473,"column":8}},{"start":{"line":2473,"column":8},"end":{"line":2473,"column":8}}]},"225":{"line":2473,"type":"binary-expr","locations":[{"start":{"line":2473,"column":12},"end":{"line":2473,"column":17}},{"start":{"line":2473,"column":21},"end":{"line":2473,"column":60}}]},"226":{"line":2478,"type":"if","locations":[{"start":{"line":2478,"column":13},"end":{"line":2478,"column":13}},{"start":{"line":2478,"column":13},"end":{"line":2478,"column":13}}]},"227":{"line":2514,"type":"cond-expr","locations":[{"start":{"line":2515,"column":9},"end":{"line":2515,"column":56}},{"start":{"line":2515,"column":60},"end":{"line":2515,"column":65}}]},"228":{"line":2514,"type":"binary-expr","locations":[{"start":{"line":2514,"column":18},"end":{"line":2514,"column":31}},{"start":{"line":2514,"column":35},"end":{"line":2514,"column":58}}]},"229":{"line":2515,"type":"binary-expr","locations":[{"start":{"line":2515,"column":9},"end":{"line":2515,"column":39}},{"start":{"line":2515,"column":43},"end":{"line":2515,"column":56}}]},"230":{"line":2518,"type":"if","locations":[{"start":{"line":2518,"column":6},"end":{"line":2518,"column":6}},{"start":{"line":2518,"column":6},"end":{"line":2518,"column":6}}]},"231":{"line":2518,"type":"binary-expr","locations":[{"start":{"line":2518,"column":10},"end":{"line":2518,"column":32}},{"start":{"line":2518,"column":36},"end":{"line":2518,"column":70}}]},"232":{"line":2523,"type":"if","locations":[{"start":{"line":2523,"column":6},"end":{"line":2523,"column":6}},{"start":{"line":2523,"column":6},"end":{"line":2523,"column":6}}]},"233":{"line":2529,"type":"if","locations":[{"start":{"line":2529,"column":6},"end":{"line":2529,"column":6}},{"start":{"line":2529,"column":6},"end":{"line":2529,"column":6}}]},"234":{"line":2538,"type":"if","locations":[{"start":{"line":2538,"column":6},"end":{"line":2538,"column":6}},{"start":{"line":2538,"column":6},"end":{"line":2538,"column":6}}]},"235":{"line":2538,"type":"binary-expr","locations":[{"start":{"line":2538,"column":10},"end":{"line":2538,"column":41}},{"start":{"line":2538,"column":45},"end":{"line":2538,"column":69}}]},"236":{"line":2543,"type":"if","locations":[{"start":{"line":2543,"column":6},"end":{"line":2543,"column":6}},{"start":{"line":2543,"column":6},"end":{"line":2543,"column":6}}]},"237":{"line":2548,"type":"if","locations":[{"start":{"line":2548,"column":6},"end":{"line":2548,"column":6}},{"start":{"line":2548,"column":6},"end":{"line":2548,"column":6}}]},"238":{"line":2551,"type":"if","locations":[{"start":{"line":2551,"column":6},"end":{"line":2551,"column":6}},{"start":{"line":2551,"column":6},"end":{"line":2551,"column":6}}]},"239":{"line":2554,"type":"if","locations":[{"start":{"line":2554,"column":6},"end":{"line":2554,"column":6}},{"start":{"line":2554,"column":6},"end":{"line":2554,"column":6}}]},"240":{"line":2554,"type":"binary-expr","locations":[{"start":{"line":2554,"column":10},"end":{"line":2554,"column":27}},{"start":{"line":2554,"column":31},"end":{"line":2554,"column":55}}]},"241":{"line":2559,"type":"if","locations":[{"start":{"line":2559,"column":8},"end":{"line":2559,"column":8}},{"start":{"line":2559,"column":8},"end":{"line":2559,"column":8}}]},"242":{"line":2560,"type":"if","locations":[{"start":{"line":2560,"column":10},"end":{"line":2560,"column":10}},{"start":{"line":2560,"column":10},"end":{"line":2560,"column":10}}]},"243":{"line":2564,"type":"if","locations":[{"start":{"line":2564,"column":8},"end":{"line":2564,"column":8}},{"start":{"line":2564,"column":8},"end":{"line":2564,"column":8}}]},"244":{"line":2569,"type":"if","locations":[{"start":{"line":2569,"column":6},"end":{"line":2569,"column":6}},{"start":{"line":2569,"column":6},"end":{"line":2569,"column":6}}]},"245":{"line":2569,"type":"binary-expr","locations":[{"start":{"line":2569,"column":10},"end":{"line":2569,"column":17}},{"start":{"line":2569,"column":21},"end":{"line":2569,"column":34}}]},"246":{"line":2570,"type":"if","locations":[{"start":{"line":2570,"column":8},"end":{"line":2570,"column":8}},{"start":{"line":2570,"column":8},"end":{"line":2570,"column":8}}]},"247":{"line":2570,"type":"binary-expr","locations":[{"start":{"line":2570,"column":12},"end":{"line":2570,"column":34}},{"start":{"line":2570,"column":38},"end":{"line":2570,"column":61}}]},"248":{"line":2580,"type":"if","locations":[{"start":{"line":2580,"column":10},"end":{"line":2580,"column":10}},{"start":{"line":2580,"column":10},"end":{"line":2580,"column":10}}]},"249":{"line":2580,"type":"binary-expr","locations":[{"start":{"line":2580,"column":14},"end":{"line":2580,"column":47}},{"start":{"line":2580,"column":51},"end":{"line":2580,"column":65}}]},"250":{"line":2584,"type":"if","locations":[{"start":{"line":2584,"column":10},"end":{"line":2584,"column":10}},{"start":{"line":2584,"column":10},"end":{"line":2584,"column":10}}]},"251":{"line":2584,"type":"binary-expr","locations":[{"start":{"line":2584,"column":14},"end":{"line":2584,"column":47}},{"start":{"line":2584,"column":51},"end":{"line":2584,"column":65}},{"start":{"line":2584,"column":69},"end":{"line":2584,"column":105}}]},"252":{"line":2667,"type":"if","locations":[{"start":{"line":2667,"column":6},"end":{"line":2667,"column":6}},{"start":{"line":2667,"column":6},"end":{"line":2667,"column":6}}]},"253":{"line":2670,"type":"if","locations":[{"start":{"line":2670,"column":6},"end":{"line":2670,"column":6}},{"start":{"line":2670,"column":6},"end":{"line":2670,"column":6}}]},"254":{"line":2691,"type":"if","locations":[{"start":{"line":2691,"column":6},"end":{"line":2691,"column":6}},{"start":{"line":2691,"column":6},"end":{"line":2691,"column":6}}]},"255":{"line":2714,"type":"binary-expr","locations":[{"start":{"line":2714,"column":16},"end":{"line":2714,"column":23}},{"start":{"line":2714,"column":27},"end":{"line":2714,"column":43}}]},"256":{"line":2715,"type":"if","locations":[{"start":{"line":2715,"column":6},"end":{"line":2715,"column":6}},{"start":{"line":2715,"column":6},"end":{"line":2715,"column":6}}]},"257":{"line":2715,"type":"binary-expr","locations":[{"start":{"line":2715,"column":10},"end":{"line":2715,"column":17}},{"start":{"line":2715,"column":21},"end":{"line":2715,"column":47}}]},"258":{"line":2733,"type":"if","locations":[{"start":{"line":2733,"column":4},"end":{"line":2733,"column":4}},{"start":{"line":2733,"column":4},"end":{"line":2733,"column":4}}]},"259":{"line":2737,"type":"if","locations":[{"start":{"line":2737,"column":6},"end":{"line":2737,"column":6}},{"start":{"line":2737,"column":6},"end":{"line":2737,"column":6}}]},"260":{"line":2738,"type":"if","locations":[{"start":{"line":2738,"column":8},"end":{"line":2738,"column":8}},{"start":{"line":2738,"column":8},"end":{"line":2738,"column":8}}]},"261":{"line":2745,"type":"if","locations":[{"start":{"line":2745,"column":6},"end":{"line":2745,"column":6}},{"start":{"line":2745,"column":6},"end":{"line":2745,"column":6}}]},"262":{"line":2745,"type":"binary-expr","locations":[{"start":{"line":2745,"column":10},"end":{"line":2745,"column":27}},{"start":{"line":2745,"column":31},"end":{"line":2745,"column":55}}]},"263":{"line":2753,"type":"if","locations":[{"start":{"line":2753,"column":10},"end":{"line":2753,"column":10}},{"start":{"line":2753,"column":10},"end":{"line":2753,"column":10}}]},"264":{"line":2753,"type":"binary-expr","locations":[{"start":{"line":2753,"column":14},"end":{"line":2753,"column":38}},{"start":{"line":2753,"column":42},"end":{"line":2753,"column":80}}]},"265":{"line":2850,"type":"binary-expr","locations":[{"start":{"line":2850,"column":26},"end":{"line":2850,"column":45}},{"start":{"line":2850,"column":49},"end":{"line":2850,"column":51}}]},"266":{"line":2854,"type":"if","locations":[{"start":{"line":2854,"column":4},"end":{"line":2854,"column":4}},{"start":{"line":2854,"column":4},"end":{"line":2854,"column":4}}]},"267":{"line":2857,"type":"if","locations":[{"start":{"line":2857,"column":11},"end":{"line":2857,"column":11}},{"start":{"line":2857,"column":11},"end":{"line":2857,"column":11}}]},"268":{"line":2995,"type":"cond-expr","locations":[{"start":{"line":2996,"column":8},"end":{"line":2996,"column":29}},{"start":{"line":2996,"column":32},"end":{"line":2996,"column":41}}]},"269":{"line":2998,"type":"cond-expr","locations":[{"start":{"line":2999,"column":8},"end":{"line":2999,"column":36}},{"start":{"line":2999,"column":39},"end":{"line":2999,"column":48}}]},"270":{"line":3016,"type":"if","locations":[{"start":{"line":3016,"column":10},"end":{"line":3016,"column":10}},{"start":{"line":3016,"column":10},"end":{"line":3016,"column":10}}]},"271":{"line":3020,"type":"if","locations":[{"start":{"line":3020,"column":10},"end":{"line":3020,"column":10}},{"start":{"line":3020,"column":10},"end":{"line":3020,"column":10}}]},"272":{"line":3022,"type":"if","locations":[{"start":{"line":3022,"column":14},"end":{"line":3022,"column":14}},{"start":{"line":3022,"column":14},"end":{"line":3022,"column":14}}]},"273":{"line":3022,"type":"binary-expr","locations":[{"start":{"line":3022,"column":18},"end":{"line":3022,"column":67}},{"start":{"line":3022,"column":71},"end":{"line":3022,"column":110}},{"start":{"line":3022,"column":114},"end":{"line":3022,"column":140}}]},"274":{"line":3036,"type":"if","locations":[{"start":{"line":3036,"column":10},"end":{"line":3036,"column":10}},{"start":{"line":3036,"column":10},"end":{"line":3036,"column":10}}]},"275":{"line":3041,"type":"if","locations":[{"start":{"line":3041,"column":10},"end":{"line":3041,"column":10}},{"start":{"line":3041,"column":10},"end":{"line":3041,"column":10}}]},"276":{"line":3041,"type":"binary-expr","locations":[{"start":{"line":3041,"column":14},"end":{"line":3041,"column":48}},{"start":{"line":3041,"column":52},"end":{"line":3041,"column":85}}]},"277":{"line":3047,"type":"if","locations":[{"start":{"line":3047,"column":12},"end":{"line":3047,"column":12}},{"start":{"line":3047,"column":12},"end":{"line":3047,"column":12}}]},"278":{"line":3052,"type":"if","locations":[{"start":{"line":3052,"column":14},"end":{"line":3052,"column":14}},{"start":{"line":3052,"column":14},"end":{"line":3052,"column":14}}]},"279":{"line":3052,"type":"binary-expr","locations":[{"start":{"line":3052,"column":18},"end":{"line":3052,"column":49}},{"start":{"line":3052,"column":53},"end":{"line":3052,"column":70}},{"start":{"line":3052,"column":74},"end":{"line":3052,"column":98}}]},"280":{"line":3060,"type":"cond-expr","locations":[{"start":{"line":3060,"column":57},"end":{"line":3060,"column":66}},{"start":{"line":3060,"column":69},"end":{"line":3060,"column":81}}]},"281":{"line":3080,"type":"if","locations":[{"start":{"line":3080,"column":10},"end":{"line":3080,"column":10}},{"start":{"line":3080,"column":10},"end":{"line":3080,"column":10}}]},"282":{"line":3085,"type":"if","locations":[{"start":{"line":3085,"column":12},"end":{"line":3085,"column":12}},{"start":{"line":3085,"column":12},"end":{"line":3085,"column":12}}]},"283":{"line":3085,"type":"binary-expr","locations":[{"start":{"line":3085,"column":16},"end":{"line":3085,"column":36}},{"start":{"line":3085,"column":40},"end":{"line":3085,"column":67}}]},"284":{"line":3094,"type":"if","locations":[{"start":{"line":3094,"column":10},"end":{"line":3094,"column":10}},{"start":{"line":3094,"column":10},"end":{"line":3094,"column":10}}]},"285":{"line":3094,"type":"binary-expr","locations":[{"start":{"line":3094,"column":14},"end":{"line":3094,"column":49}},{"start":{"line":3094,"column":53},"end":{"line":3094,"column":100}},{"start":{"line":3094,"column":104},"end":{"line":3094,"column":129}}]},"286":{"line":3104,"type":"if","locations":[{"start":{"line":3104,"column":8},"end":{"line":3104,"column":8}},{"start":{"line":3104,"column":8},"end":{"line":3104,"column":8}}]},"287":{"line":3106,"type":"if","locations":[{"start":{"line":3106,"column":12},"end":{"line":3106,"column":12}},{"start":{"line":3106,"column":12},"end":{"line":3106,"column":12}}]},"288":{"line":3114,"type":"if","locations":[{"start":{"line":3114,"column":8},"end":{"line":3114,"column":8}},{"start":{"line":3114,"column":8},"end":{"line":3114,"column":8}}]},"289":{"line":3122,"type":"if","locations":[{"start":{"line":3122,"column":12},"end":{"line":3122,"column":12}},{"start":{"line":3122,"column":12},"end":{"line":3122,"column":12}}]},"290":{"line":3122,"type":"binary-expr","locations":[{"start":{"line":3122,"column":16},"end":{"line":3122,"column":65}},{"start":{"line":3122,"column":69},"end":{"line":3122,"column":108}},{"start":{"line":3122,"column":112},"end":{"line":3122,"column":138}}]},"291":{"line":3131,"type":"if","locations":[{"start":{"line":3131,"column":12},"end":{"line":3131,"column":12}},{"start":{"line":3131,"column":12},"end":{"line":3131,"column":12}}]},"292":{"line":3131,"type":"binary-expr","locations":[{"start":{"line":3131,"column":16},"end":{"line":3131,"column":50}},{"start":{"line":3131,"column":54},"end":{"line":3131,"column":87}}]},"293":{"line":3139,"type":"if","locations":[{"start":{"line":3139,"column":10},"end":{"line":3139,"column":10}},{"start":{"line":3139,"column":10},"end":{"line":3139,"column":10}}]},"294":{"line":3141,"type":"if","locations":[{"start":{"line":3141,"column":12},"end":{"line":3141,"column":12}},{"start":{"line":3141,"column":12},"end":{"line":3141,"column":12}}]},"295":{"line":3141,"type":"binary-expr","locations":[{"start":{"line":3141,"column":16},"end":{"line":3141,"column":34}},{"start":{"line":3141,"column":38},"end":{"line":3141,"column":69}}]},"296":{"line":3158,"type":"if","locations":[{"start":{"line":3158,"column":10},"end":{"line":3158,"column":10}},{"start":{"line":3158,"column":10},"end":{"line":3158,"column":10}}]},"297":{"line":3159,"type":"if","locations":[{"start":{"line":3159,"column":12},"end":{"line":3159,"column":12}},{"start":{"line":3159,"column":12},"end":{"line":3159,"column":12}}]},"298":{"line":3163,"type":"if","locations":[{"start":{"line":3163,"column":10},"end":{"line":3163,"column":10}},{"start":{"line":3163,"column":10},"end":{"line":3163,"column":10}}]},"299":{"line":3165,"type":"if","locations":[{"start":{"line":3165,"column":12},"end":{"line":3165,"column":12}},{"start":{"line":3165,"column":12},"end":{"line":3165,"column":12}}]},"300":{"line":3165,"type":"binary-expr","locations":[{"start":{"line":3165,"column":16},"end":{"line":3165,"column":26}},{"start":{"line":3165,"column":31},"end":{"line":3165,"column":42}},{"start":{"line":3165,"column":46},"end":{"line":3165,"column":73}},{"start":{"line":3165,"column":77},"end":{"line":3165,"column":126}}]},"301":{"line":3170,"type":"binary-expr","locations":[{"start":{"line":3170,"column":33},"end":{"line":3170,"column":47}},{"start":{"line":3170,"column":51},"end":{"line":3170,"column":85}}]},"302":{"line":3171,"type":"if","locations":[{"start":{"line":3171,"column":12},"end":{"line":3171,"column":12}},{"start":{"line":3171,"column":12},"end":{"line":3171,"column":12}}]},"303":{"line":3171,"type":"binary-expr","locations":[{"start":{"line":3171,"column":17},"end":{"line":3171,"column":32}},{"start":{"line":3171,"column":36},"end":{"line":3171,"column":51}},{"start":{"line":3171,"column":56},"end":{"line":3171,"column":70}}]},"304":{"line":3177,"type":"if","locations":[{"start":{"line":3177,"column":12},"end":{"line":3177,"column":12}},{"start":{"line":3177,"column":12},"end":{"line":3177,"column":12}}]},"305":{"line":3186,"type":"if","locations":[{"start":{"line":3186,"column":8},"end":{"line":3186,"column":8}},{"start":{"line":3186,"column":8},"end":{"line":3186,"column":8}}]},"306":{"line":3186,"type":"binary-expr","locations":[{"start":{"line":3186,"column":12},"end":{"line":3186,"column":32}},{"start":{"line":3186,"column":36},"end":{"line":3186,"column":55}},{"start":{"line":3186,"column":59},"end":{"line":3186,"column":81}}]},"307":{"line":3198,"type":"if","locations":[{"start":{"line":3198,"column":8},"end":{"line":3198,"column":8}},{"start":{"line":3198,"column":8},"end":{"line":3198,"column":8}}]},"308":{"line":3199,"type":"if","locations":[{"start":{"line":3199,"column":10},"end":{"line":3199,"column":10}},{"start":{"line":3199,"column":10},"end":{"line":3199,"column":10}}]},"309":{"line":3204,"type":"if","locations":[{"start":{"line":3204,"column":15},"end":{"line":3204,"column":15}},{"start":{"line":3204,"column":15},"end":{"line":3204,"column":15}}]},"310":{"line":3223,"type":"if","locations":[{"start":{"line":3223,"column":2},"end":{"line":3223,"column":2}},{"start":{"line":3223,"column":2},"end":{"line":3223,"column":2}}]},"311":{"line":3226,"type":"if","locations":[{"start":{"line":3226,"column":2},"end":{"line":3226,"column":2}},{"start":{"line":3226,"column":2},"end":{"line":3226,"column":2}}]},"312":{"line":3307,"type":"if","locations":[{"start":{"line":3307,"column":10},"end":{"line":3307,"column":10}},{"start":{"line":3307,"column":10},"end":{"line":3307,"column":10}}]},"313":{"line":3313,"type":"if","locations":[{"start":{"line":3313,"column":10},"end":{"line":3313,"column":10}},{"start":{"line":3313,"column":10},"end":{"line":3313,"column":10}}]},"314":{"line":3313,"type":"binary-expr","locations":[{"start":{"line":3313,"column":14},"end":{"line":3313,"column":38}},{"start":{"line":3313,"column":42},"end":{"line":3313,"column":73}}]},"315":{"line":3326,"type":"if","locations":[{"start":{"line":3326,"column":10},"end":{"line":3326,"column":10}},{"start":{"line":3326,"column":10},"end":{"line":3326,"column":10}}]},"316":{"line":3348,"type":"if","locations":[{"start":{"line":3348,"column":6},"end":{"line":3348,"column":6}},{"start":{"line":3348,"column":6},"end":{"line":3348,"column":6}}]},"317":{"line":3367,"type":"if","locations":[{"start":{"line":3367,"column":2},"end":{"line":3367,"column":2}},{"start":{"line":3367,"column":2},"end":{"line":3367,"column":2}}]},"318":{"line":3370,"type":"if","locations":[{"start":{"line":3370,"column":2},"end":{"line":3370,"column":2}},{"start":{"line":3370,"column":2},"end":{"line":3370,"column":2}}]},"319":{"line":3423,"type":"if","locations":[{"start":{"line":3423,"column":8},"end":{"line":3423,"column":8}},{"start":{"line":3423,"column":8},"end":{"line":3423,"column":8}}]},"320":{"line":3423,"type":"binary-expr","locations":[{"start":{"line":3423,"column":12},"end":{"line":3423,"column":32}},{"start":{"line":3423,"column":36},"end":{"line":3423,"column":63}}]},"321":{"line":3505,"type":"if","locations":[{"start":{"line":3505,"column":10},"end":{"line":3505,"column":10}},{"start":{"line":3505,"column":10},"end":{"line":3505,"column":10}}]},"322":{"line":3505,"type":"binary-expr","locations":[{"start":{"line":3505,"column":14},"end":{"line":3505,"column":38}},{"start":{"line":3505,"column":42},"end":{"line":3505,"column":85}}]},"323":{"line":3524,"type":"if","locations":[{"start":{"line":3524,"column":2},"end":{"line":3524,"column":2}},{"start":{"line":3524,"column":2},"end":{"line":3524,"column":2}}]},"324":{"line":3527,"type":"if","locations":[{"start":{"line":3527,"column":2},"end":{"line":3527,"column":2}},{"start":{"line":3527,"column":2},"end":{"line":3527,"column":2}}]},"325":{"line":3664,"type":"if","locations":[{"start":{"line":3664,"column":4},"end":{"line":3664,"column":4}},{"start":{"line":3664,"column":4},"end":{"line":3664,"column":4}}]},"326":{"line":3665,"type":"binary-expr","locations":[{"start":{"line":3665,"column":16},"end":{"line":3665,"column":20}},{"start":{"line":3665,"column":24},"end":{"line":3667,"column":9}}]},"327":{"line":3674,"type":"if","locations":[{"start":{"line":3674,"column":2},"end":{"line":3674,"column":2}},{"start":{"line":3674,"column":2},"end":{"line":3674,"column":2}}]}},"code":["/*!"," * angular-translate - v2.15.1 - 2017-03-04"," * "," * Copyright (c) 2017 The angular-translate team, Pascal Precht; Licensed MIT"," */","(function (root, factory) {","  if (typeof define === 'function' && define.amd) {","    // AMD. Register as an anonymous module unless amdModuleId is set","    define([], function () {","      return (factory());","    });","  } else if (typeof exports === 'object') {","    // Node. Does not work with strict CommonJS, but","    // only CommonJS-like environments that support module.exports,","    // like Node.","    module.exports = factory();","  } else {","    factory();","  }","}(this, function () {","","/**"," * @ngdoc overview"," * @name pascalprecht.translate"," *"," * @description"," * The main module which holds everything together."," */","runTranslate.$inject = ['$translate'];","$translate.$inject = ['$STORAGE_KEY', '$windowProvider', '$translateSanitizationProvider', 'pascalprechtTranslateOverrider'];","$translateDefaultInterpolation.$inject = ['$interpolate', '$translateSanitization'];","translateDirective.$inject = ['$translate', '$interpolate', '$compile', '$parse', '$rootScope'];","translateAttrDirective.$inject = ['$translate', '$rootScope'];","translateCloakDirective.$inject = ['$translate', '$rootScope'];","translateFilterFactory.$inject = ['$parse', '$translate'];","$translationCache.$inject = ['$cacheFactory'];","angular.module('pascalprecht.translate', ['ng'])","  .run(runTranslate);","","function runTranslate($translate) {","","  'use strict';","","  var key = $translate.storageKey(),","    storage = $translate.storage();","","  var fallbackFromIncorrectStorageValue = function () {","    var preferred = $translate.preferredLanguage();","    if (angular.isString(preferred)) {","      $translate.use(preferred);","      // $translate.use() will also remember the language.","      // So, we don't need to call storage.put() here.","    } else {","      storage.put(key, $translate.use());","    }","  };","","  fallbackFromIncorrectStorageValue.displayName = 'fallbackFromIncorrectStorageValue';","","  if (storage) {","    if (!storage.get(key)) {","      fallbackFromIncorrectStorageValue();","    } else {","      $translate.use(storage.get(key))['catch'](fallbackFromIncorrectStorageValue);","    }","  } else if (angular.isString($translate.preferredLanguage())) {","    $translate.use($translate.preferredLanguage());","  }","}","","runTranslate.displayName = 'runTranslate';","","/**"," * @ngdoc object"," * @name pascalprecht.translate.$translateSanitizationProvider"," *"," * @description"," *"," * Configurations for $translateSanitization"," */","angular.module('pascalprecht.translate').provider('$translateSanitization', $translateSanitizationProvider);","","function $translateSanitizationProvider () {","","  'use strict';","","  var $sanitize,","      $sce,","      currentStrategy = null, // TODO change to either 'sanitize', 'escape' or ['sanitize', 'escapeParameters'] in 3.0.","      hasConfiguredStrategy = false,","      hasShownNoStrategyConfiguredWarning = false,","      strategies;","","  /**","   * Definition of a sanitization strategy function","   * @callback StrategyFunction","   * @param {string|object} value - value to be sanitized (either a string or an interpolated value map)","   * @param {string} mode - either 'text' for a string (translation) or 'params' for the interpolated params","   * @return {string|object}","   */","","  /**","   * @ngdoc property","   * @name strategies","   * @propertyOf pascalprecht.translate.$translateSanitizationProvider","   *","   * @description","   * Following strategies are built-in:","   * <dl>","   *   <dt>sanitize</dt>","   *   <dd>Sanitizes HTML in the translation text using $sanitize</dd>","   *   <dt>escape</dt>","   *   <dd>Escapes HTML in the translation</dd>","   *   <dt>sanitizeParameters</dt>","   *   <dd>Sanitizes HTML in the values of the interpolation parameters using $sanitize</dd>","   *   <dt>escapeParameters</dt>","   *   <dd>Escapes HTML in the values of the interpolation parameters</dd>","   *   <dt>escaped</dt>","   *   <dd>Support legacy strategy name 'escaped' for backwards compatibility (will be removed in 3.0)</dd>","   * </dl>","   *","   */","","  strategies = {","    sanitize: function (value, mode/*, context*/) {","      if (mode === 'text') {","        value = htmlSanitizeValue(value);","      }","      return value;","    },","    escape: function (value, mode/*, context*/) {","      if (mode === 'text') {","        value = htmlEscapeValue(value);","      }","      return value;","    },","    sanitizeParameters: function (value, mode/*, context*/) {","      if (mode === 'params') {","        value = mapInterpolationParameters(value, htmlSanitizeValue);","      }","      return value;","    },","    escapeParameters: function (value, mode/*, context*/) {","      if (mode === 'params') {","        value = mapInterpolationParameters(value, htmlEscapeValue);","      }","      return value;","    },","    sce: function (value, mode, context) {","      if (mode === 'text') {","        value = htmlTrustValue(value);","      } else if (mode === 'params') {","        if (context !== 'filter') {","          // do html escape in filter context #1101","          value = mapInterpolationParameters(value, htmlEscapeValue);","        }","      }","      return value;","    },","    sceParameters: function (value, mode/*, context*/) {","      if (mode === 'params') {","        value = mapInterpolationParameters(value, htmlTrustValue);","      }","      return value;","    }","  };","  // Support legacy strategy name 'escaped' for backwards compatibility.","  // TODO should be removed in 3.0","  strategies.escaped = strategies.escapeParameters;","","  /**","   * @ngdoc function","   * @name pascalprecht.translate.$translateSanitizationProvider#addStrategy","   * @methodOf pascalprecht.translate.$translateSanitizationProvider","   *","   * @description","   * Adds a sanitization strategy to the list of known strategies.","   *","   * @param {string} strategyName - unique key for a strategy","   * @param {StrategyFunction} strategyFunction - strategy function","   * @returns {object} this","   */","  this.addStrategy = function (strategyName, strategyFunction) {","    strategies[strategyName] = strategyFunction;","    return this;","  };","","  /**","   * @ngdoc function","   * @name pascalprecht.translate.$translateSanitizationProvider#removeStrategy","   * @methodOf pascalprecht.translate.$translateSanitizationProvider","   *","   * @description","   * Removes a sanitization strategy from the list of known strategies.","   *","   * @param {string} strategyName - unique key for a strategy","   * @returns {object} this","   */","  this.removeStrategy = function (strategyName) {","    delete strategies[strategyName];","    return this;","  };","","  /**","   * @ngdoc function","   * @name pascalprecht.translate.$translateSanitizationProvider#useStrategy","   * @methodOf pascalprecht.translate.$translateSanitizationProvider","   *","   * @description","   * Selects a sanitization strategy. When an array is provided the strategies will be executed in order.","   *","   * @param {string|StrategyFunction|array} strategy The sanitization strategy / strategies which should be used. Either a name of an existing strategy, a custom strategy function, or an array consisting of multiple names and / or custom functions.","   * @returns {object} this","   */","  this.useStrategy = function (strategy) {","    hasConfiguredStrategy = true;","    currentStrategy = strategy;","    return this;","  };","","  /**","   * @ngdoc object","   * @name pascalprecht.translate.$translateSanitization","   * @requires $injector","   * @requires $log","   *","   * @description","   * Sanitizes interpolation parameters and translated texts.","   *","   */","  this.$get = ['$injector', '$log', function ($injector, $log) {","","    var cachedStrategyMap = {};","","    var applyStrategies = function (value, mode, context, selectedStrategies) {","      angular.forEach(selectedStrategies, function (selectedStrategy) {","        if (angular.isFunction(selectedStrategy)) {","          value = selectedStrategy(value, mode, context);","        } else if (angular.isFunction(strategies[selectedStrategy])) {","          value = strategies[selectedStrategy](value, mode, context);","        } else if (angular.isString(strategies[selectedStrategy])) {","          if (!cachedStrategyMap[strategies[selectedStrategy]]) {","            try {","              cachedStrategyMap[strategies[selectedStrategy]] = $injector.get(strategies[selectedStrategy]);","            } catch (e) {","              cachedStrategyMap[strategies[selectedStrategy]] = function() {};","              throw new Error('pascalprecht.translate.$translateSanitization: Unknown sanitization strategy: \\'' + selectedStrategy + '\\'');","            }","          }","          value = cachedStrategyMap[strategies[selectedStrategy]](value, mode, context);","        } else {","          throw new Error('pascalprecht.translate.$translateSanitization: Unknown sanitization strategy: \\'' + selectedStrategy + '\\'');","        }","      });","      return value;","    };","","    // TODO: should be removed in 3.0","    var showNoStrategyConfiguredWarning = function () {","      if (!hasConfiguredStrategy && !hasShownNoStrategyConfiguredWarning) {","        $log.warn('pascalprecht.translate.$translateSanitization: No sanitization strategy has been configured. This can have serious security implications. See http://angular-translate.github.io/docs/#/guide/19_security for details.');","        hasShownNoStrategyConfiguredWarning = true;","      }","    };","","    if ($injector.has('$sanitize')) {","      $sanitize = $injector.get('$sanitize');","    }","    if ($injector.has('$sce')) {","      $sce = $injector.get('$sce');","    }","","    return {","      /**","       * @ngdoc function","       * @name pascalprecht.translate.$translateSanitization#useStrategy","       * @methodOf pascalprecht.translate.$translateSanitization","       *","       * @description","       * Selects a sanitization strategy. When an array is provided the strategies will be executed in order.","       *","       * @param {string|StrategyFunction|array} strategy The sanitization strategy / strategies which should be used. Either a name of an existing strategy, a custom strategy function, or an array consisting of multiple names and / or custom functions.","       */","      useStrategy: (function (self) {","        return function (strategy) {","          self.useStrategy(strategy);","        };","      })(this),","","      /**","       * @ngdoc function","       * @name pascalprecht.translate.$translateSanitization#sanitize","       * @methodOf pascalprecht.translate.$translateSanitization","       *","       * @description","       * Sanitizes a value.","       *","       * @param {string|object} value The value which should be sanitized.","       * @param {string} mode The current sanitization mode, either 'params' or 'text'.","       * @param {string|StrategyFunction|array} [strategy] Optional custom strategy which should be used instead of the currently selected strategy.","       * @param {string} [context] The context of this call: filter, service. Default is service","       * @returns {string|object} sanitized value","       */","      sanitize: function (value, mode, strategy, context) {","        if (!currentStrategy) {","          showNoStrategyConfiguredWarning();","        }","","        if (!strategy && strategy !== null) {","          strategy = currentStrategy;","        }","","        if (!strategy) {","          return value;","        }","","        if (!context) {","          context = 'service';","        }","","        var selectedStrategies = angular.isArray(strategy) ? strategy : [strategy];","        return applyStrategies(value, mode, context, selectedStrategies);","      }","    };","  }];","","  var htmlEscapeValue = function (value) {","    var element = angular.element('<div></div>');","    element.text(value); // not chainable, see #1044","    return element.html();","  };","","  var htmlSanitizeValue = function (value) {","    if (!$sanitize) {","      throw new Error('pascalprecht.translate.$translateSanitization: Error cannot find $sanitize service. Either include the ngSanitize module (https://docs.angularjs.org/api/ngSanitize) or use a sanitization strategy which does not depend on $sanitize, such as \\'escape\\'.');","    }","    return $sanitize(value);","  };","","  var htmlTrustValue = function (value) {","    if (!$sce) {","      throw new Error('pascalprecht.translate.$translateSanitization: Error cannot find $sce service.');","    }","    return $sce.trustAsHtml(value);","  };","","  var mapInterpolationParameters = function (value, iteratee, stack) {","    if (angular.isDate(value)) {","      return value;","    } else if (angular.isObject(value)) {","      var result = angular.isArray(value) ? [] : {};","","      if (!stack) {","        stack = [];","      } else {","        if (stack.indexOf(value) > -1) {","          throw new Error('pascalprecht.translate.$translateSanitization: Error cannot interpolate parameter due recursive object');","        }","      }","","      stack.push(value);","      angular.forEach(value, function (propertyValue, propertyKey) {","","        /* Skipping function properties. */","        if (angular.isFunction(propertyValue)) {","          return;","        }","","        result[propertyKey] = mapInterpolationParameters(propertyValue, iteratee, stack);","      });","      stack.splice(-1, 1); // remove last","","      return result;","    } else if (angular.isNumber(value)) {","      return value;","    } else if (!angular.isUndefined(value) && value !== null) {","      return iteratee(value);","    } else {","      return value;","    }","  };","}","","/**"," * @ngdoc object"," * @name pascalprecht.translate.$translateProvider"," * @description"," *"," * $translateProvider allows developers to register translation-tables, asynchronous loaders"," * and similar to configure translation behavior directly inside of a module."," *"," */","angular.module('pascalprecht.translate')","  .constant('pascalprechtTranslateOverrider', {})","  .provider('$translate', $translate);","","function $translate($STORAGE_KEY, $windowProvider, $translateSanitizationProvider, pascalprechtTranslateOverrider) {","","  'use strict';","","  var $translationTable = {},","    $preferredLanguage,","    $availableLanguageKeys = [],","    $languageKeyAliases,","    $fallbackLanguage,","    $fallbackWasString,","    $uses,","    $nextLang,","    $storageFactory,","    $storageKey = $STORAGE_KEY,","    $storagePrefix,","    $missingTranslationHandlerFactory,","    $interpolationFactory,","    $interpolatorFactories = [],","    $loaderFactory,","    $cloakClassName = 'translate-cloak',","    $loaderOptions,","    $notFoundIndicatorLeft,","    $notFoundIndicatorRight,","    $postCompilingEnabled = false,","    $forceAsyncReloadEnabled = false,","    $nestedObjectDelimeter = '.',","    $isReady = false,","    $keepContent = false,","    loaderCache,","    directivePriority = 0,","    statefulFilter = true,","    postProcessFn,","    uniformLanguageTagResolver = 'default',","    languageTagResolver = {","      'default' : function (tag) {","        return (tag || '').split('-').join('_');","      },","      java : function (tag) {","        var temp = (tag || '').split('-').join('_');","        var parts = temp.split('_');","        return parts.length > 1 ? (parts[0].toLowerCase() + '_' + parts[1].toUpperCase()) : temp;","      },","      bcp47 : function (tag) {","        var temp = (tag || '').split('_').join('-');","        var parts = temp.split('-');","        return parts.length > 1 ? (parts[0].toLowerCase() + '-' + parts[1].toUpperCase()) : temp;","      },","      'iso639-1' : function (tag) {","        var temp = (tag || '').split('_').join('-');","        var parts = temp.split('-');","        return parts[0].toLowerCase();","      }","    };","","  var version = '2.15.1';","","  // tries to determine the browsers language","  var getFirstBrowserLanguage = function () {","","    // internal purpose only","    if (angular.isFunction(pascalprechtTranslateOverrider.getLocale)) {","      return pascalprechtTranslateOverrider.getLocale();","    }","","    var nav = $windowProvider.$get().navigator,","      browserLanguagePropertyKeys = ['language', 'browserLanguage', 'systemLanguage', 'userLanguage'],","      i,","      language;","","    // support for HTML 5.1 \"navigator.languages\"","    if (angular.isArray(nav.languages)) {","      for (i = 0; i < nav.languages.length; i++) {","        language = nav.languages[i];","        if (language && language.length) {","          return language;","        }","      }","    }","","    // support for other well known properties in browsers","    for (i = 0; i < browserLanguagePropertyKeys.length; i++) {","      language = nav[browserLanguagePropertyKeys[i]];","      if (language && language.length) {","        return language;","      }","    }","","    return null;","  };","  getFirstBrowserLanguage.displayName = 'angular-translate/service: getFirstBrowserLanguage';","","  // tries to determine the browsers locale","  var getLocale = function () {","    var locale = getFirstBrowserLanguage() || '';","    if (languageTagResolver[uniformLanguageTagResolver]) {","      locale = languageTagResolver[uniformLanguageTagResolver](locale);","    }","    return locale;","  };","  getLocale.displayName = 'angular-translate/service: getLocale';","","  /**","   * @name indexOf","   * @private","   *","   * @description","   * indexOf polyfill. Kinda sorta.","   *","   * @param {array} array Array to search in.","   * @param {string} searchElement Element to search for.","   *","   * @returns {int} Index of search element.","   */","  var indexOf = function (array, searchElement) {","    for (var i = 0, len = array.length; i < len; i++) {","      if (array[i] === searchElement) {","        return i;","      }","    }","    return -1;","  };","","  /**","   * @name trim","   * @private","   *","   * @description","   * trim polyfill","   *","   * @returns {string} The string stripped of whitespace from both ends","   */","  var trim = function () {","    return this.toString().replace(/^\\s+|\\s+$/g, '');","  };","","  var negotiateLocale = function (preferred) {","    if (!preferred) {","      return;","    }","","    var avail = [],","      locale = angular.lowercase(preferred),","      i = 0,","      n = $availableLanguageKeys.length;","","    for (; i < n; i++) {","      avail.push(angular.lowercase($availableLanguageKeys[i]));","    }","","    // Check for an exact match in our list of available keys","    if (indexOf(avail, locale) > -1) {","      return preferred;","    }","","    if ($languageKeyAliases) {","      var alias;","      for (var langKeyAlias in $languageKeyAliases) {","        if ($languageKeyAliases.hasOwnProperty(langKeyAlias)) {","          var hasWildcardKey = false;","          var hasExactKey = Object.prototype.hasOwnProperty.call($languageKeyAliases, langKeyAlias) &&","            angular.lowercase(langKeyAlias) === angular.lowercase(preferred);","","          if (langKeyAlias.slice(-1) === '*') {","            hasWildcardKey = langKeyAlias.slice(0, -1) === preferred.slice(0, langKeyAlias.length - 1);","          }","          if (hasExactKey || hasWildcardKey) {","            alias = $languageKeyAliases[langKeyAlias];","            if (indexOf(avail, angular.lowercase(alias)) > -1) {","              return alias;","            }","          }","        }","      }","    }","","    // Check for a language code without region","    var parts = preferred.split('_');","","    if (parts.length > 1 && indexOf(avail, angular.lowercase(parts[0])) > -1) {","      return parts[0];","    }","","    // If everything fails, return undefined.","    return;","  };","","  /**","   * @ngdoc function","   * @name pascalprecht.translate.$translateProvider#translations","   * @methodOf pascalprecht.translate.$translateProvider","   *","   * @description","   * Registers a new translation table for specific language key.","   *","   * To register a translation table for specific language, pass a defined language","   * key as first parameter.","   *","   * <pre>","   *  // register translation table for language: 'de_DE'","   *  $translateProvider.translations('de_DE', {","   *    'GREETING': 'Hallo Welt!'","   *  });","   *","   *  // register another one","   *  $translateProvider.translations('en_US', {","   *    'GREETING': 'Hello world!'","   *  });","   * </pre>","   *","   * When registering multiple translation tables for for the same language key,","   * the actual translation table gets extended. This allows you to define module","   * specific translation which only get added, once a specific module is loaded in","   * your app.","   *","   * Invoking this method with no arguments returns the translation table which was","   * registered with no language key. Invoking it with a language key returns the","   * related translation table.","   *","   * @param {string} langKey A language key.","   * @param {object} translationTable A plain old JavaScript object that represents a translation table.","   *","   */","  var translations = function (langKey, translationTable) {","","    if (!langKey && !translationTable) {","      return $translationTable;","    }","","    if (langKey && !translationTable) {","      if (angular.isString(langKey)) {","        return $translationTable[langKey];","      }","    } else {","      if (!angular.isObject($translationTable[langKey])) {","        $translationTable[langKey] = {};","      }","      angular.extend($translationTable[langKey], flatObject(translationTable));","    }","    return this;","  };","","  this.translations = translations;","","  /**","   * @ngdoc function","   * @name pascalprecht.translate.$translateProvider#cloakClassName","   * @methodOf pascalprecht.translate.$translateProvider","   *","   * @description","   *","   * Let's you change the class name for `translate-cloak` directive.","   * Default class name is `translate-cloak`.","   *","   * @param {string} name translate-cloak class name","   */","  this.cloakClassName = function (name) {","    if (!name) {","      return $cloakClassName;","    }","    $cloakClassName = name;","    return this;","  };","","  /**","   * @ngdoc function","   * @name pascalprecht.translate.$translateProvider#nestedObjectDelimeter","   * @methodOf pascalprecht.translate.$translateProvider","   *","   * @description","   *","   * Let's you change the delimiter for namespaced translations.","   * Default delimiter is `.`.","   *","   * @param {string} delimiter namespace separator","   */","  this.nestedObjectDelimeter = function (delimiter) {","    if (!delimiter) {","      return $nestedObjectDelimeter;","    }","    $nestedObjectDelimeter = delimiter;","    return this;","  };","","  /**","   * @name flatObject","   * @private","   *","   * @description","   * Flats an object. This function is used to flatten given translation data with","   * namespaces, so they are later accessible via dot notation.","   */","  var flatObject = function (data, path, result, prevKey) {","    var key, keyWithPath, keyWithShortPath, val;","","    if (!path) {","      path = [];","    }","    if (!result) {","      result = {};","    }","    for (key in data) {","      if (!Object.prototype.hasOwnProperty.call(data, key)) {","        continue;","      }","      val = data[key];","      if (angular.isObject(val)) {","        flatObject(val, path.concat(key), result, key);","      } else {","        keyWithPath = path.length ? ('' + path.join($nestedObjectDelimeter) + $nestedObjectDelimeter + key) : key;","        if (path.length && key === prevKey) {","          // Create shortcut path (foo.bar == foo.bar.bar)","          keyWithShortPath = '' + path.join($nestedObjectDelimeter);","          // Link it to original path","          result[keyWithShortPath] = '@:' + keyWithPath;","        }","        result[keyWithPath] = val;","      }","    }","    return result;","  };","  flatObject.displayName = 'flatObject';","","  /**","   * @ngdoc function","   * @name pascalprecht.translate.$translateProvider#addInterpolation","   * @methodOf pascalprecht.translate.$translateProvider","   *","   * @description","   * Adds interpolation services to angular-translate, so it can manage them.","   *","   * @param {object} factory Interpolation service factory","   */","  this.addInterpolation = function (factory) {","    $interpolatorFactories.push(factory);","    return this;","  };","","  /**","   * @ngdoc function","   * @name pascalprecht.translate.$translateProvider#useMessageFormatInterpolation","   * @methodOf pascalprecht.translate.$translateProvider","   *","   * @description","   * Tells angular-translate to use interpolation functionality of messageformat.js.","   * This is useful when having high level pluralization and gender selection.","   */","  this.useMessageFormatInterpolation = function () {","    return this.useInterpolation('$translateMessageFormatInterpolation');","  };","","  /**","   * @ngdoc function","   * @name pascalprecht.translate.$translateProvider#useInterpolation","   * @methodOf pascalprecht.translate.$translateProvider","   *","   * @description","   * Tells angular-translate which interpolation style to use as default, application-wide.","   * Simply pass a factory/service name. The interpolation service has to implement","   * the correct interface.","   *","   * @param {string} factory Interpolation service name.","   */","  this.useInterpolation = function (factory) {","    $interpolationFactory = factory;","    return this;","  };","","  /**","   * @ngdoc function","   * @name pascalprecht.translate.$translateProvider#useSanitizeStrategy","   * @methodOf pascalprecht.translate.$translateProvider","   *","   * @description","   * Simply sets a sanitation strategy type.","   *","   * @param {string} value Strategy type.","   */","  this.useSanitizeValueStrategy = function (value) {","    $translateSanitizationProvider.useStrategy(value);","    return this;","  };","","  /**","   * @ngdoc function","   * @name pascalprecht.translate.$translateProvider#preferredLanguage","   * @methodOf pascalprecht.translate.$translateProvider","   *","   * @description","   * Tells the module which of the registered translation tables to use for translation","   * at initial startup by passing a language key. Similar to `$translateProvider#use`","   * only that it says which language to **prefer**.","   *","   * @param {string} langKey A language key.","   */","  this.preferredLanguage = function (langKey) {","    if (langKey) {","      setupPreferredLanguage(langKey);","      return this;","    }","    return $preferredLanguage;","  };","  var setupPreferredLanguage = function (langKey) {","    if (langKey) {","      $preferredLanguage = langKey;","    }","    return $preferredLanguage;","  };","  /**","   * @ngdoc function","   * @name pascalprecht.translate.$translateProvider#translationNotFoundIndicator","   * @methodOf pascalprecht.translate.$translateProvider","   *","   * @description","   * Sets an indicator which is used when a translation isn't found. E.g. when","   * setting the indicator as 'X' and one tries to translate a translation id","   * called `NOT_FOUND`, this will result in `X NOT_FOUND X`.","   *","   * Internally this methods sets a left indicator and a right indicator using","   * `$translateProvider.translationNotFoundIndicatorLeft()` and","   * `$translateProvider.translationNotFoundIndicatorRight()`.","   *","   * **Note**: These methods automatically add a whitespace between the indicators","   * and the translation id.","   *","   * @param {string} indicator An indicator, could be any string.","   */","  this.translationNotFoundIndicator = function (indicator) {","    this.translationNotFoundIndicatorLeft(indicator);","    this.translationNotFoundIndicatorRight(indicator);","    return this;","  };","","  /**","   * ngdoc function","   * @name pascalprecht.translate.$translateProvider#translationNotFoundIndicatorLeft","   * @methodOf pascalprecht.translate.$translateProvider","   *","   * @description","   * Sets an indicator which is used when a translation isn't found left to the","   * translation id.","   *","   * @param {string} indicator An indicator.","   */","  this.translationNotFoundIndicatorLeft = function (indicator) {","    if (!indicator) {","      return $notFoundIndicatorLeft;","    }","    $notFoundIndicatorLeft = indicator;","    return this;","  };","","  /**","   * ngdoc function","   * @name pascalprecht.translate.$translateProvider#translationNotFoundIndicatorLeft","   * @methodOf pascalprecht.translate.$translateProvider","   *","   * @description","   * Sets an indicator which is used when a translation isn't found right to the","   * translation id.","   *","   * @param {string} indicator An indicator.","   */","  this.translationNotFoundIndicatorRight = function (indicator) {","    if (!indicator) {","      return $notFoundIndicatorRight;","    }","    $notFoundIndicatorRight = indicator;","    return this;","  };","","  /**","   * @ngdoc function","   * @name pascalprecht.translate.$translateProvider#fallbackLanguage","   * @methodOf pascalprecht.translate.$translateProvider","   *","   * @description","   * Tells the module which of the registered translation tables to use when missing translations","   * at initial startup by passing a language key. Similar to `$translateProvider#use`","   * only that it says which language to **fallback**.","   *","   * @param {string||array} langKey A language key.","   *","   */","  this.fallbackLanguage = function (langKey) {","    fallbackStack(langKey);","    return this;","  };","","  var fallbackStack = function (langKey) {","    if (langKey) {","      if (angular.isString(langKey)) {","        $fallbackWasString = true;","        $fallbackLanguage = [langKey];","      } else if (angular.isArray(langKey)) {","        $fallbackWasString = false;","        $fallbackLanguage = langKey;","      }","      if (angular.isString($preferredLanguage) && indexOf($fallbackLanguage, $preferredLanguage) < 0) {","        $fallbackLanguage.push($preferredLanguage);","      }","","      return this;","    } else {","      if ($fallbackWasString) {","        return $fallbackLanguage[0];","      } else {","        return $fallbackLanguage;","      }","    }","  };","","  /**","   * @ngdoc function","   * @name pascalprecht.translate.$translateProvider#use","   * @methodOf pascalprecht.translate.$translateProvider","   *","   * @description","   * Set which translation table to use for translation by given language key. When","   * trying to 'use' a language which isn't provided, it'll throw an error.","   *","   * You actually don't have to use this method since `$translateProvider#preferredLanguage`","   * does the job too.","   *","   * @param {string} langKey A language key.","   */","  this.use = function (langKey) {","    if (langKey) {","      if (!$translationTable[langKey] && (!$loaderFactory)) {","        // only throw an error, when not loading translation data asynchronously","        throw new Error('$translateProvider couldn\\'t find translationTable for langKey: \\'' + langKey + '\\'');","      }","      $uses = langKey;","      return this;","    }","    return $uses;","  };","","  /**","   * @ngdoc function","   * @name pascalprecht.translate.$translateProvider#resolveClientLocale","   * @methodOf pascalprecht.translate.$translateProvider","   *","   * @description","   * This returns the current browser/client's language key. The result is processed with the configured uniform tag resolver.","   *","   * @returns {string} the current client/browser language key","   */","  this.resolveClientLocale = function () {","    return getLocale();","  };","","  /**","   * @ngdoc function","   * @name pascalprecht.translate.$translateProvider#storageKey","   * @methodOf pascalprecht.translate.$translateProvider","   *","   * @description","   * Tells the module which key must represent the choosed language by a user in the storage.","   *","   * @param {string} key A key for the storage.","   */","  var storageKey = function (key) {","    if (!key) {","      if ($storagePrefix) {","        return $storagePrefix + $storageKey;","      }","      return $storageKey;","    }","    $storageKey = key;","    return this;","  };","","  this.storageKey = storageKey;","","  /**","   * @ngdoc function","   * @name pascalprecht.translate.$translateProvider#useUrlLoader","   * @methodOf pascalprecht.translate.$translateProvider","   *","   * @description","   * Tells angular-translate to use `$translateUrlLoader` extension service as loader.","   *","   * @param {string} url Url","   * @param {Object=} options Optional configuration object","   */","  this.useUrlLoader = function (url, options) {","    return this.useLoader('$translateUrlLoader', angular.extend({url : url}, options));","  };","","  /**","   * @ngdoc function","   * @name pascalprecht.translate.$translateProvider#useStaticFilesLoader","   * @methodOf pascalprecht.translate.$translateProvider","   *","   * @description","   * Tells angular-translate to use `$translateStaticFilesLoader` extension service as loader.","   *","   * @param {Object=} options Optional configuration object","   */","  this.useStaticFilesLoader = function (options) {","    return this.useLoader('$translateStaticFilesLoader', options);","  };","","  /**","   * @ngdoc function","   * @name pascalprecht.translate.$translateProvider#useLoader","   * @methodOf pascalprecht.translate.$translateProvider","   *","   * @description","   * Tells angular-translate to use any other service as loader.","   *","   * @param {string} loaderFactory Factory name to use","   * @param {Object=} options Optional configuration object","   */","  this.useLoader = function (loaderFactory, options) {","    $loaderFactory = loaderFactory;","    $loaderOptions = options || {};","    return this;","  };","","  /**","   * @ngdoc function","   * @name pascalprecht.translate.$translateProvider#useLocalStorage","   * @methodOf pascalprecht.translate.$translateProvider","   *","   * @description","   * Tells angular-translate to use `$translateLocalStorage` service as storage layer.","   *","   */","  this.useLocalStorage = function () {","    return this.useStorage('$translateLocalStorage');","  };","","  /**","   * @ngdoc function","   * @name pascalprecht.translate.$translateProvider#useCookieStorage","   * @methodOf pascalprecht.translate.$translateProvider","   *","   * @description","   * Tells angular-translate to use `$translateCookieStorage` service as storage layer.","   */","  this.useCookieStorage = function () {","    return this.useStorage('$translateCookieStorage');","  };","","  /**","   * @ngdoc function","   * @name pascalprecht.translate.$translateProvider#useStorage","   * @methodOf pascalprecht.translate.$translateProvider","   *","   * @description","   * Tells angular-translate to use custom service as storage layer.","   */","  this.useStorage = function (storageFactory) {","    $storageFactory = storageFactory;","    return this;","  };","","  /**","   * @ngdoc function","   * @name pascalprecht.translate.$translateProvider#storagePrefix","   * @methodOf pascalprecht.translate.$translateProvider","   *","   * @description","   * Sets prefix for storage key.","   *","   * @param {string} prefix Storage key prefix","   */","  this.storagePrefix = function (prefix) {","    if (!prefix) {","      return prefix;","    }","    $storagePrefix = prefix;","    return this;","  };","","  /**","   * @ngdoc function","   * @name pascalprecht.translate.$translateProvider#useMissingTranslationHandlerLog","   * @methodOf pascalprecht.translate.$translateProvider","   *","   * @description","   * Tells angular-translate to use built-in log handler when trying to translate","   * a translation Id which doesn't exist.","   *","   * This is actually a shortcut method for `useMissingTranslationHandler()`.","   *","   */","  this.useMissingTranslationHandlerLog = function () {","    return this.useMissingTranslationHandler('$translateMissingTranslationHandlerLog');","  };","","  /**","   * @ngdoc function","   * @name pascalprecht.translate.$translateProvider#useMissingTranslationHandler","   * @methodOf pascalprecht.translate.$translateProvider","   *","   * @description","   * Expects a factory name which later gets instantiated with `$injector`.","   * This method can be used to tell angular-translate to use a custom","   * missingTranslationHandler. Just build a factory which returns a function","   * and expects a translation id as argument.","   *","   * Example:","   * <pre>","   *  app.config(function ($translateProvider) {","   *    $translateProvider.useMissingTranslationHandler('customHandler');","   *  });","   *","   *  app.factory('customHandler', function (dep1, dep2) {","   *    return function (translationId) {","   *      // something with translationId and dep1 and dep2","   *    };","   *  });","   * </pre>","   *","   * @param {string} factory Factory name","   */","  this.useMissingTranslationHandler = function (factory) {","    $missingTranslationHandlerFactory = factory;","    return this;","  };","","  /**","   * @ngdoc function","   * @name pascalprecht.translate.$translateProvider#usePostCompiling","   * @methodOf pascalprecht.translate.$translateProvider","   *","   * @description","   * If post compiling is enabled, all translated values will be processed","   * again with AngularJS' $compile.","   *","   * Example:","   * <pre>","   *  app.config(function ($translateProvider) {","   *    $translateProvider.usePostCompiling(true);","   *  });","   * </pre>","   *","   * @param {string} factory Factory name","   */","  this.usePostCompiling = function (value) {","    $postCompilingEnabled = !(!value);","    return this;","  };","","  /**","   * @ngdoc function","   * @name pascalprecht.translate.$translateProvider#forceAsyncReload","   * @methodOf pascalprecht.translate.$translateProvider","   *","   * @description","   * If force async reload is enabled, async loader will always be called","   * even if $translationTable already contains the language key, adding","   * possible new entries to the $translationTable.","   *","   * Example:","   * <pre>","   *  app.config(function ($translateProvider) {","   *    $translateProvider.forceAsyncReload(true);","   *  });","   * </pre>","   *","   * @param {boolean} value - valid values are true or false","   */","  this.forceAsyncReload = function (value) {","    $forceAsyncReloadEnabled = !(!value);","    return this;","  };","","  /**","   * @ngdoc function","   * @name pascalprecht.translate.$translateProvider#uniformLanguageTag","   * @methodOf pascalprecht.translate.$translateProvider","   *","   * @description","   * Tells angular-translate which language tag should be used as a result when determining","   * the current browser language.","   *","   * This setting must be set before invoking {@link pascalprecht.translate.$translateProvider#methods_determinePreferredLanguage determinePreferredLanguage()}.","   *","   * <pre>","   * $translateProvider","   *   .uniformLanguageTag('bcp47')","   *   .determinePreferredLanguage()","   * </pre>","   *","   * The resolver currently supports:","   * * default","   *     (traditionally: hyphens will be converted into underscores, i.e. en-US => en_US)","   *     en-US => en_US","   *     en_US => en_US","   *     en-us => en_us","   * * java","   *     like default, but the second part will be always in uppercase","   *     en-US => en_US","   *     en_US => en_US","   *     en-us => en_US","   * * BCP 47 (RFC 4646 & 4647)","   *     en-US => en-US","   *     en_US => en-US","   *     en-us => en-US","   *","   * See also:","   * * http://en.wikipedia.org/wiki/IETF_language_tag","   * * http://www.w3.org/International/core/langtags/","   * * http://tools.ietf.org/html/bcp47","   *","   * @param {string|object} options - options (or standard)","   * @param {string} options.standard - valid values are 'default', 'bcp47', 'java'","   */","  this.uniformLanguageTag = function (options) {","","    if (!options) {","      options = {};","    } else if (angular.isString(options)) {","      options = {","        standard : options","      };","    }","","    uniformLanguageTagResolver = options.standard;","","    return this;","  };","","  /**","   * @ngdoc function","   * @name pascalprecht.translate.$translateProvider#determinePreferredLanguage","   * @methodOf pascalprecht.translate.$translateProvider","   *","   * @description","   * Tells angular-translate to try to determine on its own which language key","   * to set as preferred language. When `fn` is given, angular-translate uses it","   * to determine a language key, otherwise it uses the built-in `getLocale()`","   * method.","   *","   * The `getLocale()` returns a language key in the format `[lang]_[country]` or","   * `[lang]` depending on what the browser provides.","   *","   * Use this method at your own risk, since not all browsers return a valid","   * locale (see {@link pascalprecht.translate.$translateProvider#methods_uniformLanguageTag uniformLanguageTag()}).","   *","   * @param {Function=} fn Function to determine a browser's locale","   */","  this.determinePreferredLanguage = function (fn) {","","    var locale = (fn && angular.isFunction(fn)) ? fn() : getLocale();","","    if (!$availableLanguageKeys.length) {","      $preferredLanguage = locale;","    } else {","      $preferredLanguage = negotiateLocale(locale) || locale;","    }","","    return this;","  };","","  /**","   * @ngdoc function","   * @name pascalprecht.translate.$translateProvider#registerAvailableLanguageKeys","   * @methodOf pascalprecht.translate.$translateProvider","   *","   * @description","   * Registers a set of language keys the app will work with. Use this method in","   * combination with","   * {@link pascalprecht.translate.$translateProvider#determinePreferredLanguage determinePreferredLanguage}.","   * When available languages keys are registered, angular-translate","   * tries to find the best fitting language key depending on the browsers locale,","   * considering your language key convention.","   *","   * @param {object} languageKeys Array of language keys the your app will use","   * @param {object=} aliases Alias map.","   */","  this.registerAvailableLanguageKeys = function (languageKeys, aliases) {","    if (languageKeys) {","      $availableLanguageKeys = languageKeys;","      if (aliases) {","        $languageKeyAliases = aliases;","      }","      return this;","    }","    return $availableLanguageKeys;","  };","","  /**","   * @ngdoc function","   * @name pascalprecht.translate.$translateProvider#useLoaderCache","   * @methodOf pascalprecht.translate.$translateProvider","   *","   * @description","   * Registers a cache for internal $http based loaders.","   * {@link pascalprecht.translate.$translationCache $translationCache}.","   * When false the cache will be disabled (default). When true or undefined","   * the cache will be a default (see $cacheFactory). When an object it will","   * be treat as a cache object itself: the usage is $http({cache: cache})","   *","   * @param {object} cache boolean, string or cache-object","   */","  this.useLoaderCache = function (cache) {","    if (cache === false) {","      // disable cache","      loaderCache = undefined;","    } else if (cache === true) {","      // enable cache using AJS defaults","      loaderCache = true;","    } else if (typeof(cache) === 'undefined') {","      // enable cache using default","      loaderCache = '$translationCache';","    } else if (cache) {","      // enable cache using given one (see $cacheFactory)","      loaderCache = cache;","    }","    return this;","  };","","  /**","   * @ngdoc function","   * @name pascalprecht.translate.$translateProvider#directivePriority","   * @methodOf pascalprecht.translate.$translateProvider","   *","   * @description","   * Sets the default priority of the translate directive. The standard value is `0`.","   * Calling this function without an argument will return the current value.","   *","   * @param {number} priority for the translate-directive","   */","  this.directivePriority = function (priority) {","    if (priority === undefined) {","      // getter","      return directivePriority;","    } else {","      // setter with chaining","      directivePriority = priority;","      return this;","    }","  };","","  /**","   * @ngdoc function","   * @name pascalprecht.translate.$translateProvider#statefulFilter","   * @methodOf pascalprecht.translate.$translateProvider","   *","   * @description","   * Since AngularJS 1.3, filters which are not stateless (depending at the scope)","   * have to explicit define this behavior.","   * Sets whether the translate filter should be stateful or stateless. The standard value is `true`","   * meaning being stateful.","   * Calling this function without an argument will return the current value.","   *","   * @param {boolean} state - defines the state of the filter","   */","  this.statefulFilter = function (state) {","    if (state === undefined) {","      // getter","      return statefulFilter;","    } else {","      // setter with chaining","      statefulFilter = state;","      return this;","    }","  };","","  /**","   * @ngdoc function","   * @name pascalprecht.translate.$translateProvider#postProcess","   * @methodOf pascalprecht.translate.$translateProvider","   *","   * @description","   * The post processor will be intercept right after the translation result. It can modify the result.","   *","   * @param {object} fn Function or service name (string) to be called after the translation value has been set / resolved. The function itself will enrich every value being processed and then continue the normal resolver process","   */","  this.postProcess = function (fn) {","    if (fn) {","      postProcessFn = fn;","    } else {","      postProcessFn = undefined;","    }","    return this;","  };","","  /**","   * @ngdoc function","   * @name pascalprecht.translate.$translateProvider#keepContent","   * @methodOf pascalprecht.translate.$translateProvider","   *","   * @description","   * If keepContent is set to true than translate directive will always use innerHTML","   * as a default translation","   *","   * Example:","   * <pre>","   *  app.config(function ($translateProvider) {","   *    $translateProvider.keepContent(true);","   *  });","   * </pre>","   *","   * @param {boolean} value - valid values are true or false","   */","  this.keepContent = function (value) {","    $keepContent = !(!value);","    return this;","  };","","  /**","   * @ngdoc object","   * @name pascalprecht.translate.$translate","   * @requires $interpolate","   * @requires $log","   * @requires $rootScope","   * @requires $q","   *","   * @description","   * The `$translate` service is the actual core of angular-translate. It expects a translation id","   * and optional interpolate parameters to translate contents.","   *","   * <pre>","   *  $translate('HEADLINE_TEXT').then(function (translation) {","   *    $scope.translatedText = translation;","   *  });","   * </pre>","   *","   * @param {string|array} translationId A token which represents a translation id","   *                                     This can be optionally an array of translation ids which","   *                                     results that the function returns an object where each key","   *                                     is the translation id and the value the translation.","   * @param {object=} interpolateParams An object hash for dynamic values","   * @param {string} interpolationId The id of the interpolation to use","   * @param {string} defaultTranslationText the optional default translation text that is written as","   *                                        as default text in case it is not found in any configured language","   * @param {string} forceLanguage A language to be used instead of the current language","   * @returns {object} promise","   */","  this.$get = ['$log', '$injector', '$rootScope', '$q', function ($log, $injector, $rootScope, $q) {","","    var Storage,","      defaultInterpolator = $injector.get($interpolationFactory || '$translateDefaultInterpolation'),","      pendingLoader = false,","      interpolatorHashMap = {},","      langPromises = {},","      fallbackIndex,","      startFallbackIteration;","","    var $translate = function (translationId, interpolateParams, interpolationId, defaultTranslationText, forceLanguage) {","      if (!$uses && $preferredLanguage) {","        $uses = $preferredLanguage;","      }","      var uses = (forceLanguage && forceLanguage !== $uses) ? // we don't want to re-negotiate $uses","        (negotiateLocale(forceLanguage) || forceLanguage) : $uses;","","      // Check forceLanguage is present","      if (forceLanguage) {","        loadTranslationsIfMissing(forceLanguage);","      }","","      // Duck detection: If the first argument is an array, a bunch of translations was requested.","      // The result is an object.","      if (angular.isArray(translationId)) {","        // Inspired by Q.allSettled by Kris Kowal","        // https://github.com/kriskowal/q/blob/b0fa72980717dc202ffc3cbf03b936e10ebbb9d7/q.js#L1553-1563","        // This transforms all promises regardless resolved or rejected","        var translateAll = function (translationIds) {","          var results = {}; // storing the actual results","          var promises = []; // promises to wait for","          // Wraps the promise a) being always resolved and b) storing the link id->value","          var translate = function (translationId) {","            var deferred = $q.defer();","            var regardless = function (value) {","              results[translationId] = value;","              deferred.resolve([translationId, value]);","            };","            // we don't care whether the promise was resolved or rejected; just store the values","            $translate(translationId, interpolateParams, interpolationId, defaultTranslationText, forceLanguage).then(regardless, regardless);","            return deferred.promise;","          };","          for (var i = 0, c = translationIds.length; i < c; i++) {","            promises.push(translate(translationIds[i]));","          }","          // wait for all (including storing to results)","          return $q.all(promises).then(function () {","            // return the results","            return results;","          });","        };","        return translateAll(translationId);","      }","","      var deferred = $q.defer();","","      // trim off any whitespace","      if (translationId) {","        translationId = trim.apply(translationId);","      }","","      var promiseToWaitFor = (function () {","        var promise = $preferredLanguage ?","          langPromises[$preferredLanguage] :","          langPromises[uses];","","        fallbackIndex = 0;","","        if ($storageFactory && !promise) {","          // looks like there's no pending promise for $preferredLanguage or","          // $uses. Maybe there's one pending for a language that comes from","          // storage.","          var langKey = Storage.get($storageKey);","          promise = langPromises[langKey];","","          if ($fallbackLanguage && $fallbackLanguage.length) {","            var index = indexOf($fallbackLanguage, langKey);","            // maybe the language from storage is also defined as fallback language","            // we increase the fallback language index to not search in that language","            // as fallback, since it's probably the first used language","            // in that case the index starts after the first element","            fallbackIndex = (index === 0) ? 1 : 0;","","            // but we can make sure to ALWAYS fallback to preferred language at least","            if (indexOf($fallbackLanguage, $preferredLanguage) < 0) {","              $fallbackLanguage.push($preferredLanguage);","            }","          }","        }","        return promise;","      }());","","      if (!promiseToWaitFor) {","        // no promise to wait for? okay. Then there's no loader registered","        // nor is a one pending for language that comes from storage.","        // We can just translate.","        determineTranslation(translationId, interpolateParams, interpolationId, defaultTranslationText, uses).then(deferred.resolve, deferred.reject);","      } else {","        var promiseResolved = function () {","          // $uses may have changed while waiting","          if (!forceLanguage) {","            uses = $uses;","          }","          determineTranslation(translationId, interpolateParams, interpolationId, defaultTranslationText, uses).then(deferred.resolve, deferred.reject);","        };","        promiseResolved.displayName = 'promiseResolved';","","        promiseToWaitFor['finally'](promiseResolved)","          .catch(angular.noop); // we don't care about errors here, already handled","      }","      return deferred.promise;","    };","","    /**","     * @name applyNotFoundIndicators","     * @private","     *","     * @description","     * Applies not fount indicators to given translation id, if needed.","     * This function gets only executed, if a translation id doesn't exist,","     * which is why a translation id is expected as argument.","     *","     * @param {string} translationId Translation id.","     * @returns {string} Same as given translation id but applied with not found","     * indicators.","     */","    var applyNotFoundIndicators = function (translationId) {","      // applying notFoundIndicators","      if ($notFoundIndicatorLeft) {","        translationId = [$notFoundIndicatorLeft, translationId].join(' ');","      }","      if ($notFoundIndicatorRight) {","        translationId = [translationId, $notFoundIndicatorRight].join(' ');","      }","      return translationId;","    };","","    /**","     * @name useLanguage","     * @private","     *","     * @description","     * Makes actual use of a language by setting a given language key as used","     * language and informs registered interpolators to also use the given","     * key as locale.","     *","     * @param {string} key Locale key.","     */","    var useLanguage = function (key) {","      $uses = key;","","      // make sure to store new language key before triggering success event","      if ($storageFactory) {","        Storage.put($translate.storageKey(), $uses);","      }","","      $rootScope.$emit('$translateChangeSuccess', {language : key});","","      // inform default interpolator","      defaultInterpolator.setLocale($uses);","","      var eachInterpolator = function (interpolator, id) {","        interpolatorHashMap[id].setLocale($uses);","      };","      eachInterpolator.displayName = 'eachInterpolatorLocaleSetter';","","      // inform all others too!","      angular.forEach(interpolatorHashMap, eachInterpolator);","      $rootScope.$emit('$translateChangeEnd', {language : key});","    };","","    /**","     * @name loadAsync","     * @private","     *","     * @description","     * Kicks off registered async loader using `$injector` and applies existing","     * loader options. When resolved, it updates translation tables accordingly","     * or rejects with given language key.","     *","     * @param {string} key Language key.","     * @return {Promise} A promise.","     */","    var loadAsync = function (key) {","      if (!key) {","        throw 'No language key specified for loading.';","      }","","      var deferred = $q.defer();","","      $rootScope.$emit('$translateLoadingStart', {language : key});","      pendingLoader = true;","","      var cache = loaderCache;","      if (typeof(cache) === 'string') {","        // getting on-demand instance of loader","        cache = $injector.get(cache);","      }","","      var loaderOptions = angular.extend({}, $loaderOptions, {","        key : key,","        $http : angular.extend({}, {","          cache : cache","        }, $loaderOptions.$http)","      });","","      var onLoaderSuccess = function (data) {","        var translationTable = {};","        $rootScope.$emit('$translateLoadingSuccess', {language : key});","","        if (angular.isArray(data)) {","          angular.forEach(data, function (table) {","            angular.extend(translationTable, flatObject(table));","          });","        } else {","          angular.extend(translationTable, flatObject(data));","        }","        pendingLoader = false;","        deferred.resolve({","          key : key,","          table : translationTable","        });","        $rootScope.$emit('$translateLoadingEnd', {language : key});","      };","      onLoaderSuccess.displayName = 'onLoaderSuccess';","","      var onLoaderError = function (key) {","        $rootScope.$emit('$translateLoadingError', {language : key});","        deferred.reject(key);","        $rootScope.$emit('$translateLoadingEnd', {language : key});","      };","      onLoaderError.displayName = 'onLoaderError';","","      $injector.get($loaderFactory)(loaderOptions)","        .then(onLoaderSuccess, onLoaderError);","","      return deferred.promise;","    };","","    if ($storageFactory) {","      Storage = $injector.get($storageFactory);","","      if (!Storage.get || !Storage.put) {","        throw new Error('Couldn\\'t use storage \\'' + $storageFactory + '\\', missing get() or put() method!');","      }","    }","","    // if we have additional interpolations that were added via","    // $translateProvider.addInterpolation(), we have to map'em","    if ($interpolatorFactories.length) {","      var eachInterpolationFactory = function (interpolatorFactory) {","        var interpolator = $injector.get(interpolatorFactory);","        // setting initial locale for each interpolation service","        interpolator.setLocale($preferredLanguage || $uses);","        // make'em recognizable through id","        interpolatorHashMap[interpolator.getInterpolationIdentifier()] = interpolator;","      };","      eachInterpolationFactory.displayName = 'interpolationFactoryAdder';","","      angular.forEach($interpolatorFactories, eachInterpolationFactory);","    }","","    /**","     * @name getTranslationTable","     * @private","     *","     * @description","     * Returns a promise that resolves to the translation table","     * or is rejected if an error occurred.","     *","     * @param langKey","     * @returns {Q.promise}","     */","    var getTranslationTable = function (langKey) {","      var deferred = $q.defer();","      if (Object.prototype.hasOwnProperty.call($translationTable, langKey)) {","        deferred.resolve($translationTable[langKey]);","      } else if (langPromises[langKey]) {","        var onResolve = function (data) {","          translations(data.key, data.table);","          deferred.resolve(data.table);","        };","        onResolve.displayName = 'translationTableResolver';","        langPromises[langKey].then(onResolve, deferred.reject);","      } else {","        deferred.reject();","      }","      return deferred.promise;","    };","","    /**","     * @name getFallbackTranslation","     * @private","     *","     * @description","     * Returns a promise that will resolve to the translation","     * or be rejected if no translation was found for the language.","     * This function is currently only used for fallback language translation.","     *","     * @param langKey The language to translate to.","     * @param translationId","     * @param interpolateParams","     * @param Interpolator","     * @param sanitizeStrategy","     * @returns {Q.promise}","     */","    var getFallbackTranslation = function (langKey, translationId, interpolateParams, Interpolator, sanitizeStrategy) {","      var deferred = $q.defer();","","      var onResolve = function (translationTable) {","        if (Object.prototype.hasOwnProperty.call(translationTable, translationId) && translationTable[translationId] !== null) {","          Interpolator.setLocale(langKey);","          var translation = translationTable[translationId];","          if (translation.substr(0, 2) === '@:') {","            getFallbackTranslation(langKey, translation.substr(2), interpolateParams, Interpolator, sanitizeStrategy)","              .then(deferred.resolve, deferred.reject);","          } else {","            var interpolatedValue = Interpolator.interpolate(translationTable[translationId], interpolateParams, 'service', sanitizeStrategy, translationId);","            interpolatedValue = applyPostProcessing(translationId, translationTable[translationId], interpolatedValue, interpolateParams, langKey);","","            deferred.resolve(interpolatedValue);","","          }","          Interpolator.setLocale($uses);","        } else {","          deferred.reject();","        }","      };","      onResolve.displayName = 'fallbackTranslationResolver';","","      getTranslationTable(langKey).then(onResolve, deferred.reject);","","      return deferred.promise;","    };","","    /**","     * @name getFallbackTranslationInstant","     * @private","     *","     * @description","     * Returns a translation","     * This function is currently only used for fallback language translation.","     *","     * @param langKey The language to translate to.","     * @param translationId","     * @param interpolateParams","     * @param Interpolator","     * @param sanitizeStrategy sanitize strategy override","     *","     * @returns {string} translation","     */","    var getFallbackTranslationInstant = function (langKey, translationId, interpolateParams, Interpolator, sanitizeStrategy) {","      var result, translationTable = $translationTable[langKey];","","      if (translationTable && Object.prototype.hasOwnProperty.call(translationTable, translationId) && translationTable[translationId] !== null) {","        Interpolator.setLocale(langKey);","        result = Interpolator.interpolate(translationTable[translationId], interpolateParams, 'filter', sanitizeStrategy, translationId);","        result = applyPostProcessing(translationId, translationTable[translationId], result, interpolateParams, langKey, sanitizeStrategy);","        // workaround for TrustedValueHolderType","        if (!angular.isString(result) && angular.isFunction(result.$$unwrapTrustedValue)) {","          var result2 = result.$$unwrapTrustedValue();","          if (result2.substr(0, 2) === '@:') {","            return getFallbackTranslationInstant(langKey, result2.substr(2), interpolateParams, Interpolator, sanitizeStrategy);","          }","        } else if (result.substr(0, 2) === '@:') {","          return getFallbackTranslationInstant(langKey, result.substr(2), interpolateParams, Interpolator, sanitizeStrategy);","        }","        Interpolator.setLocale($uses);","      }","","      return result;","    };","","","    /**","     * @name translateByHandler","     * @private","     *","     * Translate by missing translation handler.","     *","     * @param translationId","     * @param interpolateParams","     * @param defaultTranslationText","     * @param sanitizeStrategy sanitize strategy override","     *","     * @returns translation created by $missingTranslationHandler or translationId is $missingTranslationHandler is","     * absent","     */","    var translateByHandler = function (translationId, interpolateParams, defaultTranslationText, sanitizeStrategy) {","      // If we have a handler factory - we might also call it here to determine if it provides","      // a default text for a translationid that can't be found anywhere in our tables","      if ($missingTranslationHandlerFactory) {","        return $injector.get($missingTranslationHandlerFactory)(translationId, $uses, interpolateParams, defaultTranslationText, sanitizeStrategy);","      } else {","        return translationId;","      }","    };","","    /**","     * @name resolveForFallbackLanguage","     * @private","     *","     * Recursive helper function for fallbackTranslation that will sequentially look","     * for a translation in the fallbackLanguages starting with fallbackLanguageIndex.","     *","     * @param fallbackLanguageIndex","     * @param translationId","     * @param interpolateParams","     * @param Interpolator","     * @param defaultTranslationText","     * @param sanitizeStrategy","     * @returns {Q.promise} Promise that will resolve to the translation.","     */","    var resolveForFallbackLanguage = function (fallbackLanguageIndex, translationId, interpolateParams, Interpolator, defaultTranslationText, sanitizeStrategy) {","      var deferred = $q.defer();","","      if (fallbackLanguageIndex < $fallbackLanguage.length) {","        var langKey = $fallbackLanguage[fallbackLanguageIndex];","        getFallbackTranslation(langKey, translationId, interpolateParams, Interpolator, sanitizeStrategy).then(","          function (data) {","            deferred.resolve(data);","          },","          function () {","            // Look in the next fallback language for a translation.","            // It delays the resolving by passing another promise to resolve.","            return resolveForFallbackLanguage(fallbackLanguageIndex + 1, translationId, interpolateParams, Interpolator, defaultTranslationText, sanitizeStrategy).then(deferred.resolve, deferred.reject);","          }","        );","      } else {","        // No translation found in any fallback language","        // if a default translation text is set in the directive, then return this as a result","        if (defaultTranslationText) {","          deferred.resolve(defaultTranslationText);","        } else {","          var missingTranslationHandlerTranslation = translateByHandler(translationId, interpolateParams, defaultTranslationText);","","          // if no default translation is set and an error handler is defined, send it to the handler","          // and then return the result if it isn't undefined","          if ($missingTranslationHandlerFactory && missingTranslationHandlerTranslation) {","            deferred.resolve(missingTranslationHandlerTranslation);","          } else {","            deferred.reject(applyNotFoundIndicators(translationId));","          }","        }","      }","      return deferred.promise;","    };","","    /**","     * @name resolveForFallbackLanguageInstant","     * @private","     *","     * Recursive helper function for fallbackTranslation that will sequentially look","     * for a translation in the fallbackLanguages starting with fallbackLanguageIndex.","     *","     * @param fallbackLanguageIndex","     * @param translationId","     * @param interpolateParams","     * @param Interpolator","     * @param sanitizeStrategy","     * @returns {string} translation","     */","    var resolveForFallbackLanguageInstant = function (fallbackLanguageIndex, translationId, interpolateParams, Interpolator, sanitizeStrategy) {","      var result;","","      if (fallbackLanguageIndex < $fallbackLanguage.length) {","        var langKey = $fallbackLanguage[fallbackLanguageIndex];","        result = getFallbackTranslationInstant(langKey, translationId, interpolateParams, Interpolator, sanitizeStrategy);","        if (!result && result !== '') {","          result = resolveForFallbackLanguageInstant(fallbackLanguageIndex + 1, translationId, interpolateParams, Interpolator);","        }","      }","      return result;","    };","","    /**","     * Translates with the usage of the fallback languages.","     *","     * @param translationId","     * @param interpolateParams","     * @param Interpolator","     * @param defaultTranslationText","     * @param sanitizeStrategy","     * @returns {Q.promise} Promise, that resolves to the translation.","     */","    var fallbackTranslation = function (translationId, interpolateParams, Interpolator, defaultTranslationText, sanitizeStrategy) {","      // Start with the fallbackLanguage with index 0","      return resolveForFallbackLanguage((startFallbackIteration > 0 ? startFallbackIteration : fallbackIndex), translationId, interpolateParams, Interpolator, defaultTranslationText, sanitizeStrategy);","    };","","    /**","     * Translates with the usage of the fallback languages.","     *","     * @param translationId","     * @param interpolateParams","     * @param Interpolator","     * @param sanitizeStrategy","     * @returns {String} translation","     */","    var fallbackTranslationInstant = function (translationId, interpolateParams, Interpolator, sanitizeStrategy) {","      // Start with the fallbackLanguage with index 0","      return resolveForFallbackLanguageInstant((startFallbackIteration > 0 ? startFallbackIteration : fallbackIndex), translationId, interpolateParams, Interpolator, sanitizeStrategy);","    };","","    var determineTranslation = function (translationId, interpolateParams, interpolationId, defaultTranslationText, uses, sanitizeStrategy) {","","      var deferred = $q.defer();","","      var table = uses ? $translationTable[uses] : $translationTable,","        Interpolator = (interpolationId) ? interpolatorHashMap[interpolationId] : defaultInterpolator;","","      // if the translation id exists, we can just interpolate it","      if (table && Object.prototype.hasOwnProperty.call(table, translationId) && table[translationId] !== null) {","        var translation = table[translationId];","","        // If using link, rerun $translate with linked translationId and return it","        if (translation.substr(0, 2) === '@:') {","","          $translate(translation.substr(2), interpolateParams, interpolationId, defaultTranslationText, uses)","            .then(deferred.resolve, deferred.reject);","        } else {","          //","          var resolvedTranslation = Interpolator.interpolate(translation, interpolateParams, 'service', sanitizeStrategy, translationId);","          resolvedTranslation = applyPostProcessing(translationId, translation, resolvedTranslation, interpolateParams, uses);","          deferred.resolve(resolvedTranslation);","        }","      } else {","        var missingTranslationHandlerTranslation;","        // for logging purposes only (as in $translateMissingTranslationHandlerLog), value is not returned to promise","        if ($missingTranslationHandlerFactory && !pendingLoader) {","          missingTranslationHandlerTranslation = translateByHandler(translationId, interpolateParams, defaultTranslationText);","        }","","        // since we couldn't translate the inital requested translation id,","        // we try it now with one or more fallback languages, if fallback language(s) is","        // configured.","        if (uses && $fallbackLanguage && $fallbackLanguage.length) {","          fallbackTranslation(translationId, interpolateParams, Interpolator, defaultTranslationText, sanitizeStrategy)","            .then(function (translation) {","              deferred.resolve(translation);","            }, function (_translationId) {","              deferred.reject(applyNotFoundIndicators(_translationId));","            });","        } else if ($missingTranslationHandlerFactory && !pendingLoader && missingTranslationHandlerTranslation) {","          // looks like the requested translation id doesn't exists.","          // Now, if there is a registered handler for missing translations and no","          // asyncLoader is pending, we execute the handler","          if (defaultTranslationText) {","            deferred.resolve(defaultTranslationText);","          } else {","            deferred.resolve(missingTranslationHandlerTranslation);","          }","        } else {","          if (defaultTranslationText) {","            deferred.resolve(defaultTranslationText);","          } else {","            deferred.reject(applyNotFoundIndicators(translationId));","          }","        }","      }","      return deferred.promise;","    };","","    var determineTranslationInstant = function (translationId, interpolateParams, interpolationId, uses, sanitizeStrategy) {","","      var result, table = uses ? $translationTable[uses] : $translationTable,","        Interpolator = defaultInterpolator;","","      // if the interpolation id exists use custom interpolator","      if (interpolatorHashMap && Object.prototype.hasOwnProperty.call(interpolatorHashMap, interpolationId)) {","        Interpolator = interpolatorHashMap[interpolationId];","      }","","      // if the translation id exists, we can just interpolate it","      if (table && Object.prototype.hasOwnProperty.call(table, translationId) && table[translationId] !== null) {","        var translation = table[translationId];","","        // If using link, rerun $translate with linked translationId and return it","        if (translation.substr(0, 2) === '@:') {","          result = determineTranslationInstant(translation.substr(2), interpolateParams, interpolationId, uses, sanitizeStrategy);","        } else {","          result = Interpolator.interpolate(translation, interpolateParams, 'filter', sanitizeStrategy, translationId);","          result = applyPostProcessing(translationId, translation, result, interpolateParams, uses, sanitizeStrategy);","        }","      } else {","        var missingTranslationHandlerTranslation;","        // for logging purposes only (as in $translateMissingTranslationHandlerLog), value is not returned to promise","        if ($missingTranslationHandlerFactory && !pendingLoader) {","          missingTranslationHandlerTranslation = translateByHandler(translationId, interpolateParams, sanitizeStrategy);","        }","","        // since we couldn't translate the inital requested translation id,","        // we try it now with one or more fallback languages, if fallback language(s) is","        // configured.","        if (uses && $fallbackLanguage && $fallbackLanguage.length) {","          fallbackIndex = 0;","          result = fallbackTranslationInstant(translationId, interpolateParams, Interpolator, sanitizeStrategy);","        } else if ($missingTranslationHandlerFactory && !pendingLoader && missingTranslationHandlerTranslation) {","          // looks like the requested translation id doesn't exists.","          // Now, if there is a registered handler for missing translations and no","          // asyncLoader is pending, we execute the handler","          result = missingTranslationHandlerTranslation;","        } else {","          result = applyNotFoundIndicators(translationId);","        }","      }","","      return result;","    };","","    var clearNextLangAndPromise = function (key) {","      if ($nextLang === key) {","        $nextLang = undefined;","      }","      langPromises[key] = undefined;","    };","","    var applyPostProcessing = function (translationId, translation, resolvedTranslation, interpolateParams, uses, sanitizeStrategy) {","      var fn = postProcessFn;","","      if (fn) {","","        if (typeof(fn) === 'string') {","          // getting on-demand instance","          fn = $injector.get(fn);","        }","        if (fn) {","          return fn(translationId, translation, resolvedTranslation, interpolateParams, uses, sanitizeStrategy);","        }","      }","","      return resolvedTranslation;","    };","","    var loadTranslationsIfMissing = function (key) {","      if (!$translationTable[key] && $loaderFactory && !langPromises[key]) {","        langPromises[key] = loadAsync(key).then(function (translation) {","          translations(translation.key, translation.table);","          return translation;","        });","      }","    };","","    /**","     * @ngdoc function","     * @name pascalprecht.translate.$translate#preferredLanguage","     * @methodOf pascalprecht.translate.$translate","     *","     * @description","     * Returns the language key for the preferred language.","     *","     * @param {string} langKey language String or Array to be used as preferredLanguage (changing at runtime)","     *","     * @return {string} preferred language key","     */","    $translate.preferredLanguage = function (langKey) {","      if (langKey) {","        setupPreferredLanguage(langKey);","      }","      return $preferredLanguage;","    };","","    /**","     * @ngdoc function","     * @name pascalprecht.translate.$translate#cloakClassName","     * @methodOf pascalprecht.translate.$translate","     *","     * @description","     * Returns the configured class name for `translate-cloak` directive.","     *","     * @return {string} cloakClassName","     */","    $translate.cloakClassName = function () {","      return $cloakClassName;","    };","","    /**","     * @ngdoc function","     * @name pascalprecht.translate.$translate#nestedObjectDelimeter","     * @methodOf pascalprecht.translate.$translate","     *","     * @description","     * Returns the configured delimiter for nested namespaces.","     *","     * @return {string} nestedObjectDelimeter","     */","    $translate.nestedObjectDelimeter = function () {","      return $nestedObjectDelimeter;","    };","","    /**","     * @ngdoc function","     * @name pascalprecht.translate.$translate#fallbackLanguage","     * @methodOf pascalprecht.translate.$translate","     *","     * @description","     * Returns the language key for the fallback languages or sets a new fallback stack.","     *","     * @param {string=} langKey language String or Array of fallback languages to be used (to change stack at runtime)","     *","     * @return {string||array} fallback language key","     */","    $translate.fallbackLanguage = function (langKey) {","      if (langKey !== undefined && langKey !== null) {","        fallbackStack(langKey);","","        // as we might have an async loader initiated and a new translation language might have been defined","        // we need to add the promise to the stack also. So - iterate.","        if ($loaderFactory) {","          if ($fallbackLanguage && $fallbackLanguage.length) {","            for (var i = 0, len = $fallbackLanguage.length; i < len; i++) {","              if (!langPromises[$fallbackLanguage[i]]) {","                langPromises[$fallbackLanguage[i]] = loadAsync($fallbackLanguage[i]);","              }","            }","          }","        }","        $translate.use($translate.use());","      }","      if ($fallbackWasString) {","        return $fallbackLanguage[0];","      } else {","        return $fallbackLanguage;","      }","","    };","","    /**","     * @ngdoc function","     * @name pascalprecht.translate.$translate#useFallbackLanguage","     * @methodOf pascalprecht.translate.$translate","     *","     * @description","     * Sets the first key of the fallback language stack to be used for translation.","     * Therefore all languages in the fallback array BEFORE this key will be skipped!","     *","     * @param {string=} langKey Contains the langKey the iteration shall start with. Set to false if you want to","     * get back to the whole stack","     */","    $translate.useFallbackLanguage = function (langKey) {","      if (langKey !== undefined && langKey !== null) {","        if (!langKey) {","          startFallbackIteration = 0;","        } else {","          var langKeyPosition = indexOf($fallbackLanguage, langKey);","          if (langKeyPosition > -1) {","            startFallbackIteration = langKeyPosition;","          }","        }","","      }","","    };","","    /**","     * @ngdoc function","     * @name pascalprecht.translate.$translate#proposedLanguage","     * @methodOf pascalprecht.translate.$translate","     *","     * @description","     * Returns the language key of language that is currently loaded asynchronously.","     *","     * @return {string} language key","     */","    $translate.proposedLanguage = function () {","      return $nextLang;","    };","","    /**","     * @ngdoc function","     * @name pascalprecht.translate.$translate#storage","     * @methodOf pascalprecht.translate.$translate","     *","     * @description","     * Returns registered storage.","     *","     * @return {object} Storage","     */","    $translate.storage = function () {","      return Storage;","    };","","    /**","     * @ngdoc function","     * @name pascalprecht.translate.$translate#negotiateLocale","     * @methodOf pascalprecht.translate.$translate","     *","     * @description","     * Returns a language key based on available languages and language aliases. If a","     * language key cannot be resolved, returns undefined.","     *","     * If no or a falsy key is given, returns undefined.","     *","     * @param {string} [key] Language key","     * @return {string|undefined} Language key or undefined if no language key is found.","     */","    $translate.negotiateLocale = negotiateLocale;","","    /**","     * @ngdoc function","     * @name pascalprecht.translate.$translate#use","     * @methodOf pascalprecht.translate.$translate","     *","     * @description","     * Tells angular-translate which language to use by given language key. This method is","     * used to change language at runtime. It also takes care of storing the language","     * key in a configured store to let your app remember the choosed language.","     *","     * When trying to 'use' a language which isn't available it tries to load it","     * asynchronously with registered loaders.","     *","     * Returns promise object with loaded language file data or string of the currently used language.","     *","     * If no or a falsy key is given it returns the currently used language key.","     * The returned string will be ```undefined``` if setting up $translate hasn't finished.","     * @example","     * $translate.use(\"en_US\").then(function(data){","       *   $scope.text = $translate(\"HELLO\");","       * });","     *","     * @param {string} [key] Language key","     * @return {object|string} Promise with loaded language data or the language key if a falsy param was given.","     */","    $translate.use = function (key) {","      if (!key) {","        return $uses;","      }","","      var deferred = $q.defer();","      deferred.promise.then(null, angular.noop); // AJS \"Possibly unhandled rejection\"","","      $rootScope.$emit('$translateChangeStart', {language : key});","","      // Try to get the aliased language key","      var aliasedKey = negotiateLocale(key);","      // Ensure only registered language keys will be loaded","      if ($availableLanguageKeys.length > 0 && !aliasedKey) {","        return $q.reject(key);","      }","","      if (aliasedKey) {","        key = aliasedKey;","      }","","      // if there isn't a translation table for the language we've requested,","      // we load it asynchronously","      $nextLang = key;","      if (($forceAsyncReloadEnabled || !$translationTable[key]) && $loaderFactory && !langPromises[key]) {","        langPromises[key] = loadAsync(key).then(function (translation) {","          translations(translation.key, translation.table);","          deferred.resolve(translation.key);","          if ($nextLang === key) {","            useLanguage(translation.key);","          }","          return translation;","        }, function (key) {","          $rootScope.$emit('$translateChangeError', {language : key});","          deferred.reject(key);","          $rootScope.$emit('$translateChangeEnd', {language : key});","          return $q.reject(key);","        });","        langPromises[key]['finally'](function () {","          clearNextLangAndPromise(key);","        }).catch(angular.noop); // we don't care about errors (clearing)","      } else if (langPromises[key]) {","        // we are already loading this asynchronously","        // resolve our new deferred when the old langPromise is resolved","        langPromises[key].then(function (translation) {","          if ($nextLang === translation.key) {","            useLanguage(translation.key);","          }","          deferred.resolve(translation.key);","          return translation;","        }, function (key) {","          // find first available fallback language if that request has failed","          if (!$uses && $fallbackLanguage && $fallbackLanguage.length > 0 && $fallbackLanguage[0] !== key) {","            return $translate.use($fallbackLanguage[0]).then(deferred.resolve, deferred.reject);","          } else {","            return deferred.reject(key);","          }","        });","      } else {","        deferred.resolve(key);","        useLanguage(key);","      }","","      return deferred.promise;","    };","","    /**","     * @ngdoc function","     * @name pascalprecht.translate.$translate#resolveClientLocale","     * @methodOf pascalprecht.translate.$translate","     *","     * @description","     * This returns the current browser/client's language key. The result is processed with the configured uniform tag resolver.","     *","     * @returns {string} the current client/browser language key","     */","    $translate.resolveClientLocale = function () {","      return getLocale();","    };","","    /**","     * @ngdoc function","     * @name pascalprecht.translate.$translate#storageKey","     * @methodOf pascalprecht.translate.$translate","     *","     * @description","     * Returns the key for the storage.","     *","     * @return {string} storage key","     */","    $translate.storageKey = function () {","      return storageKey();","    };","","    /**","     * @ngdoc function","     * @name pascalprecht.translate.$translate#isPostCompilingEnabled","     * @methodOf pascalprecht.translate.$translate","     *","     * @description","     * Returns whether post compiling is enabled or not","     *","     * @return {bool} storage key","     */","    $translate.isPostCompilingEnabled = function () {","      return $postCompilingEnabled;","    };","","    /**","     * @ngdoc function","     * @name pascalprecht.translate.$translate#isForceAsyncReloadEnabled","     * @methodOf pascalprecht.translate.$translate","     *","     * @description","     * Returns whether force async reload is enabled or not","     *","     * @return {boolean} forceAsyncReload value","     */","    $translate.isForceAsyncReloadEnabled = function () {","      return $forceAsyncReloadEnabled;","    };","","    /**","     * @ngdoc function","     * @name pascalprecht.translate.$translate#isKeepContent","     * @methodOf pascalprecht.translate.$translate","     *","     * @description","     * Returns whether keepContent or not","     *","     * @return {boolean} keepContent value","     */","    $translate.isKeepContent = function () {","      return $keepContent;","    };","","    /**","     * @ngdoc function","     * @name pascalprecht.translate.$translate#refresh","     * @methodOf pascalprecht.translate.$translate","     *","     * @description","     * Refreshes a translation table pointed by the given langKey. If langKey is not specified,","     * the module will drop all existent translation tables and load new version of those which","     * are currently in use.","     *","     * Refresh means that the module will drop target translation table and try to load it again.","     *","     * In case there are no loaders registered the refresh() method will throw an Error.","     *","     * If the module is able to refresh translation tables refresh() method will broadcast","     * $translateRefreshStart and $translateRefreshEnd events.","     *","     * @example","     * // this will drop all currently existent translation tables and reload those which are","     * // currently in use","     * $translate.refresh();","     * // this will refresh a translation table for the en_US language","     * $translate.refresh('en_US');","     *","     * @param {string} langKey A language key of the table, which has to be refreshed","     *","     * @return {promise} Promise, which will be resolved in case a translation tables refreshing","     * process is finished successfully, and reject if not.","     */","    $translate.refresh = function (langKey) {","      if (!$loaderFactory) {","        throw new Error('Couldn\\'t refresh translation table, no loader registered!');","      }","","      $rootScope.$emit('$translateRefreshStart', {language : langKey});","","      var deferred = $q.defer(), updatedLanguages = {};","","      //private helper","      function loadNewData(languageKey) {","        var promise = loadAsync(languageKey);","        //update the load promise cache for this language","        langPromises[languageKey] = promise;","        //register a data handler for the promise","        promise.then(function (data) {","            //clear the cache for this language","            $translationTable[languageKey] = {};","            //add the new data for this language","            translations(languageKey, data.table);","            //track that we updated this language","            updatedLanguages[languageKey] = true;","          },","          //handle rejection to appease the $q validation","          angular.noop);","        return promise;","      }","","      //set up post-processing","      deferred.promise.then(","        function () {","          for (var key in $translationTable) {","            if ($translationTable.hasOwnProperty(key)) {","              //delete cache entries that were not updated","              if (!(key in updatedLanguages)) {","                delete $translationTable[key];","              }","            }","          }","          if ($uses) {","            useLanguage($uses);","          }","        },","        //handle rejection to appease the $q validation","        angular.noop","      ).finally(","        function () {","          $rootScope.$emit('$translateRefreshEnd', {language : langKey});","        }","      );","","      if (!langKey) {","        // if there's no language key specified we refresh ALL THE THINGS!","        var languagesToReload = $fallbackLanguage && $fallbackLanguage.slice() || [];","        if ($uses && languagesToReload.indexOf($uses) === -1) {","          languagesToReload.push($uses);","        }","        $q.all(languagesToReload.map(loadNewData)).then(deferred.resolve, deferred.reject);","","      } else if ($translationTable[langKey]) {","        //just refresh the specified language cache","        loadNewData(langKey).then(deferred.resolve, deferred.reject);","","      } else {","        deferred.reject();","      }","","      return deferred.promise;","    };","","    /**","     * @ngdoc function","     * @name pascalprecht.translate.$translate#instant","     * @methodOf pascalprecht.translate.$translate","     *","     * @description","     * Returns a translation instantly from the internal state of loaded translation. All rules","     * regarding the current language, the preferred language of even fallback languages will be","     * used except any promise handling. If a language was not found, an asynchronous loading","     * will be invoked in the background.","     *","     * @param {string|array} translationId A token which represents a translation id","     *                                     This can be optionally an array of translation ids which","     *                                     results that the function's promise returns an object where","     *                                     each key is the translation id and the value the translation.","     * @param {object} interpolateParams Params","     * @param {string} interpolationId The id of the interpolation to use","     * @param {string} forceLanguage A language to be used instead of the current language","     * @param {string} sanitizeStrategy force sanitize strategy for this call instead of using the configured one","     *","     * @return {string|object} translation","     */","    $translate.instant = function (translationId, interpolateParams, interpolationId, forceLanguage, sanitizeStrategy) {","","      // we don't want to re-negotiate $uses","      var uses = (forceLanguage && forceLanguage !== $uses) ? // we don't want to re-negotiate $uses","        (negotiateLocale(forceLanguage) || forceLanguage) : $uses;","","      // Detect undefined and null values to shorten the execution and prevent exceptions","      if (translationId === null || angular.isUndefined(translationId)) {","        return translationId;","      }","","      // Check forceLanguage is present","      if (forceLanguage) {","        loadTranslationsIfMissing(forceLanguage);","      }","","      // Duck detection: If the first argument is an array, a bunch of translations was requested.","      // The result is an object.","      if (angular.isArray(translationId)) {","        var results = {};","        for (var i = 0, c = translationId.length; i < c; i++) {","          results[translationId[i]] = $translate.instant(translationId[i], interpolateParams, interpolationId, forceLanguage, sanitizeStrategy);","        }","        return results;","      }","","      // We discarded unacceptable values. So we just need to verify if translationId is empty String","      if (angular.isString(translationId) && translationId.length < 1) {","        return translationId;","      }","","      // trim off any whitespace","      if (translationId) {","        translationId = trim.apply(translationId);","      }","","      var result, possibleLangKeys = [];","      if ($preferredLanguage) {","        possibleLangKeys.push($preferredLanguage);","      }","      if (uses) {","        possibleLangKeys.push(uses);","      }","      if ($fallbackLanguage && $fallbackLanguage.length) {","        possibleLangKeys = possibleLangKeys.concat($fallbackLanguage);","      }","      for (var j = 0, d = possibleLangKeys.length; j < d; j++) {","        var possibleLangKey = possibleLangKeys[j];","        if ($translationTable[possibleLangKey]) {","          if (typeof $translationTable[possibleLangKey][translationId] !== 'undefined') {","            result = determineTranslationInstant(translationId, interpolateParams, interpolationId, uses, sanitizeStrategy);","          }","        }","        if (typeof result !== 'undefined') {","          break;","        }","      }","","      if (!result && result !== '') {","        if ($notFoundIndicatorLeft || $notFoundIndicatorRight) {","          result = applyNotFoundIndicators(translationId);","        } else {","          // Return translation of default interpolator if not found anything.","          result = defaultInterpolator.interpolate(translationId, interpolateParams, 'filter', sanitizeStrategy);","","          // looks like the requested translation id doesn't exists.","          // Now, if there is a registered handler for missing translations and no","          // asyncLoader is pending, we execute the handler","          var missingTranslationHandlerTranslation;","          if ($missingTranslationHandlerFactory && !pendingLoader) {","            missingTranslationHandlerTranslation = translateByHandler(translationId, interpolateParams, sanitizeStrategy);","          }","","          if ($missingTranslationHandlerFactory && !pendingLoader && missingTranslationHandlerTranslation) {","            result = missingTranslationHandlerTranslation;","          }","        }","      }","","      return result;","    };","","    /**","     * @ngdoc function","     * @name pascalprecht.translate.$translate#versionInfo","     * @methodOf pascalprecht.translate.$translate","     *","     * @description","     * Returns the current version information for the angular-translate library","     *","     * @return {string} angular-translate version","     */","    $translate.versionInfo = function () {","      return version;","    };","","    /**","     * @ngdoc function","     * @name pascalprecht.translate.$translate#loaderCache","     * @methodOf pascalprecht.translate.$translate","     *","     * @description","     * Returns the defined loaderCache.","     *","     * @return {boolean|string|object} current value of loaderCache","     */","    $translate.loaderCache = function () {","      return loaderCache;","    };","","    // internal purpose only","    $translate.directivePriority = function () {","      return directivePriority;","    };","","    // internal purpose only","    $translate.statefulFilter = function () {","      return statefulFilter;","    };","","    /**","     * @ngdoc function","     * @name pascalprecht.translate.$translate#isReady","     * @methodOf pascalprecht.translate.$translate","     *","     * @description","     * Returns whether the service is \"ready\" to translate (i.e. loading 1st language).","     *","     * See also {@link pascalprecht.translate.$translate#methods_onReady onReady()}.","     *","     * @return {boolean} current value of ready","     */","    $translate.isReady = function () {","      return $isReady;","    };","","    var $onReadyDeferred = $q.defer();","    $onReadyDeferred.promise.then(function () {","      $isReady = true;","    });","","    /**","     * @ngdoc function","     * @name pascalprecht.translate.$translate#onReady","     * @methodOf pascalprecht.translate.$translate","     *","     * @description","     * Calls the function provided or resolved the returned promise after the service is \"ready\" to translate (i.e. loading 1st language).","     *","     * See also {@link pascalprecht.translate.$translate#methods_isReady isReady()}.","     *","     * @param {Function=} fn Function to invoke when service is ready","     * @return {object} Promise resolved when service is ready","     */","    $translate.onReady = function (fn) {","      var deferred = $q.defer();","      if (angular.isFunction(fn)) {","        deferred.promise.then(fn);","      }","      if ($isReady) {","        deferred.resolve();","      } else {","        $onReadyDeferred.promise.then(deferred.resolve);","      }","      return deferred.promise;","    };","","    /**","     * @ngdoc function","     * @name pascalprecht.translate.$translate#getAvailableLanguageKeys","     * @methodOf pascalprecht.translate.$translate","     *","     * @description","     * This function simply returns the registered language keys being defined before in the config phase","     * With this, an application can use the array to provide a language selection dropdown or similar","     * without any additional effort","     *","     * @returns {object} returns the list of possibly registered language keys and mapping or null if not defined","     */","    $translate.getAvailableLanguageKeys = function () {","      if ($availableLanguageKeys.length > 0) {","        return $availableLanguageKeys;","      }","      return null;","    };","","    /**","     * @ngdoc function","     * @name pascalprecht.translate.$translate#getTranslationTable","     * @methodOf pascalprecht.translate.$translate","     *","     * @description","     * Returns translation table by the given language key.","     *","     * Unless a language is provided it returns a translation table of the current one.","     * Note: If translation dictionary is currently downloading or in progress","     * it will return null.","     *","     * @param {string} langKey A token which represents a translation id","     *","     * @return {object} a copy of angular-translate $translationTable","     */","    $translate.getTranslationTable = function (langKey) {","      langKey = langKey || $translate.use();","      if (langKey && $translationTable[langKey]) {","        return angular.copy($translationTable[langKey]);","      }","      return null;","    };","","    // Whenever $translateReady is being fired, this will ensure the state of $isReady","    var globalOnReadyListener = $rootScope.$on('$translateReady', function () {","      $onReadyDeferred.resolve();","      globalOnReadyListener(); // one time only","      globalOnReadyListener = null;","    });","    var globalOnChangeListener = $rootScope.$on('$translateChangeEnd', function () {","      $onReadyDeferred.resolve();","      globalOnChangeListener(); // one time only","      globalOnChangeListener = null;","    });","","    if ($loaderFactory) {","","      // If at least one async loader is defined and there are no","      // (default) translations available we should try to load them.","      if (angular.equals($translationTable, {})) {","        if ($translate.use()) {","          $translate.use($translate.use());","        }","      }","","      // Also, if there are any fallback language registered, we start","      // loading them asynchronously as soon as we can.","      if ($fallbackLanguage && $fallbackLanguage.length) {","        var processAsyncResult = function (translation) {","          translations(translation.key, translation.table);","          $rootScope.$emit('$translateChangeEnd', {language : translation.key});","          return translation;","        };","        for (var i = 0, len = $fallbackLanguage.length; i < len; i++) {","          var fallbackLanguageId = $fallbackLanguage[i];","          if ($forceAsyncReloadEnabled || !$translationTable[fallbackLanguageId]) {","            langPromises[fallbackLanguageId] = loadAsync(fallbackLanguageId).then(processAsyncResult);","          }","        }","      }","    } else {","      $rootScope.$emit('$translateReady', {language : $translate.use()});","    }","","    return $translate;","  }];","}","","$translate.displayName = 'displayName';","","/**"," * @ngdoc object"," * @name pascalprecht.translate.$translateDefaultInterpolation"," * @requires $interpolate"," *"," * @description"," * Uses angular's `$interpolate` services to interpolate strings against some values."," *"," * Be aware to configure a proper sanitization strategy."," *"," * See also:"," * * {@link pascalprecht.translate.$translateSanitization}"," *"," * @return {object} $translateDefaultInterpolation Interpolator service"," */","angular.module('pascalprecht.translate').factory('$translateDefaultInterpolation', $translateDefaultInterpolation);","","function $translateDefaultInterpolation ($interpolate, $translateSanitization) {","","  'use strict';","","  var $translateInterpolator = {},","      $locale,","      $identifier = 'default';","","  /**","   * @ngdoc function","   * @name pascalprecht.translate.$translateDefaultInterpolation#setLocale","   * @methodOf pascalprecht.translate.$translateDefaultInterpolation","   *","   * @description","   * Sets current locale (this is currently not use in this interpolation).","   *","   * @param {string} locale Language key or locale.","   */","  $translateInterpolator.setLocale = function (locale) {","    $locale = locale;","  };","","  /**","   * @ngdoc function","   * @name pascalprecht.translate.$translateDefaultInterpolation#getInterpolationIdentifier","   * @methodOf pascalprecht.translate.$translateDefaultInterpolation","   *","   * @description","   * Returns an identifier for this interpolation service.","   *","   * @returns {string} $identifier","   */","  $translateInterpolator.getInterpolationIdentifier = function () {","    return $identifier;","  };","","  /**","   * @deprecated will be removed in 3.0","   * @see {@link pascalprecht.translate.$translateSanitization}","   */","  $translateInterpolator.useSanitizeValueStrategy = function (value) {","    $translateSanitization.useStrategy(value);","    return this;","  };","","  /**","   * @ngdoc function","   * @name pascalprecht.translate.$translateDefaultInterpolation#interpolate","   * @methodOf pascalprecht.translate.$translateDefaultInterpolation","   *","   * @description","   * Interpolates given value agains given interpolate params using angulars","   * `$interpolate` service.","   *","   * Since AngularJS 1.5, `value` must not be a string but can be anything input.","   *","   * @param {string} value translation","   * @param {object} interpolationParams interpolation params","   * @param {string} context current context (filter, directive, service)","   * @param {string} sanitizeStrategy sanitize strategy","   * @param {string} translationId current translationId","   *","   * @returns {string} interpolated string","   */","  $translateInterpolator.interpolate = function (value, interpolationParams, context, sanitizeStrategy, translationId) { // jshint ignore:line","    interpolationParams = interpolationParams || {};","    interpolationParams = $translateSanitization.sanitize(interpolationParams, 'params', sanitizeStrategy, context);","","    var interpolatedText;","    if (angular.isNumber(value)) {","      // numbers are safe","      interpolatedText = '' + value;","    } else if (angular.isString(value)) {","      // strings must be interpolated (that's the job here)","      interpolatedText = $interpolate(value)(interpolationParams);","      interpolatedText = $translateSanitization.sanitize(interpolatedText, 'text', sanitizeStrategy, context);","    } else {","      // neither a number or a string, cant interpolate => empty string","      interpolatedText = '';","    }","","    return interpolatedText;","  };","","  return $translateInterpolator;","}","","$translateDefaultInterpolation.displayName = '$translateDefaultInterpolation';","","angular.module('pascalprecht.translate').constant('$STORAGE_KEY', 'NG_TRANSLATE_LANG_KEY');","","angular.module('pascalprecht.translate')","/**"," * @ngdoc directive"," * @name pascalprecht.translate.directive:translate"," * @requires $interpolate, "," * @requires $compile, "," * @requires $parse, "," * @requires $rootScope"," * @restrict AE"," *"," * @description"," * Translates given translation id either through attribute or DOM content."," * Internally it uses $translate service to translate the translation id. It possible to"," * pass an optional `translate-values` object literal as string into translation id."," *"," * @param {string=} translate Translation id which could be either string or interpolated string."," * @param {string=} translate-values Values to pass into translation id. Can be passed as object literal string or interpolated object."," * @param {string=} translate-attr-ATTR translate Translation id and put it into ATTR attribute."," * @param {string=} translate-default will be used unless translation was successful"," * @param {boolean=} translate-compile (default true if present) defines locally activation of {@link pascalprecht.translate.$translateProvider#methods_usePostCompiling}"," * @param {boolean=} translate-keep-content (default true if present) defines that in case a KEY could not be translated, that the existing content is left in the innerHTML}"," *"," * @example","   <example module=\"ngView\">","    <file name=\"index.html\">","      <div ng-controller=\"TranslateCtrl\">","","        <pre translate=\"TRANSLATION_ID\"></pre>","        <pre translate>TRANSLATION_ID</pre>","        <pre translate translate-attr-title=\"TRANSLATION_ID\"></pre>","        <pre translate=\"{{translationId}}\"></pre>","        <pre translate>{{translationId}}</pre>","        <pre translate=\"WITH_VALUES\" translate-values=\"{value: 5}\"></pre>","        <pre translate translate-values=\"{value: 5}\">WITH_VALUES</pre>","        <pre translate=\"WITH_VALUES\" translate-values=\"{{values}}\"></pre>","        <pre translate translate-values=\"{{values}}\">WITH_VALUES</pre>","        <pre translate translate-attr-title=\"WITH_VALUES\" translate-values=\"{{values}}\"></pre>","        <pre translate=\"WITH_CAMEL_CASE_KEY\" translate-value-camel-case-key=\"Hi\"></pre>","","      </div>","    </file>","    <file name=\"script.js\">","      angular.module('ngView', ['pascalprecht.translate'])","","      .config(function ($translateProvider) {","","        $translateProvider.translations('en',{","          'TRANSLATION_ID': 'Hello there!',","          'WITH_VALUES': 'The following value is dynamic: {{value}}',","          'WITH_CAMEL_CASE_KEY': 'The interpolation key is camel cased: {{camelCaseKey}}'","        }).preferredLanguage('en');","","      });","","      angular.module('ngView').controller('TranslateCtrl', function ($scope) {","        $scope.translationId = 'TRANSLATION_ID';","","        $scope.values = {","          value: 78","        };","      });","    </file>","    <file name=\"scenario.js\">","      it('should translate', function () {","        inject(function ($rootScope, $compile) {","          $rootScope.translationId = 'TRANSLATION_ID';","","          element = $compile('<p translate=\"TRANSLATION_ID\"></p>')($rootScope);","          $rootScope.$digest();","          expect(element.text()).toBe('Hello there!');","","          element = $compile('<p translate=\"{{translationId}}\"></p>')($rootScope);","          $rootScope.$digest();","          expect(element.text()).toBe('Hello there!');","","          element = $compile('<p translate>TRANSLATION_ID</p>')($rootScope);","          $rootScope.$digest();","          expect(element.text()).toBe('Hello there!');","","          element = $compile('<p translate>{{translationId}}</p>')($rootScope);","          $rootScope.$digest();","          expect(element.text()).toBe('Hello there!');","","          element = $compile('<p translate translate-attr-title=\"TRANSLATION_ID\"></p>')($rootScope);","          $rootScope.$digest();","          expect(element.attr('title')).toBe('Hello there!');","","          element = $compile('<p translate=\"WITH_CAMEL_CASE_KEY\" translate-value-camel-case-key=\"Hello\"></p>')($rootScope);","          $rootScope.$digest();","          expect(element.text()).toBe('The interpolation key is camel cased: Hello');","        });","      });","    </file>","   </example>"," */",".directive('translate', translateDirective);","function translateDirective($translate, $interpolate, $compile, $parse, $rootScope) {","","  'use strict';","","  /**","   * @name trim","   * @private","   *","   * @description","   * trim polyfill","   *","   * @returns {string} The string stripped of whitespace from both ends","   */","  var trim = function() {","    return this.toString().replace(/^\\s+|\\s+$/g, '');","  };","","  return {","    restrict: 'AE',","    scope: true,","    priority: $translate.directivePriority(),","    compile: function (tElement, tAttr) {","","      var translateValuesExist = (tAttr.translateValues) ?","        tAttr.translateValues : undefined;","","      var translateInterpolation = (tAttr.translateInterpolation) ?","        tAttr.translateInterpolation : undefined;","","      var translateValueExist = tElement[0].outerHTML.match(/translate-value-+/i);","","      var interpolateRegExp = '^(.*)(' + $interpolate.startSymbol() + '.*' + $interpolate.endSymbol() + ')(.*)',","          watcherRegExp = '^(.*)' + $interpolate.startSymbol() + '(.*)' + $interpolate.endSymbol() + '(.*)';","","      return function linkFn(scope, iElement, iAttr) {","","        scope.interpolateParams = {};","        scope.preText = '';","        scope.postText = '';","        scope.translateNamespace = getTranslateNamespace(scope);","        var translationIds = {};","","        var initInterpolationParams = function (interpolateParams, iAttr, tAttr) {","          // initial setup","          if (iAttr.translateValues) {","            angular.extend(interpolateParams, $parse(iAttr.translateValues)(scope.$parent));","          }","          // initially fetch all attributes if existing and fill the params","          if (translateValueExist) {","            for (var attr in tAttr) {","              if (Object.prototype.hasOwnProperty.call(iAttr, attr) && attr.substr(0, 14) === 'translateValue' && attr !== 'translateValues') {","                var attributeName = angular.lowercase(attr.substr(14, 1)) + attr.substr(15);","                interpolateParams[attributeName] = tAttr[attr];","              }","            }","          }","        };","","        // Ensures any change of the attribute \"translate\" containing the id will","        // be re-stored to the scope's \"translationId\".","        // If the attribute has no content, the element's text value (white spaces trimmed off) will be used.","        var observeElementTranslation = function (translationId) {","","          // Remove any old watcher","          if (angular.isFunction(observeElementTranslation._unwatchOld)) {","            observeElementTranslation._unwatchOld();","            observeElementTranslation._unwatchOld = undefined;","          }","","          if (angular.equals(translationId , '') || !angular.isDefined(translationId)) {","            var iElementText = trim.apply(iElement.text());","","            // Resolve translation id by inner html if required","            var interpolateMatches = iElementText.match(interpolateRegExp);","            // Interpolate translation id if required","            if (angular.isArray(interpolateMatches)) {","              scope.preText = interpolateMatches[1];","              scope.postText = interpolateMatches[3];","              translationIds.translate = $interpolate(interpolateMatches[2])(scope.$parent);","              var watcherMatches = iElementText.match(watcherRegExp);","              if (angular.isArray(watcherMatches) && watcherMatches[2] && watcherMatches[2].length) {","                observeElementTranslation._unwatchOld = scope.$watch(watcherMatches[2], function (newValue) {","                  translationIds.translate = newValue;","                  updateTranslations();","                });","              }","            } else {","              // do not assigne the translation id if it is empty.","              translationIds.translate = !iElementText ? undefined : iElementText;","            }","          } else {","            translationIds.translate = translationId;","          }","          updateTranslations();","        };","","        var observeAttributeTranslation = function (translateAttr) {","          iAttr.$observe(translateAttr, function (translationId) {","            translationIds[translateAttr] = translationId;","            updateTranslations();","          });","        };","","        // initial setup with values","        initInterpolationParams(scope.interpolateParams, iAttr, tAttr);","","        var firstAttributeChangedEvent = true;","        iAttr.$observe('translate', function (translationId) {","          if (typeof translationId === 'undefined') {","            // case of element \"<translate>xyz</translate>\"","            observeElementTranslation('');","          } else {","            // case of regular attribute","            if (translationId !== '' || !firstAttributeChangedEvent) {","              translationIds.translate = translationId;","              updateTranslations();","            }","          }","          firstAttributeChangedEvent = false;","        });","","        for (var translateAttr in iAttr) {","          if (iAttr.hasOwnProperty(translateAttr) && translateAttr.substr(0, 13) === 'translateAttr' && translateAttr.length > 13) {","            observeAttributeTranslation(translateAttr);","          }","        }","","        iAttr.$observe('translateDefault', function (value) {","          scope.defaultText = value;","          updateTranslations();","        });","","        if (translateValuesExist) {","          iAttr.$observe('translateValues', function (interpolateParams) {","            if (interpolateParams) {","              scope.$parent.$watch(function () {","                angular.extend(scope.interpolateParams, $parse(interpolateParams)(scope.$parent));","              });","            }","          });","        }","","        if (translateValueExist) {","          var observeValueAttribute = function (attrName) {","            iAttr.$observe(attrName, function (value) {","              var attributeName = angular.lowercase(attrName.substr(14, 1)) + attrName.substr(15);","              scope.interpolateParams[attributeName] = value;","            });","          };","          for (var attr in iAttr) {","            if (Object.prototype.hasOwnProperty.call(iAttr, attr) && attr.substr(0, 14) === 'translateValue' && attr !== 'translateValues') {","              observeValueAttribute(attr);","            }","          }","        }","","        // Master update function","        var updateTranslations = function () {","          for (var key in translationIds) {","            if (translationIds.hasOwnProperty(key) && translationIds[key] !== undefined) {","              updateTranslation(key, translationIds[key], scope, scope.interpolateParams, scope.defaultText, scope.translateNamespace);","            }","          }","        };","","        // Put translation processing function outside loop","        var updateTranslation = function(translateAttr, translationId, scope, interpolateParams, defaultTranslationText, translateNamespace) {","          if (translationId) {","            // if translation id starts with '.' and translateNamespace given, prepend namespace","            if (translateNamespace && translationId.charAt(0) === '.') {","              translationId = translateNamespace + translationId;","            }","","            $translate(translationId, interpolateParams, translateInterpolation, defaultTranslationText, scope.translateLanguage)","              .then(function (translation) {","                applyTranslation(translation, scope, true, translateAttr);","              }, function (translationId) {","                applyTranslation(translationId, scope, false, translateAttr);","              });","          } else {","            // as an empty string cannot be translated, we can solve this using successful=false","            applyTranslation(translationId, scope, false, translateAttr);","          }","        };","","        var applyTranslation = function (value, scope, successful, translateAttr) {","          if (!successful) {","            if (typeof scope.defaultText !== 'undefined') {","              value = scope.defaultText;","            }","          }","          if (translateAttr === 'translate') {","            // default translate into innerHTML","            if (successful || (!successful && !$translate.isKeepContent() && typeof iAttr.translateKeepContent === 'undefined')) {","              iElement.empty().append(scope.preText + value + scope.postText);","            }","            var globallyEnabled = $translate.isPostCompilingEnabled();","            var locallyDefined = typeof tAttr.translateCompile !== 'undefined';","            var locallyEnabled = locallyDefined && tAttr.translateCompile !== 'false';","            if ((globallyEnabled && !locallyDefined) || locallyEnabled) {","              $compile(iElement.contents())(scope);","            }","          } else {","            // translate attribute","            var attributeName = iAttr.$attr[translateAttr];","            if (attributeName.substr(0, 5) === 'data-') {","              // ensure html5 data prefix is stripped","              attributeName = attributeName.substr(5);","            }","            attributeName = attributeName.substr(15);","            iElement.attr(attributeName, value);","          }","        };","","        if (translateValuesExist || translateValueExist || iAttr.translateDefault) {","          scope.$watch('interpolateParams', updateTranslations, true);","        }","","        // Replaced watcher on translateLanguage with event listener","        scope.$on('translateLanguageChanged', updateTranslations);","","        // Ensures the text will be refreshed after the current language was changed","        // w/ $translate.use(...)","        var unbind = $rootScope.$on('$translateChangeSuccess', updateTranslations);","","        // ensure translation will be looked up at least one","        if (iElement.text().length) {","          if (iAttr.translate) {","            observeElementTranslation(iAttr.translate);","          } else {","            observeElementTranslation('');","          }","        } else if (iAttr.translate) {","          // ensure attribute will be not skipped","          observeElementTranslation(iAttr.translate);","        }","        updateTranslations();","        scope.$on('$destroy', unbind);","      };","    }","  };","}","","/**"," * Returns the scope's namespace."," * @private"," * @param scope"," * @returns {string}"," */","function getTranslateNamespace(scope) {","  'use strict';","  if (scope.translateNamespace) {","    return scope.translateNamespace;","  }","  if (scope.$parent) {","    return getTranslateNamespace(scope.$parent);","  }","}","","translateDirective.displayName = 'translateDirective';","","angular.module('pascalprecht.translate')","/**"," * @ngdoc directive"," * @name pascalprecht.translate.directive:translate-attr"," * @restrict A"," *"," * @description"," * Translates attributes like translate-attr-ATTR, but with an object like ng-class."," * Internally it uses `translate` service to translate translation id. It possible to"," * pass an optional `translate-values` object literal as string into translation id."," *"," * @param {string=} translate-attr Object literal mapping attributes to translation ids."," * @param {string=} translate-values Values to pass into the translation ids. Can be passed as object literal string."," *"," * @example","   <example module=\"ngView\">","    <file name=\"index.html\">","      <div ng-controller=\"TranslateCtrl\">","","        <input translate-attr=\"{ placeholder: translationId, title: 'WITH_VALUES' }\" translate-values=\"{value: 5}\" />","","      </div>","    </file>","    <file name=\"script.js\">","      angular.module('ngView', ['pascalprecht.translate'])","","      .config(function ($translateProvider) {","","        $translateProvider.translations('en',{","          'TRANSLATION_ID': 'Hello there!',","          'WITH_VALUES': 'The following value is dynamic: {{value}}',","        }).preferredLanguage('en');","","      });","","      angular.module('ngView').controller('TranslateCtrl', function ($scope) {","        $scope.translationId = 'TRANSLATION_ID';","","        $scope.values = {","          value: 78","        };","      });","    </file>","    <file name=\"scenario.js\">","      it('should translate', function () {","        inject(function ($rootScope, $compile) {","          $rootScope.translationId = 'TRANSLATION_ID';","","          element = $compile('<input translate-attr=\"{ placeholder: translationId, title: 'WITH_VALUES' }\" translate-values=\"{ value: 5 }\" />')($rootScope);","          $rootScope.$digest();","          expect(element.attr('placeholder)).toBe('Hello there!');","          expect(element.attr('title)).toBe('The following value is dynamic: 5');","        });","      });","    </file>","   </example>"," */",".directive('translateAttr', translateAttrDirective);","function translateAttrDirective($translate, $rootScope) {","","  'use strict';","","  return {","    restrict: 'A',","    priority: $translate.directivePriority(),","    link: function linkFn(scope, element, attr) {","","      var translateAttr,","          translateValues,","          previousAttributes = {};","","      // Main update translations function","      var updateTranslations = function () {","        angular.forEach(translateAttr, function (translationId, attributeName) {","          if (!translationId) {","            return;","          }","          previousAttributes[attributeName] = true;","","          // if translation id starts with '.' and translateNamespace given, prepend namespace","          if (scope.translateNamespace && translationId.charAt(0) === '.') {","            translationId = scope.translateNamespace + translationId;","          }","          $translate(translationId, translateValues, attr.translateInterpolation, undefined, scope.translateLanguage)","            .then(function (translation) {","              element.attr(attributeName, translation);","            }, function (translationId) {","              element.attr(attributeName, translationId);","            });","        });","","        // Removing unused attributes that were previously used","        angular.forEach(previousAttributes, function (flag, attributeName) {","          if (!translateAttr[attributeName]) {","            element.removeAttr(attributeName);","            delete previousAttributes[attributeName];","          }","        });","      };","","      // Watch for attribute changes","      watchAttribute(","        scope,","        attr.translateAttr,","        function (newValue) { translateAttr = newValue; },","        updateTranslations","      );","      // Watch for value changes","      watchAttribute(","        scope,","        attr.translateValues,","        function (newValue) { translateValues = newValue; },","        updateTranslations","      );","","      if (attr.translateValues) {","        scope.$watch(attr.translateValues, updateTranslations, true);","      }","","      // Replaced watcher on translateLanguage with event listener","      scope.$on('translateLanguageChanged', updateTranslations);","","      // Ensures the text will be refreshed after the current language was changed","      // w/ $translate.use(...)","      var unbind = $rootScope.$on('$translateChangeSuccess', updateTranslations);","","      updateTranslations();","      scope.$on('$destroy', unbind);","    }","  };","}","","function watchAttribute(scope, attribute, valueCallback, changeCallback) {","  'use strict';","  if (!attribute) {","    return;","  }","  if (attribute.substr(0, 2) === '::') {","    attribute = attribute.substr(2);","  } else {","    scope.$watch(attribute, function(newValue) {","      valueCallback(newValue);","      changeCallback();","    }, true);","  }","  valueCallback(scope.$eval(attribute));","}","","translateAttrDirective.displayName = 'translateAttrDirective';","","angular.module('pascalprecht.translate')","/**"," * @ngdoc directive"," * @name pascalprecht.translate.directive:translateCloak"," * @requires $translate"," * @restrict A"," *"," * $description"," * Adds a `translate-cloak` class name to the given element where this directive"," * is applied initially and removes it, once a loader has finished loading."," *"," * This directive can be used to prevent initial flickering when loading translation"," * data asynchronously."," *"," * The class name is defined in"," * {@link pascalprecht.translate.$translateProvider#cloakClassName $translate.cloakClassName()}."," *"," * @param {string=} translate-cloak If a translationId is provided, it will be used for showing"," *                                  or hiding the cloak. Basically it relies on the translation"," *                                  resolve."," */",".directive('translateCloak', translateCloakDirective);","","function translateCloakDirective($translate, $rootScope) {","","  'use strict';","","  return {","    compile : function (tElement) {","      var applyCloak = function (element) {","          element.addClass($translate.cloakClassName());","        },","        removeCloak = function (element) {","          element.removeClass($translate.cloakClassName());","        };","      applyCloak(tElement);","","      return function linkFn(scope, iElement, iAttr) {","        //Create bound functions that incorporate the active DOM element.","        var iRemoveCloak = removeCloak.bind(this, iElement), iApplyCloak = applyCloak.bind(this, iElement);","        if (iAttr.translateCloak && iAttr.translateCloak.length) {","          // Register a watcher for the defined translation allowing a fine tuned cloak","          iAttr.$observe('translateCloak', function (translationId) {","            $translate(translationId).then(iRemoveCloak, iApplyCloak);","          });","          $rootScope.$on('$translateChangeSuccess', function () {","            $translate(iAttr.translateCloak).then(iRemoveCloak, iApplyCloak);","          });","        } else {","          $translate.onReady(iRemoveCloak);","        }","      };","    }","  };","}","","translateCloakDirective.displayName = 'translateCloakDirective';","","angular.module('pascalprecht.translate')","/**"," * @ngdoc directive"," * @name pascalprecht.translate.directive:translateNamespace"," * @restrict A"," *"," * @description"," * Translates given translation id either through attribute or DOM content."," * Internally it uses `translate` filter to translate translation id. It possible to"," * pass an optional `translate-values` object literal as string into translation id."," *"," * @param {string=} translate namespace name which could be either string or interpolated string."," *"," * @example","   <example module=\"ngView\">","    <file name=\"index.html\">","      <div translate-namespace=\"CONTENT\">","","        <div>","            <h1 translate>.HEADERS.TITLE</h1>","            <h1 translate>.HEADERS.WELCOME</h1>","        </div>","","        <div translate-namespace=\".HEADERS\">","            <h1 translate>.TITLE</h1>","            <h1 translate>.WELCOME</h1>","        </div>","","      </div>","    </file>","    <file name=\"script.js\">","      angular.module('ngView', ['pascalprecht.translate'])","","      .config(function ($translateProvider) {","","        $translateProvider.translations('en',{","          'TRANSLATION_ID': 'Hello there!',","          'CONTENT': {","            'HEADERS': {","                TITLE: 'Title'","            }","          },","          'CONTENT.HEADERS.WELCOME': 'Welcome'","        }).preferredLanguage('en');","","      });","","    </file>","   </example>"," */",".directive('translateNamespace', translateNamespaceDirective);","","function translateNamespaceDirective() {","","  'use strict';","","  return {","    restrict: 'A',","    scope: true,","    compile: function () {","      return {","        pre: function (scope, iElement, iAttrs) {","          scope.translateNamespace = getTranslateNamespace(scope);","","          if (scope.translateNamespace && iAttrs.translateNamespace.charAt(0) === '.') {","            scope.translateNamespace += iAttrs.translateNamespace;","          } else {","            scope.translateNamespace = iAttrs.translateNamespace;","          }","        }","      };","    }","  };","}","","/**"," * Returns the scope's namespace."," * @private"," * @param scope"," * @returns {string}"," */","function getTranslateNamespace(scope) {","  'use strict';","  if (scope.translateNamespace) {","    return scope.translateNamespace;","  }","  if (scope.$parent) {","    return getTranslateNamespace(scope.$parent);","  }","}","","translateNamespaceDirective.displayName = 'translateNamespaceDirective';","","angular.module('pascalprecht.translate')","/**"," * @ngdoc directive"," * @name pascalprecht.translate.directive:translateLanguage"," * @restrict A"," *"," * @description"," * Forces the language to the directives in the underlying scope."," *"," * @param {string=} translate language that will be negotiated."," *"," * @example","   <example module=\"ngView\">","    <file name=\"index.html\">","      <div>","","        <div>","            <h1 translate>HELLO</h1>","        </div>","","        <div translate-language=\"de\">","            <h1 translate>HELLO</h1>","        </div>","","      </div>","    </file>","    <file name=\"script.js\">","      angular.module('ngView', ['pascalprecht.translate'])","","      .config(function ($translateProvider) {","","        $translateProvider","          .translations('en',{","            'HELLO': 'Hello world!'","          })","          .translations('de',{","            'HELLO': 'Hallo Welt!'","          })","          .preferredLanguage('en');","","      });","","    </file>","   </example>"," */",".directive('translateLanguage', translateLanguageDirective);","","function translateLanguageDirective() {","","  'use strict';","","  return {","    restrict: 'A',","    scope: true,","    compile: function () {","      return function linkFn(scope, iElement, iAttrs) {","","        iAttrs.$observe('translateLanguage', function (newTranslateLanguage) {","          scope.translateLanguage = newTranslateLanguage;","        });","","        scope.$watch('translateLanguage', function(){","          scope.$broadcast('translateLanguageChanged');","        });","      };","    }","  };","}","","translateLanguageDirective.displayName = 'translateLanguageDirective';","","angular.module('pascalprecht.translate')","/**"," * @ngdoc filter"," * @name pascalprecht.translate.filter:translate"," * @requires $parse"," * @requires pascalprecht.translate.$translate"," * @function"," *"," * @description"," * Uses `$translate` service to translate contents. Accepts interpolate parameters"," * to pass dynamized values though translation."," *"," * @param {string} translationId A translation id to be translated."," * @param {*=} interpolateParams Optional object literal (as hash or string) to pass values into translation."," *"," * @returns {string} Translated text."," *"," * @example","   <example module=\"ngView\">","    <file name=\"index.html\">","      <div ng-controller=\"TranslateCtrl\">","","        <pre>{{ 'TRANSLATION_ID' | translate }}</pre>","        <pre>{{ translationId | translate }}</pre>","        <pre>{{ 'WITH_VALUES' | translate:'{value: 5}' }}</pre>","        <pre>{{ 'WITH_VALUES' | translate:values }}</pre>","","      </div>","    </file>","    <file name=\"script.js\">","      angular.module('ngView', ['pascalprecht.translate'])","","      .config(function ($translateProvider) {","","        $translateProvider.translations('en', {","          'TRANSLATION_ID': 'Hello there!',","          'WITH_VALUES': 'The following value is dynamic: {{value}}'","        });","        $translateProvider.preferredLanguage('en');","","      });","","      angular.module('ngView').controller('TranslateCtrl', function ($scope) {","        $scope.translationId = 'TRANSLATION_ID';","","        $scope.values = {","          value: 78","        };","      });","    </file>","   </example>"," */",".filter('translate', translateFilterFactory);","","function translateFilterFactory($parse, $translate) {","","  'use strict';","","  var translateFilter = function (translationId, interpolateParams, interpolation, forceLanguage) {","    if (!angular.isObject(interpolateParams)) {","      var ctx = this || {","        '__SCOPE_IS_NOT_AVAILABLE': 'More info at https://github.com/angular/angular.js/commit/8863b9d04c722b278fa93c5d66ad1e578ad6eb1f'","        };","      interpolateParams = $parse(interpolateParams)(ctx);","    }","","    return $translate.instant(translationId, interpolateParams, interpolation, forceLanguage);","  };","","  if ($translate.statefulFilter()) {","    translateFilter.$stateful = true;","  }","","  return translateFilter;","}","","translateFilterFactory.displayName = 'translateFilterFactory';","","angular.module('pascalprecht.translate')","","/**"," * @ngdoc object"," * @name pascalprecht.translate.$translationCache"," * @requires $cacheFactory"," *"," * @description"," * The first time a translation table is used, it is loaded in the translation cache for quick retrieval. You"," * can load translation tables directly into the cache by consuming the"," * `$translationCache` service directly."," *"," * @return {object} $cacheFactory object."," */","  .factory('$translationCache', $translationCache);","","function $translationCache($cacheFactory) {","","  'use strict';","","  return $cacheFactory('translations');","}","","$translationCache.displayName = '$translationCache';","return 'pascalprecht.translate';","","}));",""],"l":{"6":2,"7":2,"9":0,"10":0,"12":2,"16":2,"18":0,"29":2,"30":2,"31":2,"32":2,"33":2,"34":2,"35":2,"36":2,"37":2,"40":1,"44":0,"47":0,"48":0,"49":0,"50":0,"54":0,"58":0,"60":0,"61":0,"62":0,"64":0,"66":0,"67":0,"71":0,"81":0,"83":1,"87":0,"124":0,"126":0,"127":0,"129":0,"132":0,"133":0,"135":0,"138":0,"139":0,"141":0,"144":0,"145":0,"147":0,"150":0,"151":0,"152":0,"153":0,"155":0,"158":0,"161":0,"162":0,"164":0,"169":0,"183":0,"184":0,"185":0,"199":0,"200":0,"201":0,"215":0,"216":0,"217":0,"218":0,"231":0,"233":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"246":0,"247":0,"250":0,"252":0,"255":0,"259":0,"260":0,"261":0,"262":0,"266":0,"267":0,"269":0,"270":0,"273":0,"285":0,"286":0,"305":0,"306":0,"309":0,"310":0,"313":0,"314":0,"317":0,"318":0,"321":0,"322":0,"327":0,"328":0,"329":0,"330":0,"333":0,"334":0,"335":0,"337":0,"340":0,"341":0,"342":0,"344":0,"347":0,"348":0,"349":0,"350":0,"351":0,"353":0,"354":0,"356":0,"357":0,"361":0,"362":0,"365":0,"366":0,"369":0,"371":0,"373":0,"374":0,"375":0,"376":0,"377":0,"379":0,"393":0,"397":1,"401":0,"432":0,"435":0,"436":0,"437":0,"440":0,"441":0,"442":0,"445":0,"446":0,"447":0,"451":0,"454":0,"457":0,"458":0,"461":0,"467":0,"468":0,"469":0,"470":0,"471":0,"477":0,"478":0,"479":0,"480":0,"484":0,"486":0,"489":0,"490":0,"491":0,"492":0,"494":0,"496":0,"510":0,"511":0,"512":0,"513":0,"516":0,"528":0,"529":0,"532":0,"533":0,"534":0,"537":0,"542":0,"543":0,"547":0,"548":0,"551":0,"552":0,"553":0,"554":0,"555":0,"556":0,"559":0,"560":0,"562":0,"563":0,"564":0,"565":0,"573":0,"575":0,"576":0,"580":0,"619":0,"621":0,"622":0,"625":0,"626":0,"627":0,"630":0,"631":0,"633":0,"635":0,"638":0,"652":0,"653":0,"654":0,"656":0,"657":0,"672":0,"673":0,"674":0,"676":0,"677":0,"688":0,"689":0,"691":0,"692":0,"694":0,"695":0,"697":0,"698":0,"699":0,"701":0,"702":0,"703":0,"705":0,"706":0,"708":0,"710":0,"712":0,"715":0,"717":0,"729":0,"730":0,"731":0,"743":0,"744":0,"759":0,"760":0,"761":0,"774":0,"775":0,"776":0,"791":0,"792":0,"793":0,"794":0,"796":0,"798":0,"799":0,"800":0,"802":0,"823":0,"824":0,"825":0,"826":0,"840":0,"841":0,"842":0,"844":0,"845":0,"859":0,"860":0,"861":0,"863":0,"864":0,"880":0,"881":0,"882":0,"885":0,"886":0,"887":0,"888":0,"889":0,"890":0,"891":0,"892":0,"894":0,"895":0,"898":0,"900":0,"901":0,"903":0,"922":0,"923":0,"924":0,"926":0,"928":0,"929":0,"931":0,"944":0,"945":0,"958":0,"959":0,"960":0,"961":0,"963":0,"965":0,"966":0,"969":0,"982":0,"983":0,"996":0,"997":0,"1011":0,"1012":0,"1013":0,"1014":0,"1026":0,"1027":0,"1038":0,"1039":0,"1050":0,"1051":0,"1052":0,"1065":0,"1066":0,"1067":0,"1069":0,"1070":0,"1085":0,"1086":0,"1115":0,"1116":0,"1117":0,"1138":0,"1139":0,"1140":0,"1162":0,"1163":0,"1164":0,"1208":0,"1210":0,"1211":0,"1212":0,"1213":0,"1218":0,"1220":0,"1242":0,"1244":0,"1246":0,"1247":0,"1249":0,"1252":0,"1271":0,"1272":0,"1273":0,"1274":0,"1275":0,"1277":0,"1279":0,"1296":0,"1297":0,"1299":0,"1300":0,"1302":0,"1303":0,"1305":0,"1306":0,"1308":0,"1310":0,"1324":0,"1325":0,"1327":0,"1330":0,"1331":0,"1349":0,"1350":0,"1352":0,"1355":0,"1356":0,"1370":0,"1371":0,"1372":0,"1374":0,"1376":0,"1397":0,"1398":0,"1399":0,"1431":0,"1433":0,"1441":0,"1442":0,"1443":0,"1445":0,"1449":0,"1450":0,"1455":0,"1459":0,"1460":0,"1461":0,"1463":0,"1464":0,"1465":0,"1466":0,"1467":0,"1470":0,"1471":0,"1473":0,"1474":0,"1477":0,"1479":0,"1482":0,"1485":0,"1488":0,"1489":0,"1492":0,"1493":0,"1497":0,"1499":0,"1503":0,"1504":0,"1506":0,"1507":0,"1512":0,"1515":0,"1516":0,"1520":0,"1523":0,"1527":0,"1529":0,"1531":0,"1532":0,"1534":0,"1536":0,"1538":0,"1541":0,"1557":0,"1559":0,"1560":0,"1562":0,"1563":0,"1565":0,"1579":0,"1580":0,"1583":0,"1584":0,"1587":0,"1590":0,"1592":0,"1593":0,"1595":0,"1598":0,"1599":0,"1614":0,"1615":0,"1616":0,"1619":0,"1621":0,"1622":0,"1624":0,"1625":0,"1627":0,"1630":0,"1637":0,"1638":0,"1639":0,"1641":0,"1642":0,"1643":0,"1646":0,"1648":0,"1649":0,"1653":0,"1655":0,"1657":0,"1658":0,"1659":0,"1660":0,"1662":0,"1664":0,"1667":0,"1670":0,"1671":0,"1673":0,"1674":0,"1680":0,"1681":0,"1682":0,"1684":0,"1686":0,"1688":0,"1690":0,"1704":0,"1705":0,"1706":0,"1707":0,"1708":0,"1709":0,"1710":0,"1711":0,"1713":0,"1714":0,"1716":0,"1718":0,"1737":0,"1738":0,"1740":0,"1741":0,"1742":0,"1743":0,"1744":0,"1745":0,"1748":0,"1749":0,"1751":0,"1754":0,"1756":0,"1759":0,"1761":0,"1763":0,"1782":0,"1783":0,"1785":0,"1786":0,"1787":0,"1788":0,"1790":0,"1791":0,"1792":0,"1793":0,"1795":0,"1796":0,"1798":0,"1801":0,"1819":0,"1822":0,"1823":0,"1825":0,"1844":0,"1845":0,"1847":0,"1848":0,"1849":0,"1851":0,"1856":0,"1862":0,"1863":0,"1865":0,"1869":0,"1870":0,"1872":0,"1876":0,"1893":0,"1894":0,"1896":0,"1897":0,"1898":0,"1899":0,"1900":0,"1903":0,"1916":0,"1918":0,"1930":0,"1932":0,"1935":0,"1937":0,"1939":0,"1943":0,"1944":0,"1947":0,"1949":0,"1953":0,"1954":0,"1955":0,"1958":0,"1960":0,"1961":0,"1967":0,"1968":0,"1970":0,"1972":0,"1974":0,"1978":0,"1979":0,"1981":0,"1984":0,"1985":0,"1987":0,"1991":0,"1994":0,"1996":0,"2000":0,"2001":0,"2005":0,"2006":0,"2009":0,"2010":0,"2012":0,"2013":0,"2016":0,"2018":0,"2019":0,"2025":0,"2026":0,"2027":0,"2028":0,"2032":0,"2034":0,"2038":0,"2041":0,"2042":0,"2043":0,"2045":0,"2048":0,"2049":0,"2051":0,"2053":0,"2055":0,"2057":0,"2058":0,"2062":0,"2065":0,"2066":0,"2067":0,"2068":0,"2069":0,"2086":0,"2087":0,"2088":0,"2090":0,"2103":0,"2104":0,"2117":0,"2118":0,"2133":0,"2134":0,"2135":0,"2139":0,"2140":0,"2141":0,"2142":0,"2143":0,"2148":0,"2150":0,"2151":0,"2153":0,"2170":0,"2171":0,"2172":0,"2173":0,"2175":0,"2176":0,"2177":0,"2195":0,"2196":0,"2209":0,"2210":0,"2227":0,"2254":0,"2255":0,"2256":0,"2259":0,"2260":0,"2262":0,"2265":0,"2267":0,"2268":0,"2271":0,"2272":0,"2277":0,"2278":0,"2279":0,"2280":0,"2281":0,"2282":0,"2283":0,"2285":0,"2287":0,"2288":0,"2289":0,"2290":0,"2292":0,"2293":0,"2295":0,"2298":0,"2299":0,"2300":0,"2302":0,"2303":0,"2306":0,"2307":0,"2309":0,"2313":0,"2314":0,"2317":0,"2330":0,"2331":0,"2344":0,"2345":0,"2358":0,"2359":0,"2372":0,"2373":0,"2386":0,"2387":0,"2419":0,"2420":0,"2421":0,"2424":0,"2426":0,"2429":1,"2430":0,"2432":0,"2434":0,"2436":0,"2438":0,"2440":0,"2444":0,"2448":0,"2450":0,"2451":0,"2453":0,"2454":0,"2458":0,"2459":0,"2466":0,"2470":0,"2472":0,"2473":0,"2474":0,"2476":0,"2478":0,"2480":0,"2483":0,"2486":0,"2511":0,"2514":0,"2518":0,"2519":0,"2523":0,"2524":0,"2529":0,"2530":0,"2531":0,"2532":0,"2534":0,"2538":0,"2539":0,"2543":0,"2544":0,"2547":0,"2548":0,"2549":0,"2551":0,"2552":0,"2554":0,"2555":0,"2557":0,"2558":0,"2559":0,"2560":0,"2561":0,"2564":0,"2565":0,"2569":0,"2570":0,"2571":0,"2574":0,"2579":0,"2580":0,"2581":0,"2584":0,"2585":0,"2590":0,"2603":0,"2604":0,"2617":0,"2618":0,"2622":0,"2623":0,"2627":0,"2628":0,"2643":0,"2644":0,"2647":0,"2648":0,"2649":0,"2665":0,"2666":0,"2667":0,"2668":0,"2670":0,"2671":0,"2673":0,"2675":0,"2690":0,"2691":0,"2692":0,"2694":0,"2713":0,"2714":0,"2715":0,"2716":0,"2718":0,"2722":0,"2723":0,"2724":0,"2725":0,"2727":0,"2728":0,"2729":0,"2730":0,"2733":0,"2737":0,"2738":0,"2739":0,"2745":0,"2746":0,"2747":0,"2748":0,"2749":0,"2751":0,"2752":0,"2753":0,"2754":0,"2759":0,"2762":0,"2766":0,"2783":0,"2785":1,"2789":0,"2803":0,"2804":0,"2817":0,"2818":0,"2825":0,"2826":0,"2827":0,"2849":0,"2850":0,"2851":0,"2853":0,"2854":0,"2856":0,"2857":0,"2859":0,"2860":0,"2863":0,"2866":0,"2869":0,"2872":0,"2874":0,"2876":0,"2972":1,"2985":0,"2986":0,"2989":0,"2995":0,"2998":0,"3001":0,"3003":0,"3006":0,"3008":0,"3009":0,"3010":0,"3011":0,"3012":0,"3014":0,"3016":0,"3017":0,"3020":0,"3021":0,"3022":0,"3023":0,"3024":0,"3033":0,"3036":0,"3037":0,"3038":0,"3041":0,"3042":0,"3045":0,"3047":0,"3048":0,"3049":0,"3050":0,"3051":0,"3052":0,"3053":0,"3054":0,"3055":0,"3060":0,"3063":0,"3065":0,"3068":0,"3069":0,"3070":0,"3071":0,"3076":0,"3078":0,"3079":0,"3080":0,"3082":0,"3085":0,"3086":0,"3087":0,"3090":0,"3093":0,"3094":0,"3095":0,"3099":0,"3100":0,"3101":0,"3104":0,"3105":0,"3106":0,"3107":0,"3108":0,"3114":0,"3115":0,"3116":0,"3117":0,"3118":0,"3121":0,"3122":0,"3123":0,"3129":0,"3130":0,"3131":0,"3132":0,"3138":0,"3139":0,"3141":0,"3142":0,"3145":0,"3147":0,"3149":0,"3153":0,"3157":0,"3158":0,"3159":0,"3160":0,"3163":0,"3165":0,"3166":0,"3168":0,"3169":0,"3170":0,"3171":0,"3172":0,"3176":0,"3177":0,"3179":0,"3181":0,"3182":0,"3186":0,"3187":0,"3191":0,"3195":0,"3198":0,"3199":0,"3200":0,"3202":0,"3204":0,"3206":0,"3208":0,"3209":0,"3221":1,"3223":0,"3224":0,"3226":0,"3227":0,"3231":0,"3233":0,"3291":1,"3295":0,"3300":0,"3305":0,"3306":0,"3307":0,"3308":0,"3310":0,"3313":0,"3314":0,"3316":0,"3318":0,"3320":0,"3325":0,"3326":0,"3327":0,"3328":0,"3334":0,"3337":0,"3341":0,"3344":0,"3348":0,"3349":0,"3353":0,"3357":0,"3359":0,"3360":0,"3365":1,"3367":0,"3368":0,"3370":0,"3371":0,"3373":0,"3374":0,"3375":0,"3378":0,"3381":0,"3383":0,"3406":1,"3410":0,"3412":0,"3413":0,"3416":0,"3418":0,"3420":0,"3422":0,"3423":0,"3425":0,"3426":0,"3428":0,"3429":0,"3432":0,"3439":0,"3441":0,"3493":1,"3497":0,"3501":0,"3503":0,"3505":0,"3506":0,"3508":0,"3522":1,"3524":0,"3525":0,"3527":0,"3528":0,"3532":0,"3534":0,"3581":1,"3585":0,"3589":0,"3591":0,"3592":0,"3595":0,"3596":0,"3603":0,"3605":0,"3659":1,"3663":0,"3664":0,"3665":0,"3668":0,"3671":0,"3674":0,"3675":0,"3678":0,"3681":0,"3683":0,"3699":1,"3703":0,"3706":0,"3707":0}}}